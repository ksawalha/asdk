/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@azure/storage-blob@12.26.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var coreRestPipeline=require("@azure/core-rest-pipeline"),tslib=require("tslib"),coreAuth=require("@azure/core-auth"),coreUtil=require("@azure/core-util"),coreHttpCompat=require("@azure/core-http-compat"),coreClient=require("@azure/core-client"),coreXml=require("@azure/core-xml"),logger$1=require("@azure/logger"),abortController=require("@azure/abort-controller"),crypto=require("crypto"),coreTracing=require("@azure/core-tracing"),stream=require("stream"),coreLro=require("@azure/core-lro"),events=require("events"),fs=require("fs"),util=require("util"),buffer=require("buffer");function _interopNamespaceDefault(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var r=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,r.get?r:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var coreHttpCompat__namespace=_interopNamespaceDefault(coreHttpCompat),coreClient__namespace=_interopNamespaceDefault(coreClient),fs__namespace=_interopNamespaceDefault(fs),util__namespace=_interopNamespaceDefault(util);const logger=logger$1.createClientLogger("storage-blob");class BaseRequestPolicy{constructor(e,t){this._nextPolicy=e,this._options=t}shouldLog(e){return this._options.shouldLog(e)}log(e,t){this._options.log(e,t)}}const SDK_VERSION="12.26.0",SERVICE_VERSION="2025-01-05",BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES=268435456,BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES=4194304e3,BLOCK_BLOB_MAX_BLOCKS=5e4,DEFAULT_BLOCK_BUFFER_SIZE_BYTES=8388608,DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES=4194304,DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS=5,REQUEST_TIMEOUT=1e5,StorageOAuthScopes="https://storage.azure.com/.default",URLConstants={Parameters:{FORCE_BROWSER_NO_CACHE:"_",SIGNATURE:"sig",SNAPSHOT:"snapshot",VERSIONID:"versionid",TIMEOUT:"timeout"}},HTTPURLConnection={HTTP_ACCEPTED:202,HTTP_CONFLICT:409,HTTP_NOT_FOUND:404,HTTP_PRECON_FAILED:412,HTTP_RANGE_NOT_SATISFIABLE:416},HeaderConstants={AUTHORIZATION:"Authorization",AUTHORIZATION_SCHEME:"Bearer",CONTENT_ENCODING:"Content-Encoding",CONTENT_ID:"Content-ID",CONTENT_LANGUAGE:"Content-Language",CONTENT_LENGTH:"Content-Length",CONTENT_MD5:"Content-Md5",CONTENT_TRANSFER_ENCODING:"Content-Transfer-Encoding",CONTENT_TYPE:"Content-Type",COOKIE:"Cookie",DATE:"date",IF_MATCH:"if-match",IF_MODIFIED_SINCE:"if-modified-since",IF_NONE_MATCH:"if-none-match",IF_UNMODIFIED_SINCE:"if-unmodified-since",PREFIX_FOR_STORAGE:"x-ms-",RANGE:"Range",USER_AGENT:"User-Agent",X_MS_CLIENT_REQUEST_ID:"x-ms-client-request-id",X_MS_COPY_SOURCE:"x-ms-copy-source",X_MS_DATE:"x-ms-date",X_MS_ERROR_CODE:"x-ms-error-code",X_MS_VERSION:"x-ms-version",X_MS_CopySourceErrorCode:"x-ms-copy-source-error-code"},ETagNone="",ETagAny="*",SIZE_1_MB=1048576,BATCH_MAX_REQUEST=256,BATCH_MAX_PAYLOAD_IN_BYTES=4194304,HTTP_LINE_ENDING="\r\n",HTTP_VERSION_1_1="HTTP/1.1",EncryptionAlgorithmAES25="AES256",DevelopmentConnectionString="DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;",StorageBlobLoggingAllowedHeaderNames=["Access-Control-Allow-Origin","Cache-Control","Content-Length","Content-Type","Date","Request-Id","traceparent","Transfer-Encoding","User-Agent","x-ms-client-request-id","x-ms-date","x-ms-error-code","x-ms-request-id","x-ms-return-client-request-id","x-ms-version","Accept-Ranges","Content-Disposition","Content-Encoding","Content-Language","Content-MD5","Content-Range","ETag","Last-Modified","Server","Vary","x-ms-content-crc64","x-ms-copy-action","x-ms-copy-completion-time","x-ms-copy-id","x-ms-copy-progress","x-ms-copy-status","x-ms-has-immutability-policy","x-ms-has-legal-hold","x-ms-lease-state","x-ms-lease-status","x-ms-range","x-ms-request-server-encrypted","x-ms-server-encrypted","x-ms-snapshot","x-ms-source-range","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","x-ms-access-tier","x-ms-access-tier-change-time","x-ms-access-tier-inferred","x-ms-account-kind","x-ms-archive-status","x-ms-blob-append-offset","x-ms-blob-cache-control","x-ms-blob-committed-block-count","x-ms-blob-condition-appendpos","x-ms-blob-condition-maxsize","x-ms-blob-content-disposition","x-ms-blob-content-encoding","x-ms-blob-content-language","x-ms-blob-content-length","x-ms-blob-content-md5","x-ms-blob-content-type","x-ms-blob-public-access","x-ms-blob-sequence-number","x-ms-blob-type","x-ms-copy-destination-snapshot","x-ms-creation-time","x-ms-default-encryption-scope","x-ms-delete-snapshots","x-ms-delete-type-permanent","x-ms-deny-encryption-scope-override","x-ms-encryption-algorithm","x-ms-if-sequence-number-eq","x-ms-if-sequence-number-le","x-ms-if-sequence-number-lt","x-ms-incremental-copy","x-ms-lease-action","x-ms-lease-break-period","x-ms-lease-duration","x-ms-lease-id","x-ms-lease-time","x-ms-page-write","x-ms-proposed-lease-id","x-ms-range-get-content-md5","x-ms-rehydrate-priority","x-ms-sequence-number-action","x-ms-sku-name","x-ms-source-content-md5","x-ms-source-if-match","x-ms-source-if-modified-since","x-ms-source-if-none-match","x-ms-source-if-unmodified-since","x-ms-tag-count","x-ms-encryption-key-sha256","x-ms-copy-source-error-code","x-ms-copy-source-status-code","x-ms-if-tags","x-ms-source-if-tags"],StorageBlobLoggingAllowedQueryParameters=["comp","maxresults","rscc","rscd","rsce","rscl","rsct","se","si","sip","sp","spr","sr","srt","ss","st","sv","include","marker","prefix","copyid","restype","blockid","blocklisttype","delimiter","prevsnapshot","ske","skoid","sks","skt","sktid","skv","snapshot"],BlobUsesCustomerSpecifiedEncryptionMsg="BlobUsesCustomerSpecifiedEncryption",BlobDoesNotUseCustomerSpecifiedEncryption="BlobDoesNotUseCustomerSpecifiedEncryption",PathStylePorts=["10000","10001","10002","10003","10004","10100","10101","10102","10103","10104","11000","11001","11002","11003","11004","11100","11101","11102","11103","11104"];function escapeURLPath(e){const t=new URL(e);let a=t.pathname;return a=a||"/",a=escape(a),t.pathname=a,t.toString()}function getProxyUriFromDevConnString(e){let t="";if(-1!==e.search("DevelopmentStorageProxyUri=")){const a=e.split(";");for(const e of a)e.trim().startsWith("DevelopmentStorageProxyUri=")&&(t=e.trim().match("DevelopmentStorageProxyUri=(.*)")[1])}return t}function getValueInConnString(e,t){const a=e.split(";");for(const e of a)if(e.trim().startsWith(t))return e.trim().match(t+"=(.*)")[1];return""}function extractConnectionStringParts(e){let t="";e.startsWith("UseDevelopmentStorage=true")&&(t=getProxyUriFromDevConnString(e),e=DevelopmentConnectionString);let a=getValueInConnString(e,"BlobEndpoint");if(a=a.endsWith("/")?a.slice(0,-1):a,-1!==e.search("DefaultEndpointsProtocol=")&&-1!==e.search("AccountKey=")){let r="",i="",n=Buffer.from("accountKey","base64"),s="";if(i=getValueInConnString(e,"AccountName"),n=Buffer.from(getValueInConnString(e,"AccountKey"),"base64"),!a){r=getValueInConnString(e,"DefaultEndpointsProtocol");const t=r.toLowerCase();if("https"!==t&&"http"!==t)throw new Error("Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'");if(s=getValueInConnString(e,"EndpointSuffix"),!s)throw new Error("Invalid EndpointSuffix in the provided Connection String");a=`${r}://${i}.blob.${s}`}if(!i)throw new Error("Invalid AccountName in the provided Connection String");if(0===n.length)throw new Error("Invalid AccountKey in the provided Connection String");return{kind:"AccountConnString",url:a,accountName:i,accountKey:n,proxyUri:t}}{let t=getValueInConnString(e,"SharedAccessSignature"),r=getValueInConnString(e,"AccountName");if(r||(r=getAccountNameFromUrl(a)),!a)throw new Error("Invalid BlobEndpoint in the provided SAS Connection String");if(!t)throw new Error("Invalid SharedAccessSignature in the provided SAS Connection String");return t.startsWith("?")&&(t=t.substring(1)),{kind:"SASConnString",url:a,accountName:r,accountSas:t}}}function escape(e){return encodeURIComponent(e).replace(/%2F/g,"/").replace(/'/g,"%27").replace(/\+/g,"%20").replace(/%25/g,"%")}function appendToURLPath(e,t){const a=new URL(e);let r=a.pathname;return r=r?r.endsWith("/")?`${r}${t}`:`${r}/${t}`:t,a.pathname=r,a.toString()}function setURLParameter(e,t,a){const r=new URL(e),i=encodeURIComponent(t),n=a?encodeURIComponent(a):void 0,s=""===r.search?"?":r.search,o=[];for(const e of s.slice(1).split("&"))if(e){const[t]=e.split("=",2);t!==i&&o.push(e)}return n&&o.push(`${i}=${n}`),r.search=o.length?`?${o.join("&")}`:"",r.toString()}function getURLParameter(e,t){var a;return null!==(a=new URL(e).searchParams.get(t))&&void 0!==a?a:void 0}function setURLHost(e,t){const a=new URL(e);return a.hostname=t,a.toString()}function getURLPath(e){try{return new URL(e).pathname}catch(e){return}}function getURLScheme(e){try{const t=new URL(e);return t.protocol.endsWith(":")?t.protocol.slice(0,-1):t.protocol}catch(e){return}}function getURLPathAndQuery(e){const t=new URL(e),a=t.pathname;if(!a)throw new RangeError("Invalid url without valid path.");let r=t.search||"";return r=r.trim(),""!==r&&(r=r.startsWith("?")?r:`?${r}`),`${a}${r}`}function getURLQueries(e){let t=new URL(e).search;if(!t)return{};t=t.trim(),t=t.startsWith("?")?t.substring(1):t;let a=t.split("&");a=a.filter((e=>{const t=e.indexOf("="),a=e.lastIndexOf("=");return t>0&&t===a&&a<e.length-1}));const r={};for(const e of a){const t=e.split("="),a=t[0],i=t[1];r[a]=i}return r}function appendToURLQuery(e,t){const a=new URL(e);let r=a.search;return r?r+="&"+t:r=t,a.search=r,a.toString()}function truncatedISO8061Date(e,t=!0){const a=e.toISOString();return t?a.substring(0,a.length-1)+"0000Z":a.substring(0,a.length-5)+"Z"}function base64encode(e){return coreUtil.isNode?Buffer.from(e).toString("base64"):btoa(e)}function generateBlockID(e,t){e.length>42&&(e=e.slice(0,42));return base64encode(e+padStart(t.toString(),48-e.length,"0"))}async function delay(e,t,a){return new Promise(((r,i)=>{let n;const s=()=>{void 0!==n&&clearTimeout(n),i(a)};n=setTimeout((()=>{void 0!==t&&t.removeEventListener("abort",s),r()}),e),void 0!==t&&t.addEventListener("abort",s)}))}function padStart(e,t,a=" "){return String.prototype.padStart?e.padStart(t,a):(a=a||" ",e.length>t?e:((t-=e.length)>a.length&&(a+=a.repeat(t/a.length)),a.slice(0,t)+e))}function iEqual(e,t){return e.toLocaleLowerCase()===t.toLocaleLowerCase()}function getAccountNameFromUrl(e){const t=new URL(e);let a;try{return a="blob"===t.hostname.split(".")[1]?t.hostname.split(".")[0]:isIpEndpointStyle(t)?t.pathname.split("/")[1]:"",a}catch(e){throw new Error("Unable to extract accountName with provided information.")}}function isIpEndpointStyle(e){const t=e.host;return/^.*:.*:.*$|^(localhost|host.docker.internal)(:[0-9]+)?$|^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])){3}(:[0-9]+)?$/.test(t)||Boolean(e.port)&&PathStylePorts.includes(e.port)}function toBlobTagsString(e){if(void 0===e)return;const t=[];for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.push(`${encodeURIComponent(a)}=${encodeURIComponent(r)}`)}return t.join("&")}function toBlobTags(e){if(void 0===e)return;const t={blobTagSet:[]};for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.blobTagSet.push({key:a,value:r})}return t}function toTags(e){if(void 0===e)return;const t={};for(const a of e.blobTagSet)t[a.key]=a.value;return t}function toQuerySerialization(e){if(void 0!==e)switch(e.kind){case"csv":return{format:{type:"delimited",delimitedTextConfiguration:{columnSeparator:e.columnSeparator||",",fieldQuote:e.fieldQuote||"",recordSeparator:e.recordSeparator,escapeChar:e.escapeCharacter||"",headersPresent:e.hasHeaders||!1}}};case"json":return{format:{type:"json",jsonTextConfiguration:{recordSeparator:e.recordSeparator}}};case"arrow":return{format:{type:"arrow",arrowConfiguration:{schema:e.schema}}};case"parquet":return{format:{type:"parquet"}};default:throw Error("Invalid BlobQueryTextConfiguration.")}}function parseObjectReplicationRecord(e){if(!e)return;if("policy-id"in e)return;const t=[];for(const a in e){const r=a.split("_"),i="or-";r[0].startsWith(i)&&(r[0]=r[0].substring(i.length));const n={ruleId:r[1],replicationStatus:e[a]},s=t.findIndex((e=>e.policyId===r[0]));s>-1?t[s].rules.push(n):t.push({policyId:r[0],rules:[n]})}return t}function httpAuthorizationToString(e){return e?e.scheme+" "+e.value:void 0}function BlobNameToString(e){return e.encoded?decodeURIComponent(e.content):e.content}function ConvertInternalResponseOfListBlobFlat(e){return Object.assign(Object.assign({},e),{segment:{blobItems:e.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name)})))}})}function ConvertInternalResponseOfListBlobHierarchy(e){var t;return Object.assign(Object.assign({},e),{segment:{blobPrefixes:null===(t=e.segment.blobPrefixes)||void 0===t?void 0:t.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name)}))),blobItems:e.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name)})))}})}function*ExtractPageRangeInfoItems(e){let t=[],a=[];e.pageRange&&(t=e.pageRange),e.clearRange&&(a=e.clearRange);let r=0,i=0;for(;r<t.length&&i<a.length;)t[r].start<a[i].start?(yield{start:t[r].start,end:t[r].end,isClear:!1},++r):(yield{start:a[i].start,end:a[i].end,isClear:!0},++i);for(;r<t.length;++r)yield{start:t[r].start,end:t[r].end,isClear:!1};for(;i<a.length;++i)yield{start:a[i].start,end:a[i].end,isClear:!0}}function EscapePath(e){const t=e.split("/");for(let e=0;e<t.length;e++)t[e]=encodeURIComponent(t[e]);return t.join("/")}function assertResponse(e){if("_response"in e)return e;throw new TypeError(`Unexpected response object ${e}`)}exports.StorageRetryPolicyType=void 0,function(e){e[e.EXPONENTIAL=0]="EXPONENTIAL",e[e.FIXED=1]="FIXED"}(exports.StorageRetryPolicyType||(exports.StorageRetryPolicyType={}));const DEFAULT_RETRY_OPTIONS$1={maxRetryDelayInMs:12e4,maxTries:4,retryDelayInMs:4e3,retryPolicyType:exports.StorageRetryPolicyType.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},RETRY_ABORT_ERROR$1=new abortController.AbortError("The operation was aborted.");class StorageRetryPolicy extends BaseRequestPolicy{constructor(e,t,a=DEFAULT_RETRY_OPTIONS$1){super(e,t),this.retryOptions={retryPolicyType:a.retryPolicyType?a.retryPolicyType:DEFAULT_RETRY_OPTIONS$1.retryPolicyType,maxTries:a.maxTries&&a.maxTries>=1?Math.floor(a.maxTries):DEFAULT_RETRY_OPTIONS$1.maxTries,tryTimeoutInMs:a.tryTimeoutInMs&&a.tryTimeoutInMs>=0?a.tryTimeoutInMs:DEFAULT_RETRY_OPTIONS$1.tryTimeoutInMs,retryDelayInMs:a.retryDelayInMs&&a.retryDelayInMs>=0?Math.min(a.retryDelayInMs,a.maxRetryDelayInMs?a.maxRetryDelayInMs:DEFAULT_RETRY_OPTIONS$1.maxRetryDelayInMs):DEFAULT_RETRY_OPTIONS$1.retryDelayInMs,maxRetryDelayInMs:a.maxRetryDelayInMs&&a.maxRetryDelayInMs>=0?a.maxRetryDelayInMs:DEFAULT_RETRY_OPTIONS$1.maxRetryDelayInMs,secondaryHost:a.secondaryHost?a.secondaryHost:DEFAULT_RETRY_OPTIONS$1.secondaryHost}}async sendRequest(e){return this.attemptSendRequest(e,!1,1)}async attemptSendRequest(e,t,a){const r=e.clone(),i=t||!this.retryOptions.secondaryHost||!("GET"===e.method||"HEAD"===e.method||"OPTIONS"===e.method)||a%2==1;let n;i||(r.url=setURLHost(r.url,this.retryOptions.secondaryHost)),this.retryOptions.tryTimeoutInMs&&(r.url=setURLParameter(r.url,URLConstants.Parameters.TIMEOUT,Math.floor(this.retryOptions.tryTimeoutInMs/1e3).toString()));try{if(logger.info(`RetryPolicy: =====> Try=${a} ${i?"Primary":"Secondary"}`),n=await this._nextPolicy.sendRequest(r),!this.shouldRetry(i,a,n))return n;t=t||!i&&404===n.status}catch(e){if(logger.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`),!this.shouldRetry(i,a,n,e))throw e}return await this.delay(i,a,e.abortSignal),this.attemptSendRequest(e,t,++a)}shouldRetry(e,t,a,r){if(t>=this.retryOptions.maxTries)return logger.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${this.retryOptions.maxTries}, no further try.`),!1;const i=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"];if(r)for(const e of i)if(r.name.toUpperCase().includes(e)||r.message.toUpperCase().includes(e)||r.code&&r.code.toString().toUpperCase()===e)return logger.info(`RetryPolicy: Network error ${e} found, will retry.`),!0;if(a||r){const t=a?a.status:r?r.statusCode:0;if(!e&&404===t)return logger.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(503===t||500===t)return logger.info(`RetryPolicy: Will retry for status code ${t}.`),!0}return!("PARSE_ERROR"!==(null==r?void 0:r.code)||!(null==r?void 0:r.message.startsWith('Error "Error: Unclosed root tag')))&&(logger.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),!0)}async delay(e,t,a){let r=0;if(e)switch(this.retryOptions.retryPolicyType){case exports.StorageRetryPolicyType.EXPONENTIAL:r=Math.min((Math.pow(2,t-1)-1)*this.retryOptions.retryDelayInMs,this.retryOptions.maxRetryDelayInMs);break;case exports.StorageRetryPolicyType.FIXED:r=this.retryOptions.retryDelayInMs}else r=1e3*Math.random();return logger.info(`RetryPolicy: Delay for ${r}ms`),delay(r,a,RETRY_ABORT_ERROR$1)}}class StorageRetryPolicyFactory{constructor(e){this.retryOptions=e}create(e,t){return new StorageRetryPolicy(e,t,this.retryOptions)}}class CredentialPolicy extends BaseRequestPolicy{sendRequest(e){return this._nextPolicy.sendRequest(this.signRequest(e))}signRequest(e){return e}}const table_lv0=new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1820,0,1823,1825,1827,1829,0,0,0,1837,2051,0,0,1843,0,3331,3354,3356,3358,3360,3362,3364,3366,3368,3370,0,0,0,0,0,0,0,3586,3593,3594,3610,3617,3619,3621,3628,3634,3637,3638,3656,3665,3696,3708,3710,3721,3722,3729,3737,3743,3746,3748,3750,3751,3753,0,0,0,1859,1860,1864,3586,3593,3594,3610,3617,3619,3621,3628,3634,3637,3638,3656,3665,3696,3708,3710,3721,3722,3729,3737,3743,3746,3748,3750,3751,3753,0,1868,0,1872,0]),table_lv2=new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),table_lv4=new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32786,0,0,0,0,0,33298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function compareHeader(e,t){return isLessThan(e,t)?-1:1}function isLessThan(e,t){const a=[table_lv0,table_lv2,table_lv4];let r=0,i=0,n=0;for(;r<a.length;){if(r===a.length-1&&i!==n)return i>n;const s=i<e.length?a[r][e[i].charCodeAt(0)]:1,o=n<t.length?a[r][t[n].charCodeAt(0)]:1;if(1===s&&1===o)i=0,n=0,++r;else if(s===o)++i,++n;else if(0===s)++i;else{if(0!==o)return s<o;++n}}return!1}class StorageSharedKeyCredentialPolicy extends CredentialPolicy{constructor(e,t,a){super(e,t),this.factory=a}signRequest(e){e.headers.set(HeaderConstants.X_MS_DATE,(new Date).toUTCString()),e.body&&("string"==typeof e.body||void 0!==e.body)&&e.body.length>0&&e.headers.set(HeaderConstants.CONTENT_LENGTH,Buffer.byteLength(e.body));const t=[e.method.toUpperCase(),this.getHeaderValueToSign(e,HeaderConstants.CONTENT_LANGUAGE),this.getHeaderValueToSign(e,HeaderConstants.CONTENT_ENCODING),this.getHeaderValueToSign(e,HeaderConstants.CONTENT_LENGTH),this.getHeaderValueToSign(e,HeaderConstants.CONTENT_MD5),this.getHeaderValueToSign(e,HeaderConstants.CONTENT_TYPE),this.getHeaderValueToSign(e,HeaderConstants.DATE),this.getHeaderValueToSign(e,HeaderConstants.IF_MODIFIED_SINCE),this.getHeaderValueToSign(e,HeaderConstants.IF_MATCH),this.getHeaderValueToSign(e,HeaderConstants.IF_NONE_MATCH),this.getHeaderValueToSign(e,HeaderConstants.IF_UNMODIFIED_SINCE),this.getHeaderValueToSign(e,HeaderConstants.RANGE)].join("\n")+"\n"+this.getCanonicalizedHeadersString(e)+this.getCanonicalizedResourceString(e),a=this.factory.computeHMACSHA256(t);return e.headers.set(HeaderConstants.AUTHORIZATION,`SharedKey ${this.factory.accountName}:${a}`),e}getHeaderValueToSign(e,t){const a=e.headers.get(t);return a?t===HeaderConstants.CONTENT_LENGTH&&"0"===a?"":a:""}getCanonicalizedHeadersString(e){let t=e.headers.headersArray().filter((e=>e.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE)));t.sort(((e,t)=>compareHeader(e.name.toLowerCase(),t.name.toLowerCase()))),t=t.filter(((e,t,a)=>!(t>0&&e.name.toLowerCase()===a[t-1].name.toLowerCase())));let a="";return t.forEach((e=>{a+=`${e.name.toLowerCase().trimRight()}:${e.value.trimLeft()}\n`})),a}getCanonicalizedResourceString(e){const t=getURLPath(e.url)||"/";let a="";a+=`/${this.factory.accountName}${t}`;const r=getURLQueries(e.url),i={};if(r){const e=[];for(const t in r)if(Object.prototype.hasOwnProperty.call(r,t)){const a=t.toLowerCase();i[a]=r[t],e.push(a)}e.sort();for(const t of e)a+=`\n${t}:${decodeURIComponent(i[t])}`}return a}}class Credential{create(e,t){throw new Error("Method should be implemented in children classes.")}}class StorageSharedKeyCredential extends Credential{constructor(e,t){super(),this.accountName=e,this.accountKey=Buffer.from(t,"base64")}create(e,t){return new StorageSharedKeyCredentialPolicy(e,t,this)}computeHMACSHA256(e){return crypto.createHmac("sha256",this.accountKey).update(e,"utf8").digest("base64")}}class AnonymousCredentialPolicy extends CredentialPolicy{constructor(e,t){super(e,t)}}class AnonymousCredential extends Credential{create(e,t){return new AnonymousCredentialPolicy(e,t)}}let _defaultHttpClient;function getCachedDefaultHttpClient(){return _defaultHttpClient||(_defaultHttpClient=coreRestPipeline.createDefaultHttpClient()),_defaultHttpClient}const storageBrowserPolicyName="storageBrowserPolicy";function storageBrowserPolicy(){return{name:storageBrowserPolicyName,sendRequest:async(e,t)=>(coreUtil.isNode||("GET"!==e.method&&"HEAD"!==e.method||(e.url=setURLParameter(e.url,URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,(new Date).getTime().toString())),e.headers.delete(HeaderConstants.COOKIE),e.headers.delete(HeaderConstants.CONTENT_LENGTH)),t(e))}}const storageRetryPolicyName="storageRetryPolicy";var StorageRetryPolicyType;!function(e){e[e.EXPONENTIAL=0]="EXPONENTIAL",e[e.FIXED=1]="FIXED"}(StorageRetryPolicyType||(StorageRetryPolicyType={}));const DEFAULT_RETRY_OPTIONS={maxRetryDelayInMs:12e4,maxTries:4,retryDelayInMs:4e3,retryPolicyType:StorageRetryPolicyType.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},retriableErrors=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"],RETRY_ABORT_ERROR=new abortController.AbortError("The operation was aborted.");function storageRetryPolicy(e={}){var t,a,r,i,n,s;const o=null!==(t=e.retryPolicyType)&&void 0!==t?t:DEFAULT_RETRY_OPTIONS.retryPolicyType,l=null!==(a=e.maxTries)&&void 0!==a?a:DEFAULT_RETRY_OPTIONS.maxTries,m=null!==(r=e.retryDelayInMs)&&void 0!==r?r:DEFAULT_RETRY_OPTIONS.retryDelayInMs,c=null!==(i=e.maxRetryDelayInMs)&&void 0!==i?i:DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,d=null!==(n=e.secondaryHost)&&void 0!==n?n:DEFAULT_RETRY_OPTIONS.secondaryHost,p=null!==(s=e.tryTimeoutInMs)&&void 0!==s?s:DEFAULT_RETRY_OPTIONS.tryTimeoutInMs;function u({isPrimaryRetry:e,attempt:t,response:a,error:r}){var i,n;if(t>=l)return logger.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${l}, no further try.`),!1;if(r){for(const e of retriableErrors)if(r.name.toUpperCase().includes(e)||r.message.toUpperCase().includes(e)||r.code&&r.code.toString().toUpperCase()===e)return logger.info(`RetryPolicy: Network error ${e} found, will retry.`),!0;if("PARSE_ERROR"===(null==r?void 0:r.code)&&(null==r?void 0:r.message.startsWith('Error "Error: Unclosed root tag')))return logger.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),!0}if(a||r){const t=null!==(n=null!==(i=null==a?void 0:a.status)&&void 0!==i?i:null==r?void 0:r.statusCode)&&void 0!==n?n:0;if(!e&&404===t)return logger.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(503===t||500===t)return logger.info(`RetryPolicy: Will retry for status code ${t}.`),!0}return!1}function g(e,t){let a=0;if(e)switch(o){case StorageRetryPolicyType.EXPONENTIAL:a=Math.min((Math.pow(2,t-1)-1)*m,c);break;case StorageRetryPolicyType.FIXED:a=m}else a=1e3*Math.random();return logger.info(`RetryPolicy: Delay for ${a}ms`),a}return{name:storageRetryPolicyName,async sendRequest(e,t){p&&(e.url=setURLParameter(e.url,URLConstants.Parameters.TIMEOUT,String(Math.floor(p/1e3))));const a=e.url,r=d?setURLHost(e.url,d):void 0;let i,n,s=!1,o=1,l=!0;for(;l;){const m=s||!r||!["GET","HEAD","OPTIONS"].includes(e.method)||o%2==1;e.url=m?a:r,i=void 0,n=void 0;try{logger.info(`RetryPolicy: =====> Try=${o} ${m?"Primary":"Secondary"}`),i=await t(e),s=s||!m&&404===i.status}catch(e){if(!coreRestPipeline.isRestError(e))throw logger.error(`RetryPolicy: Caught error, message: ${coreUtil.getErrorMessage(e)}`),e;logger.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`),n=e}l=u({isPrimaryRetry:m,attempt:o,response:i,error:n}),l&&await delay(g(m,o),e.abortSignal,RETRY_ABORT_ERROR),o++}if(i)return i;throw null!=n?n:new coreRestPipeline.RestError("RetryPolicy failed without known error.")}}}const storageSharedKeyCredentialPolicyName="storageSharedKeyCredentialPolicy";function storageSharedKeyCredentialPolicy(e){function t(t){t.headers.set(HeaderConstants.X_MS_DATE,(new Date).toUTCString()),t.body&&("string"==typeof t.body||Buffer.isBuffer(t.body))&&t.body.length>0&&t.headers.set(HeaderConstants.CONTENT_LENGTH,Buffer.byteLength(t.body));const r=[t.method.toUpperCase(),a(t,HeaderConstants.CONTENT_LANGUAGE),a(t,HeaderConstants.CONTENT_ENCODING),a(t,HeaderConstants.CONTENT_LENGTH),a(t,HeaderConstants.CONTENT_MD5),a(t,HeaderConstants.CONTENT_TYPE),a(t,HeaderConstants.DATE),a(t,HeaderConstants.IF_MODIFIED_SINCE),a(t,HeaderConstants.IF_MATCH),a(t,HeaderConstants.IF_NONE_MATCH),a(t,HeaderConstants.IF_UNMODIFIED_SINCE),a(t,HeaderConstants.RANGE)].join("\n")+"\n"+function(e){let t=[];for(const[a,r]of e.headers)a.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE)&&t.push({name:a,value:r});t.sort(((e,t)=>compareHeader(e.name.toLowerCase(),t.name.toLowerCase()))),t=t.filter(((e,t,a)=>!(t>0&&e.name.toLowerCase()===a[t-1].name.toLowerCase())));let a="";return t.forEach((e=>{a+=`${e.name.toLowerCase().trimRight()}:${e.value.trimLeft()}\n`})),a}(t)+function(t){const a=getURLPath(t.url)||"/";let r="";r+=`/${e.accountName}${a}`;const i=getURLQueries(t.url),n={};if(i){const e=[];for(const t in i)if(Object.prototype.hasOwnProperty.call(i,t)){const a=t.toLowerCase();n[a]=i[t],e.push(a)}e.sort();for(const t of e)r+=`\n${t}:${decodeURIComponent(n[t])}`}return r}(t),i=crypto.createHmac("sha256",e.accountKey).update(r,"utf8").digest("base64");t.headers.set(HeaderConstants.AUTHORIZATION,`SharedKey ${e.accountName}:${i}`)}function a(e,t){const a=e.headers.get(t);return a?t===HeaderConstants.CONTENT_LENGTH&&"0"===a?"":a:""}return{name:storageSharedKeyCredentialPolicyName,sendRequest:async(e,a)=>(t(e),a(e))}}class StorageBrowserPolicy extends BaseRequestPolicy{constructor(e,t){super(e,t)}async sendRequest(e){return coreUtil.isNode||("GET"!==e.method.toUpperCase()&&"HEAD"!==e.method.toUpperCase()||(e.url=setURLParameter(e.url,URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,(new Date).getTime().toString())),e.headers.remove(HeaderConstants.COOKIE),e.headers.remove(HeaderConstants.CONTENT_LENGTH)),this._nextPolicy.sendRequest(e)}}class StorageBrowserPolicyFactory{create(e,t){return new StorageBrowserPolicy(e,t)}}const storageCorrectContentLengthPolicyName="StorageCorrectContentLengthPolicy";function storageCorrectContentLengthPolicy(){return{name:storageCorrectContentLengthPolicyName,sendRequest:async(e,t)=>(function(e){e.body&&("string"==typeof e.body||Buffer.isBuffer(e.body))&&e.body.length>0&&e.headers.set(HeaderConstants.CONTENT_LENGTH,Buffer.byteLength(e.body))}(e),t(e))}}function isPipelineLike(e){if(!e||"object"!=typeof e)return!1;const t=e;return Array.isArray(t.factories)&&"object"==typeof t.options&&"function"==typeof t.toServiceClientOptions}class Pipeline{constructor(e,t={}){this.factories=e,this.options=t}toServiceClientOptions(){return{httpClient:this.options.httpClient,requestPolicyFactories:this.factories}}}function newPipeline(e,t={}){e||(e=new AnonymousCredential);const a=new Pipeline([],t);return a._credential=e,a}function processDownlevelPipeline(e){const t=[isAnonymousCredential,isStorageSharedKeyCredential,isCoreHttpBearerTokenFactory,isStorageBrowserPolicyFactory,isStorageRetryPolicyFactory,isStorageTelemetryPolicyFactory,isCoreHttpPolicyFactory];if(e.factories.length){const a=e.factories.filter((e=>!t.some((t=>t(e)))));if(a.length){const e=a.some((e=>isInjectorPolicyFactory(e)));return{wrappedPolicies:coreHttpCompat.createRequestPolicyFactoryPolicy(a),afterRetry:e}}}}function getCoreClientOptions(e){var t;const a=e.options,{httpClient:r}=a,i=tslib.__rest(a,["httpClient"]);let n=e._coreHttpClient;n||(n=r?coreHttpCompat.convertHttpClient(r):getCachedDefaultHttpClient(),e._coreHttpClient=n);let s=e._corePipeline;if(!s){const a="azsdk-js-azure-storage-blob/12.26.0",r=i.userAgentOptions&&i.userAgentOptions.userAgentPrefix?`${i.userAgentOptions.userAgentPrefix} ${a}`:`${a}`;s=coreClient.createClientPipeline(Object.assign(Object.assign({},i),{loggingOptions:{additionalAllowedHeaderNames:StorageBlobLoggingAllowedHeaderNames,additionalAllowedQueryParameters:StorageBlobLoggingAllowedQueryParameters,logger:logger.info},userAgentOptions:{userAgentPrefix:r},serializationOptions:{stringifyXML:coreXml.stringifyXML,serializerOptions:{xml:{xmlCharKey:"#"}}},deserializationOptions:{parseXML:coreXml.parseXML,serializerOptions:{xml:{xmlCharKey:"#"}}}})),s.removePolicy({phase:"Retry"}),s.removePolicy({name:coreRestPipeline.decompressResponsePolicyName}),s.addPolicy(storageCorrectContentLengthPolicy()),s.addPolicy(storageRetryPolicy(i.retryOptions),{phase:"Retry"}),s.addPolicy(storageBrowserPolicy());const n=processDownlevelPipeline(e);n&&s.addPolicy(n.wrappedPolicies,n.afterRetry?{afterPhase:"Retry"}:void 0);const o=getCredentialFromPipeline(e);coreAuth.isTokenCredential(o)?s.addPolicy(coreRestPipeline.bearerTokenAuthenticationPolicy({credential:o,scopes:null!==(t=i.audience)&&void 0!==t?t:StorageOAuthScopes,challengeCallbacks:{authorizeRequestOnChallenge:coreClient.authorizeRequestOnTenantChallenge}}),{phase:"Sign"}):o instanceof StorageSharedKeyCredential&&s.addPolicy(storageSharedKeyCredentialPolicy({accountName:o.accountName,accountKey:o.accountKey}),{phase:"Sign"}),e._corePipeline=s}return Object.assign(Object.assign({},i),{allowInsecureConnection:!0,httpClient:n,pipeline:s})}function getCredentialFromPipeline(e){if(e._credential)return e._credential;let t=new AnonymousCredential;for(const a of e.factories)if(coreAuth.isTokenCredential(a.credential))t=a.credential;else if(isStorageSharedKeyCredential(a))return a;return t}function isStorageSharedKeyCredential(e){return e instanceof StorageSharedKeyCredential||"StorageSharedKeyCredential"===e.constructor.name}function isAnonymousCredential(e){return e instanceof AnonymousCredential||"AnonymousCredential"===e.constructor.name}function isCoreHttpBearerTokenFactory(e){return coreAuth.isTokenCredential(e.credential)}function isStorageBrowserPolicyFactory(e){return e instanceof StorageBrowserPolicyFactory||"StorageBrowserPolicyFactory"===e.constructor.name}function isStorageRetryPolicyFactory(e){return e instanceof StorageRetryPolicyFactory||"StorageRetryPolicyFactory"===e.constructor.name}function isStorageTelemetryPolicyFactory(e){return"TelemetryPolicyFactory"===e.constructor.name}function isInjectorPolicyFactory(e){return"InjectorPolicyFactory"===e.constructor.name}function isCoreHttpPolicyFactory(e){const t={log(e,t){},shouldLog:e=>!1},a=e.create({sendRequest:async e=>({request:e,headers:e.headers.clone(),status:500})},t).constructor.name;return["GenerateClientRequestIdPolicy","TracingPolicy","LogPolicy","ProxyPolicy","DisableResponseDecompressionPolicy","KeepAlivePolicy","DeserializationPolicy"].some((e=>a.startsWith(e)))}const BlobServiceProperties={serializedName:"BlobServiceProperties",xmlName:"StorageServiceProperties",type:{name:"Composite",className:"BlobServiceProperties",modelProperties:{blobAnalyticsLogging:{serializedName:"Logging",xmlName:"Logging",type:{name:"Composite",className:"Logging"}},hourMetrics:{serializedName:"HourMetrics",xmlName:"HourMetrics",type:{name:"Composite",className:"Metrics"}},minuteMetrics:{serializedName:"MinuteMetrics",xmlName:"MinuteMetrics",type:{name:"Composite",className:"Metrics"}},cors:{serializedName:"Cors",xmlName:"Cors",xmlIsWrapped:!0,xmlElementName:"CorsRule",type:{name:"Sequence",element:{type:{name:"Composite",className:"CorsRule"}}}},defaultServiceVersion:{serializedName:"DefaultServiceVersion",xmlName:"DefaultServiceVersion",type:{name:"String"}},deleteRetentionPolicy:{serializedName:"DeleteRetentionPolicy",xmlName:"DeleteRetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}},staticWebsite:{serializedName:"StaticWebsite",xmlName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite"}}}}},Logging={serializedName:"Logging",type:{name:"Composite",className:"Logging",modelProperties:{version:{serializedName:"Version",required:!0,xmlName:"Version",type:{name:"String"}},deleteProperty:{serializedName:"Delete",required:!0,xmlName:"Delete",type:{name:"Boolean"}},read:{serializedName:"Read",required:!0,xmlName:"Read",type:{name:"Boolean"}},write:{serializedName:"Write",required:!0,xmlName:"Write",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},RetentionPolicy={serializedName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},days:{constraints:{InclusiveMinimum:1},serializedName:"Days",xmlName:"Days",type:{name:"Number"}}}}},Metrics={serializedName:"Metrics",type:{name:"Composite",className:"Metrics",modelProperties:{version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},includeAPIs:{serializedName:"IncludeAPIs",xmlName:"IncludeAPIs",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},CorsRule={serializedName:"CorsRule",type:{name:"Composite",className:"CorsRule",modelProperties:{allowedOrigins:{serializedName:"AllowedOrigins",required:!0,xmlName:"AllowedOrigins",type:{name:"String"}},allowedMethods:{serializedName:"AllowedMethods",required:!0,xmlName:"AllowedMethods",type:{name:"String"}},allowedHeaders:{serializedName:"AllowedHeaders",required:!0,xmlName:"AllowedHeaders",type:{name:"String"}},exposedHeaders:{serializedName:"ExposedHeaders",required:!0,xmlName:"ExposedHeaders",type:{name:"String"}},maxAgeInSeconds:{constraints:{InclusiveMinimum:0},serializedName:"MaxAgeInSeconds",required:!0,xmlName:"MaxAgeInSeconds",type:{name:"Number"}}}}},StaticWebsite={serializedName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},indexDocument:{serializedName:"IndexDocument",xmlName:"IndexDocument",type:{name:"String"}},errorDocument404Path:{serializedName:"ErrorDocument404Path",xmlName:"ErrorDocument404Path",type:{name:"String"}},defaultIndexDocumentPath:{serializedName:"DefaultIndexDocumentPath",xmlName:"DefaultIndexDocumentPath",type:{name:"String"}}}}},StorageError={serializedName:"StorageError",type:{name:"Composite",className:"StorageError",modelProperties:{message:{serializedName:"Message",xmlName:"Message",type:{name:"String"}},code:{serializedName:"Code",xmlName:"Code",type:{name:"String"}},authenticationErrorDetail:{serializedName:"AuthenticationErrorDetail",xmlName:"AuthenticationErrorDetail",type:{name:"String"}}}}},BlobServiceStatistics={serializedName:"BlobServiceStatistics",xmlName:"StorageServiceStats",type:{name:"Composite",className:"BlobServiceStatistics",modelProperties:{geoReplication:{serializedName:"GeoReplication",xmlName:"GeoReplication",type:{name:"Composite",className:"GeoReplication"}}}}},GeoReplication={serializedName:"GeoReplication",type:{name:"Composite",className:"GeoReplication",modelProperties:{status:{serializedName:"Status",required:!0,xmlName:"Status",type:{name:"Enum",allowedValues:["live","bootstrap","unavailable"]}},lastSyncOn:{serializedName:"LastSyncTime",required:!0,xmlName:"LastSyncTime",type:{name:"DateTimeRfc1123"}}}}},ListContainersSegmentResponse={serializedName:"ListContainersSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListContainersSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},containerItems:{serializedName:"ContainerItems",required:!0,xmlName:"Containers",xmlIsWrapped:!0,xmlElementName:"Container",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},ContainerItem={serializedName:"ContainerItem",xmlName:"Container",type:{name:"Composite",className:"ContainerItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},deleted:{serializedName:"Deleted",xmlName:"Deleted",type:{name:"Boolean"}},version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"ContainerProperties"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},ContainerProperties={serializedName:"ContainerProperties",type:{name:"Composite",className:"ContainerProperties",modelProperties:{lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},publicAccess:{serializedName:"PublicAccess",xmlName:"PublicAccess",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"HasImmutabilityPolicy",xmlName:"HasImmutabilityPolicy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"HasLegalHold",xmlName:"HasLegalHold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"DefaultEncryptionScope",xmlName:"DefaultEncryptionScope",type:{name:"String"}},preventEncryptionScopeOverride:{serializedName:"DenyEncryptionScopeOverride",xmlName:"DenyEncryptionScopeOverride",type:{name:"Boolean"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},isImmutableStorageWithVersioningEnabled:{serializedName:"ImmutableStorageWithVersioningEnabled",xmlName:"ImmutableStorageWithVersioningEnabled",type:{name:"Boolean"}}}}},KeyInfo={serializedName:"KeyInfo",type:{name:"Composite",className:"KeyInfo",modelProperties:{startsOn:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",required:!0,xmlName:"Expiry",type:{name:"String"}}}}},UserDelegationKey={serializedName:"UserDelegationKey",type:{name:"Composite",className:"UserDelegationKey",modelProperties:{signedObjectId:{serializedName:"SignedOid",required:!0,xmlName:"SignedOid",type:{name:"String"}},signedTenantId:{serializedName:"SignedTid",required:!0,xmlName:"SignedTid",type:{name:"String"}},signedStartsOn:{serializedName:"SignedStart",required:!0,xmlName:"SignedStart",type:{name:"String"}},signedExpiresOn:{serializedName:"SignedExpiry",required:!0,xmlName:"SignedExpiry",type:{name:"String"}},signedService:{serializedName:"SignedService",required:!0,xmlName:"SignedService",type:{name:"String"}},signedVersion:{serializedName:"SignedVersion",required:!0,xmlName:"SignedVersion",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},FilterBlobSegment={serializedName:"FilterBlobSegment",xmlName:"EnumerationResults",type:{name:"Composite",className:"FilterBlobSegment",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},where:{serializedName:"Where",required:!0,xmlName:"Where",type:{name:"String"}},blobs:{serializedName:"Blobs",required:!0,xmlName:"Blobs",xmlIsWrapped:!0,xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"FilterBlobItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},FilterBlobItem={serializedName:"FilterBlobItem",xmlName:"Blob",type:{name:"Composite",className:"FilterBlobItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",type:{name:"String"}},tags:{serializedName:"Tags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}}}}},BlobTags={serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags",modelProperties:{blobTagSet:{serializedName:"BlobTagSet",required:!0,xmlName:"TagSet",xmlIsWrapped:!0,xmlElementName:"Tag",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobTag"}}}}}}},BlobTag={serializedName:"BlobTag",xmlName:"Tag",type:{name:"Composite",className:"BlobTag",modelProperties:{key:{serializedName:"Key",required:!0,xmlName:"Key",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},SignedIdentifier={serializedName:"SignedIdentifier",xmlName:"SignedIdentifier",type:{name:"Composite",className:"SignedIdentifier",modelProperties:{id:{serializedName:"Id",required:!0,xmlName:"Id",type:{name:"String"}},accessPolicy:{serializedName:"AccessPolicy",xmlName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy"}}}}},AccessPolicy={serializedName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy",modelProperties:{startsOn:{serializedName:"Start",xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",xmlName:"Expiry",type:{name:"String"}},permissions:{serializedName:"Permission",xmlName:"Permission",type:{name:"String"}}}}},ListBlobsFlatSegmentResponse={serializedName:"ListBlobsFlatSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsFlatSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},BlobFlatListSegment={serializedName:"BlobFlatListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment",modelProperties:{blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},BlobItemInternal={serializedName:"BlobItemInternal",xmlName:"Blob",type:{name:"Composite",className:"BlobItemInternal",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}},deleted:{serializedName:"Deleted",required:!0,xmlName:"Deleted",type:{name:"Boolean"}},snapshot:{serializedName:"Snapshot",required:!0,xmlName:"Snapshot",type:{name:"String"}},versionId:{serializedName:"VersionId",xmlName:"VersionId",type:{name:"String"}},isCurrentVersion:{serializedName:"IsCurrentVersion",xmlName:"IsCurrentVersion",type:{name:"Boolean"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobTags:{serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}},objectReplicationMetadata:{serializedName:"ObjectReplicationMetadata",xmlName:"OrMetadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},hasVersionsOnly:{serializedName:"HasVersionsOnly",xmlName:"HasVersionsOnly",type:{name:"Boolean"}}}}},BlobName={serializedName:"BlobName",type:{name:"Composite",className:"BlobName",modelProperties:{encoded:{serializedName:"Encoded",xmlName:"Encoded",xmlIsAttribute:!0,type:{name:"Boolean"}},content:{serializedName:"content",xmlName:"content",xmlIsMsText:!0,type:{name:"String"}}}}},BlobPropertiesInternal={serializedName:"BlobPropertiesInternal",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal",modelProperties:{createdOn:{serializedName:"Creation-Time",xmlName:"Creation-Time",type:{name:"DateTimeRfc1123"}},lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},contentLength:{serializedName:"Content-Length",xmlName:"Content-Length",type:{name:"Number"}},contentType:{serializedName:"Content-Type",xmlName:"Content-Type",type:{name:"String"}},contentEncoding:{serializedName:"Content-Encoding",xmlName:"Content-Encoding",type:{name:"String"}},contentLanguage:{serializedName:"Content-Language",xmlName:"Content-Language",type:{name:"String"}},contentMD5:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}},contentDisposition:{serializedName:"Content-Disposition",xmlName:"Content-Disposition",type:{name:"String"}},cacheControl:{serializedName:"Cache-Control",xmlName:"Cache-Control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"BlobType",xmlName:"BlobType",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},copyId:{serializedName:"CopyId",xmlName:"CopyId",type:{name:"String"}},copyStatus:{serializedName:"CopyStatus",xmlName:"CopyStatus",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},copySource:{serializedName:"CopySource",xmlName:"CopySource",type:{name:"String"}},copyProgress:{serializedName:"CopyProgress",xmlName:"CopyProgress",type:{name:"String"}},copyCompletedOn:{serializedName:"CopyCompletionTime",xmlName:"CopyCompletionTime",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"CopyStatusDescription",xmlName:"CopyStatusDescription",type:{name:"String"}},serverEncrypted:{serializedName:"ServerEncrypted",xmlName:"ServerEncrypted",type:{name:"Boolean"}},incrementalCopy:{serializedName:"IncrementalCopy",xmlName:"IncrementalCopy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"DestinationSnapshot",xmlName:"DestinationSnapshot",type:{name:"String"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},accessTier:{serializedName:"AccessTier",xmlName:"AccessTier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}},accessTierInferred:{serializedName:"AccessTierInferred",xmlName:"AccessTierInferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"ArchiveStatus",xmlName:"ArchiveStatus",type:{name:"Enum",allowedValues:["rehydrate-pending-to-hot","rehydrate-pending-to-cool","rehydrate-pending-to-cold"]}},customerProvidedKeySha256:{serializedName:"CustomerProvidedKeySha256",xmlName:"CustomerProvidedKeySha256",type:{name:"String"}},encryptionScope:{serializedName:"EncryptionScope",xmlName:"EncryptionScope",type:{name:"String"}},accessTierChangedOn:{serializedName:"AccessTierChangeTime",xmlName:"AccessTierChangeTime",type:{name:"DateTimeRfc1123"}},tagCount:{serializedName:"TagCount",xmlName:"TagCount",type:{name:"Number"}},expiresOn:{serializedName:"Expiry-Time",xmlName:"Expiry-Time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"Sealed",xmlName:"Sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"RehydratePriority",xmlName:"RehydratePriority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessedOn:{serializedName:"LastAccessTime",xmlName:"LastAccessTime",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"ImmutabilityPolicyUntilDate",xmlName:"ImmutabilityPolicyUntilDate",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"ImmutabilityPolicyMode",xmlName:"ImmutabilityPolicyMode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"LegalHold",xmlName:"LegalHold",type:{name:"Boolean"}}}}},ListBlobsHierarchySegmentResponse={serializedName:"ListBlobsHierarchySegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsHierarchySegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},delimiter:{serializedName:"Delimiter",xmlName:"Delimiter",type:{name:"String"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},BlobHierarchyListSegment={serializedName:"BlobHierarchyListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment",modelProperties:{blobPrefixes:{serializedName:"BlobPrefixes",xmlName:"BlobPrefixes",xmlElementName:"BlobPrefix",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobPrefix"}}}},blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},BlobPrefix={serializedName:"BlobPrefix",type:{name:"Composite",className:"BlobPrefix",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}}}}},BlockLookupList={serializedName:"BlockLookupList",xmlName:"BlockList",type:{name:"Composite",className:"BlockLookupList",modelProperties:{committed:{serializedName:"Committed",xmlName:"Committed",xmlElementName:"Committed",type:{name:"Sequence",element:{type:{name:"String"}}}},uncommitted:{serializedName:"Uncommitted",xmlName:"Uncommitted",xmlElementName:"Uncommitted",type:{name:"Sequence",element:{type:{name:"String"}}}},latest:{serializedName:"Latest",xmlName:"Latest",xmlElementName:"Latest",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},BlockList={serializedName:"BlockList",type:{name:"Composite",className:"BlockList",modelProperties:{committedBlocks:{serializedName:"CommittedBlocks",xmlName:"CommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}},uncommittedBlocks:{serializedName:"UncommittedBlocks",xmlName:"UncommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}}}}},Block={serializedName:"Block",type:{name:"Composite",className:"Block",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},size:{serializedName:"Size",required:!0,xmlName:"Size",type:{name:"Number"}}}}},PageList={serializedName:"PageList",type:{name:"Composite",className:"PageList",modelProperties:{pageRange:{serializedName:"PageRange",xmlName:"PageRange",xmlElementName:"PageRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"PageRange"}}}},clearRange:{serializedName:"ClearRange",xmlName:"ClearRange",xmlElementName:"ClearRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"ClearRange"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},PageRange={serializedName:"PageRange",xmlName:"PageRange",type:{name:"Composite",className:"PageRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},ClearRange={serializedName:"ClearRange",xmlName:"ClearRange",type:{name:"Composite",className:"ClearRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},QueryRequest={serializedName:"QueryRequest",xmlName:"QueryRequest",type:{name:"Composite",className:"QueryRequest",modelProperties:{queryType:{serializedName:"QueryType",required:!0,xmlName:"QueryType",type:{name:"String"}},expression:{serializedName:"Expression",required:!0,xmlName:"Expression",type:{name:"String"}},inputSerialization:{serializedName:"InputSerialization",xmlName:"InputSerialization",type:{name:"Composite",className:"QuerySerialization"}},outputSerialization:{serializedName:"OutputSerialization",xmlName:"OutputSerialization",type:{name:"Composite",className:"QuerySerialization"}}}}},QuerySerialization={serializedName:"QuerySerialization",type:{name:"Composite",className:"QuerySerialization",modelProperties:{format:{serializedName:"Format",xmlName:"Format",type:{name:"Composite",className:"QueryFormat"}}}}},QueryFormat={serializedName:"QueryFormat",type:{name:"Composite",className:"QueryFormat",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"Enum",allowedValues:["delimited","json","arrow","parquet"]}},delimitedTextConfiguration:{serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration"}},jsonTextConfiguration:{serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration"}},arrowConfiguration:{serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration"}},parquetTextConfiguration:{serializedName:"ParquetTextConfiguration",xmlName:"ParquetTextConfiguration",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},DelimitedTextConfiguration={serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration",modelProperties:{columnSeparator:{serializedName:"ColumnSeparator",xmlName:"ColumnSeparator",type:{name:"String"}},fieldQuote:{serializedName:"FieldQuote",xmlName:"FieldQuote",type:{name:"String"}},recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}},escapeChar:{serializedName:"EscapeChar",xmlName:"EscapeChar",type:{name:"String"}},headersPresent:{serializedName:"HeadersPresent",xmlName:"HasHeaders",type:{name:"Boolean"}}}}},JsonTextConfiguration={serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration",modelProperties:{recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}}}}},ArrowConfiguration={serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration",modelProperties:{schema:{serializedName:"Schema",required:!0,xmlName:"Schema",xmlIsWrapped:!0,xmlElementName:"Field",type:{name:"Sequence",element:{type:{name:"Composite",className:"ArrowField"}}}}}}},ArrowField={serializedName:"ArrowField",xmlName:"Field",type:{name:"Composite",className:"ArrowField",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"String"}},name:{serializedName:"Name",xmlName:"Name",type:{name:"String"}},precision:{serializedName:"Precision",xmlName:"Precision",type:{name:"Number"}},scale:{serializedName:"Scale",xmlName:"Scale",type:{name:"Number"}}}}},ServiceSetPropertiesHeaders={serializedName:"Service_setPropertiesHeaders",type:{name:"Composite",className:"ServiceSetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceSetPropertiesExceptionHeaders={serializedName:"Service_setPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceSetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetPropertiesHeaders={serializedName:"Service_getPropertiesHeaders",type:{name:"Composite",className:"ServiceGetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetPropertiesExceptionHeaders={serializedName:"Service_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetStatisticsHeaders={serializedName:"Service_getStatisticsHeaders",type:{name:"Composite",className:"ServiceGetStatisticsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetStatisticsExceptionHeaders={serializedName:"Service_getStatisticsExceptionHeaders",type:{name:"Composite",className:"ServiceGetStatisticsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceListContainersSegmentHeaders={serializedName:"Service_listContainersSegmentHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceListContainersSegmentExceptionHeaders={serializedName:"Service_listContainersSegmentExceptionHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetUserDelegationKeyHeaders={serializedName:"Service_getUserDelegationKeyHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetUserDelegationKeyExceptionHeaders={serializedName:"Service_getUserDelegationKeyExceptionHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetAccountInfoHeaders={serializedName:"Service_getAccountInfoHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceGetAccountInfoExceptionHeaders={serializedName:"Service_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceSubmitBatchHeaders={serializedName:"Service_submitBatchHeaders",type:{name:"Composite",className:"ServiceSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceSubmitBatchExceptionHeaders={serializedName:"Service_submitBatchExceptionHeaders",type:{name:"Composite",className:"ServiceSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceFilterBlobsHeaders={serializedName:"Service_filterBlobsHeaders",type:{name:"Composite",className:"ServiceFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ServiceFilterBlobsExceptionHeaders={serializedName:"Service_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ServiceFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerCreateHeaders={serializedName:"Container_createHeaders",type:{name:"Composite",className:"ContainerCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerCreateExceptionHeaders={serializedName:"Container_createExceptionHeaders",type:{name:"Composite",className:"ContainerCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerGetPropertiesHeaders={serializedName:"Container_getPropertiesHeaders",type:{name:"Composite",className:"ContainerGetPropertiesHeaders",modelProperties:{metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"x-ms-has-immutability-policy",xmlName:"x-ms-has-immutability-policy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"x-ms-has-legal-hold",xmlName:"x-ms-has-legal-hold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}},denyEncryptionScopeOverride:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}},isImmutableStorageWithVersioningEnabled:{serializedName:"x-ms-immutable-storage-with-versioning-enabled",xmlName:"x-ms-immutable-storage-with-versioning-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerGetPropertiesExceptionHeaders={serializedName:"Container_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ContainerGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerDeleteHeaders={serializedName:"Container_deleteHeaders",type:{name:"Composite",className:"ContainerDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerDeleteExceptionHeaders={serializedName:"Container_deleteExceptionHeaders",type:{name:"Composite",className:"ContainerDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerSetMetadataHeaders={serializedName:"Container_setMetadataHeaders",type:{name:"Composite",className:"ContainerSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerSetMetadataExceptionHeaders={serializedName:"Container_setMetadataExceptionHeaders",type:{name:"Composite",className:"ContainerSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerGetAccessPolicyHeaders={serializedName:"Container_getAccessPolicyHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyHeaders",modelProperties:{blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerGetAccessPolicyExceptionHeaders={serializedName:"Container_getAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerSetAccessPolicyHeaders={serializedName:"Container_setAccessPolicyHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerSetAccessPolicyExceptionHeaders={serializedName:"Container_setAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerRestoreHeaders={serializedName:"Container_restoreHeaders",type:{name:"Composite",className:"ContainerRestoreHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerRestoreExceptionHeaders={serializedName:"Container_restoreExceptionHeaders",type:{name:"Composite",className:"ContainerRestoreExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerRenameHeaders={serializedName:"Container_renameHeaders",type:{name:"Composite",className:"ContainerRenameHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerRenameExceptionHeaders={serializedName:"Container_renameExceptionHeaders",type:{name:"Composite",className:"ContainerRenameExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerSubmitBatchHeaders={serializedName:"Container_submitBatchHeaders",type:{name:"Composite",className:"ContainerSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}}}}},ContainerSubmitBatchExceptionHeaders={serializedName:"Container_submitBatchExceptionHeaders",type:{name:"Composite",className:"ContainerSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerFilterBlobsHeaders={serializedName:"Container_filterBlobsHeaders",type:{name:"Composite",className:"ContainerFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerFilterBlobsExceptionHeaders={serializedName:"Container_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ContainerFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerAcquireLeaseHeaders={serializedName:"Container_acquireLeaseHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerAcquireLeaseExceptionHeaders={serializedName:"Container_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerReleaseLeaseHeaders={serializedName:"Container_releaseLeaseHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerReleaseLeaseExceptionHeaders={serializedName:"Container_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerRenewLeaseHeaders={serializedName:"Container_renewLeaseHeaders",type:{name:"Composite",className:"ContainerRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerRenewLeaseExceptionHeaders={serializedName:"Container_renewLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerBreakLeaseHeaders={serializedName:"Container_breakLeaseHeaders",type:{name:"Composite",className:"ContainerBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerBreakLeaseExceptionHeaders={serializedName:"Container_breakLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerChangeLeaseHeaders={serializedName:"Container_changeLeaseHeaders",type:{name:"Composite",className:"ContainerChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ContainerChangeLeaseExceptionHeaders={serializedName:"Container_changeLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerListBlobFlatSegmentHeaders={serializedName:"Container_listBlobFlatSegmentHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerListBlobFlatSegmentExceptionHeaders={serializedName:"Container_listBlobFlatSegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerListBlobHierarchySegmentHeaders={serializedName:"Container_listBlobHierarchySegmentHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerListBlobHierarchySegmentExceptionHeaders={serializedName:"Container_listBlobHierarchySegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ContainerGetAccountInfoHeaders={serializedName:"Container_getAccountInfoHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}}}}},ContainerGetAccountInfoExceptionHeaders={serializedName:"Container_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobDownloadHeaders={serializedName:"Blob_downloadHeaders",type:{name:"Composite",className:"BlobDownloadHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",headerCollectionPrefix:"x-ms-or-",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},BlobDownloadExceptionHeaders={serializedName:"Blob_downloadExceptionHeaders",type:{name:"Composite",className:"BlobDownloadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobGetPropertiesHeaders={serializedName:"Blob_getPropertiesHeaders",type:{name:"Composite",className:"BlobGetPropertiesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",headerCollectionPrefix:"x-ms-or-",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},isIncrementalCopy:{serializedName:"x-ms-incremental-copy",xmlName:"x-ms-incremental-copy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"x-ms-copy-destination-snapshot",xmlName:"x-ms-copy-destination-snapshot",type:{name:"String"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},accessTier:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"String"}},accessTierInferred:{serializedName:"x-ms-access-tier-inferred",xmlName:"x-ms-access-tier-inferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"x-ms-archive-status",xmlName:"x-ms-archive-status",type:{name:"String"}},accessTierChangedOn:{serializedName:"x-ms-access-tier-change-time",xmlName:"x-ms-access-tier-change-time",type:{name:"DateTimeRfc1123"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},expiresOn:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobGetPropertiesExceptionHeaders={serializedName:"Blob_getPropertiesExceptionHeaders",type:{name:"Composite",className:"BlobGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobDeleteHeaders={serializedName:"Blob_deleteHeaders",type:{name:"Composite",className:"BlobDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobDeleteExceptionHeaders={serializedName:"Blob_deleteExceptionHeaders",type:{name:"Composite",className:"BlobDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobUndeleteHeaders={serializedName:"Blob_undeleteHeaders",type:{name:"Composite",className:"BlobUndeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobUndeleteExceptionHeaders={serializedName:"Blob_undeleteExceptionHeaders",type:{name:"Composite",className:"BlobUndeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetExpiryHeaders={serializedName:"Blob_setExpiryHeaders",type:{name:"Composite",className:"BlobSetExpiryHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobSetExpiryExceptionHeaders={serializedName:"Blob_setExpiryExceptionHeaders",type:{name:"Composite",className:"BlobSetExpiryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetHttpHeadersHeaders={serializedName:"Blob_setHttpHeadersHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetHttpHeadersExceptionHeaders={serializedName:"Blob_setHttpHeadersExceptionHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetImmutabilityPolicyHeaders={serializedName:"Blob_setImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiry:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}}}},BlobSetImmutabilityPolicyExceptionHeaders={serializedName:"Blob_setImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobDeleteImmutabilityPolicyHeaders={serializedName:"Blob_deleteImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobDeleteImmutabilityPolicyExceptionHeaders={serializedName:"Blob_deleteImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetLegalHoldHeaders={serializedName:"Blob_setLegalHoldHeaders",type:{name:"Composite",className:"BlobSetLegalHoldHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}}},BlobSetLegalHoldExceptionHeaders={serializedName:"Blob_setLegalHoldExceptionHeaders",type:{name:"Composite",className:"BlobSetLegalHoldExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetMetadataHeaders={serializedName:"Blob_setMetadataHeaders",type:{name:"Composite",className:"BlobSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetMetadataExceptionHeaders={serializedName:"Blob_setMetadataExceptionHeaders",type:{name:"Composite",className:"BlobSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobAcquireLeaseHeaders={serializedName:"Blob_acquireLeaseHeaders",type:{name:"Composite",className:"BlobAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobAcquireLeaseExceptionHeaders={serializedName:"Blob_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"BlobAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobReleaseLeaseHeaders={serializedName:"Blob_releaseLeaseHeaders",type:{name:"Composite",className:"BlobReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobReleaseLeaseExceptionHeaders={serializedName:"Blob_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"BlobReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobRenewLeaseHeaders={serializedName:"Blob_renewLeaseHeaders",type:{name:"Composite",className:"BlobRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobRenewLeaseExceptionHeaders={serializedName:"Blob_renewLeaseExceptionHeaders",type:{name:"Composite",className:"BlobRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobChangeLeaseHeaders={serializedName:"Blob_changeLeaseHeaders",type:{name:"Composite",className:"BlobChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobChangeLeaseExceptionHeaders={serializedName:"Blob_changeLeaseExceptionHeaders",type:{name:"Composite",className:"BlobChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobBreakLeaseHeaders={serializedName:"Blob_breakLeaseHeaders",type:{name:"Composite",className:"BlobBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},BlobBreakLeaseExceptionHeaders={serializedName:"Blob_breakLeaseExceptionHeaders",type:{name:"Composite",className:"BlobBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobCreateSnapshotHeaders={serializedName:"Blob_createSnapshotHeaders",type:{name:"Composite",className:"BlobCreateSnapshotHeaders",modelProperties:{snapshot:{serializedName:"x-ms-snapshot",xmlName:"x-ms-snapshot",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobCreateSnapshotExceptionHeaders={serializedName:"Blob_createSnapshotExceptionHeaders",type:{name:"Composite",className:"BlobCreateSnapshotExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobStartCopyFromURLHeaders={serializedName:"Blob_startCopyFromURLHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobStartCopyFromURLExceptionHeaders={serializedName:"Blob_startCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobCopyFromURLHeaders={serializedName:"Blob_copyFromURLHeaders",type:{name:"Composite",className:"BlobCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{defaultValue:"success",isConstant:!0,serializedName:"x-ms-copy-status",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobCopyFromURLExceptionHeaders={serializedName:"Blob_copyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobAbortCopyFromURLHeaders={serializedName:"Blob_abortCopyFromURLHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobAbortCopyFromURLExceptionHeaders={serializedName:"Blob_abortCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetTierHeaders={serializedName:"Blob_setTierHeaders",type:{name:"Composite",className:"BlobSetTierHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetTierExceptionHeaders={serializedName:"Blob_setTierExceptionHeaders",type:{name:"Composite",className:"BlobSetTierExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobGetAccountInfoHeaders={serializedName:"Blob_getAccountInfoHeaders",type:{name:"Composite",className:"BlobGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}}}}},BlobGetAccountInfoExceptionHeaders={serializedName:"Blob_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"BlobGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobQueryHeaders={serializedName:"Blob_queryHeaders",type:{name:"Composite",className:"BlobQueryHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletionTime:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},BlobQueryExceptionHeaders={serializedName:"Blob_queryExceptionHeaders",type:{name:"Composite",className:"BlobQueryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobGetTagsHeaders={serializedName:"Blob_getTagsHeaders",type:{name:"Composite",className:"BlobGetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobGetTagsExceptionHeaders={serializedName:"Blob_getTagsExceptionHeaders",type:{name:"Composite",className:"BlobGetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetTagsHeaders={serializedName:"Blob_setTagsHeaders",type:{name:"Composite",className:"BlobSetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlobSetTagsExceptionHeaders={serializedName:"Blob_setTagsExceptionHeaders",type:{name:"Composite",className:"BlobSetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobCreateHeaders={serializedName:"PageBlob_createHeaders",type:{name:"Composite",className:"PageBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobCreateExceptionHeaders={serializedName:"PageBlob_createExceptionHeaders",type:{name:"Composite",className:"PageBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUploadPagesHeaders={serializedName:"PageBlob_uploadPagesHeaders",type:{name:"Composite",className:"PageBlobUploadPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUploadPagesExceptionHeaders={serializedName:"PageBlob_uploadPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobClearPagesHeaders={serializedName:"PageBlob_clearPagesHeaders",type:{name:"Composite",className:"PageBlobClearPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobClearPagesExceptionHeaders={serializedName:"PageBlob_clearPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobClearPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUploadPagesFromURLHeaders={serializedName:"PageBlob_uploadPagesFromURLHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUploadPagesFromURLExceptionHeaders={serializedName:"PageBlob_uploadPagesFromURLExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobGetPageRangesHeaders={serializedName:"PageBlob_getPageRangesHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobGetPageRangesExceptionHeaders={serializedName:"PageBlob_getPageRangesExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobGetPageRangesDiffHeaders={serializedName:"PageBlob_getPageRangesDiffHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobGetPageRangesDiffExceptionHeaders={serializedName:"PageBlob_getPageRangesDiffExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobResizeHeaders={serializedName:"PageBlob_resizeHeaders",type:{name:"Composite",className:"PageBlobResizeHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobResizeExceptionHeaders={serializedName:"PageBlob_resizeExceptionHeaders",type:{name:"Composite",className:"PageBlobResizeExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUpdateSequenceNumberHeaders={serializedName:"PageBlob_updateSequenceNumberHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobUpdateSequenceNumberExceptionHeaders={serializedName:"PageBlob_updateSequenceNumberExceptionHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobCopyIncrementalHeaders={serializedName:"PageBlob_copyIncrementalHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},PageBlobCopyIncrementalExceptionHeaders={serializedName:"PageBlob_copyIncrementalExceptionHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobCreateHeaders={serializedName:"AppendBlob_createHeaders",type:{name:"Composite",className:"AppendBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobCreateExceptionHeaders={serializedName:"AppendBlob_createExceptionHeaders",type:{name:"Composite",className:"AppendBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobAppendBlockHeaders={serializedName:"AppendBlob_appendBlockHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobAppendBlockExceptionHeaders={serializedName:"AppendBlob_appendBlockExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobAppendBlockFromUrlHeaders={serializedName:"AppendBlob_appendBlockFromUrlHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobAppendBlockFromUrlExceptionHeaders={serializedName:"AppendBlob_appendBlockFromUrlExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},AppendBlobSealHeaders={serializedName:"AppendBlob_sealHeaders",type:{name:"Composite",className:"AppendBlobSealHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}}}}},AppendBlobSealExceptionHeaders={serializedName:"AppendBlob_sealExceptionHeaders",type:{name:"Composite",className:"AppendBlobSealExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobUploadHeaders={serializedName:"BlockBlob_uploadHeaders",type:{name:"Composite",className:"BlockBlobUploadHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobUploadExceptionHeaders={serializedName:"BlockBlob_uploadExceptionHeaders",type:{name:"Composite",className:"BlockBlobUploadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobPutBlobFromUrlHeaders={serializedName:"BlockBlob_putBlobFromUrlHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobPutBlobFromUrlExceptionHeaders={serializedName:"BlockBlob_putBlobFromUrlExceptionHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobStageBlockHeaders={serializedName:"BlockBlob_stageBlockHeaders",type:{name:"Composite",className:"BlockBlobStageBlockHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobStageBlockExceptionHeaders={serializedName:"BlockBlob_stageBlockExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobStageBlockFromURLHeaders={serializedName:"BlockBlob_stageBlockFromURLHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobStageBlockFromURLExceptionHeaders={serializedName:"BlockBlob_stageBlockFromURLExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobCommitBlockListHeaders={serializedName:"BlockBlob_commitBlockListHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobCommitBlockListExceptionHeaders={serializedName:"BlockBlob_commitBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobGetBlockListHeaders={serializedName:"BlockBlob_getBlockListHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},BlockBlobGetBlockListExceptionHeaders={serializedName:"BlockBlob_getBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}};var Mappers=Object.freeze({__proto__:null,AccessPolicy:AccessPolicy,AppendBlobAppendBlockExceptionHeaders:AppendBlobAppendBlockExceptionHeaders,AppendBlobAppendBlockFromUrlExceptionHeaders:AppendBlobAppendBlockFromUrlExceptionHeaders,AppendBlobAppendBlockFromUrlHeaders:AppendBlobAppendBlockFromUrlHeaders,AppendBlobAppendBlockHeaders:AppendBlobAppendBlockHeaders,AppendBlobCreateExceptionHeaders:AppendBlobCreateExceptionHeaders,AppendBlobCreateHeaders:AppendBlobCreateHeaders,AppendBlobSealExceptionHeaders:AppendBlobSealExceptionHeaders,AppendBlobSealHeaders:AppendBlobSealHeaders,ArrowConfiguration:ArrowConfiguration,ArrowField:ArrowField,BlobAbortCopyFromURLExceptionHeaders:BlobAbortCopyFromURLExceptionHeaders,BlobAbortCopyFromURLHeaders:BlobAbortCopyFromURLHeaders,BlobAcquireLeaseExceptionHeaders:BlobAcquireLeaseExceptionHeaders,BlobAcquireLeaseHeaders:BlobAcquireLeaseHeaders,BlobBreakLeaseExceptionHeaders:BlobBreakLeaseExceptionHeaders,BlobBreakLeaseHeaders:BlobBreakLeaseHeaders,BlobChangeLeaseExceptionHeaders:BlobChangeLeaseExceptionHeaders,BlobChangeLeaseHeaders:BlobChangeLeaseHeaders,BlobCopyFromURLExceptionHeaders:BlobCopyFromURLExceptionHeaders,BlobCopyFromURLHeaders:BlobCopyFromURLHeaders,BlobCreateSnapshotExceptionHeaders:BlobCreateSnapshotExceptionHeaders,BlobCreateSnapshotHeaders:BlobCreateSnapshotHeaders,BlobDeleteExceptionHeaders:BlobDeleteExceptionHeaders,BlobDeleteHeaders:BlobDeleteHeaders,BlobDeleteImmutabilityPolicyExceptionHeaders:BlobDeleteImmutabilityPolicyExceptionHeaders,BlobDeleteImmutabilityPolicyHeaders:BlobDeleteImmutabilityPolicyHeaders,BlobDownloadExceptionHeaders:BlobDownloadExceptionHeaders,BlobDownloadHeaders:BlobDownloadHeaders,BlobFlatListSegment:BlobFlatListSegment,BlobGetAccountInfoExceptionHeaders:BlobGetAccountInfoExceptionHeaders,BlobGetAccountInfoHeaders:BlobGetAccountInfoHeaders,BlobGetPropertiesExceptionHeaders:BlobGetPropertiesExceptionHeaders,BlobGetPropertiesHeaders:BlobGetPropertiesHeaders,BlobGetTagsExceptionHeaders:BlobGetTagsExceptionHeaders,BlobGetTagsHeaders:BlobGetTagsHeaders,BlobHierarchyListSegment:BlobHierarchyListSegment,BlobItemInternal:BlobItemInternal,BlobName:BlobName,BlobPrefix:BlobPrefix,BlobPropertiesInternal:BlobPropertiesInternal,BlobQueryExceptionHeaders:BlobQueryExceptionHeaders,BlobQueryHeaders:BlobQueryHeaders,BlobReleaseLeaseExceptionHeaders:BlobReleaseLeaseExceptionHeaders,BlobReleaseLeaseHeaders:BlobReleaseLeaseHeaders,BlobRenewLeaseExceptionHeaders:BlobRenewLeaseExceptionHeaders,BlobRenewLeaseHeaders:BlobRenewLeaseHeaders,BlobServiceProperties:BlobServiceProperties,BlobServiceStatistics:BlobServiceStatistics,BlobSetExpiryExceptionHeaders:BlobSetExpiryExceptionHeaders,BlobSetExpiryHeaders:BlobSetExpiryHeaders,BlobSetHttpHeadersExceptionHeaders:BlobSetHttpHeadersExceptionHeaders,BlobSetHttpHeadersHeaders:BlobSetHttpHeadersHeaders,BlobSetImmutabilityPolicyExceptionHeaders:BlobSetImmutabilityPolicyExceptionHeaders,BlobSetImmutabilityPolicyHeaders:BlobSetImmutabilityPolicyHeaders,BlobSetLegalHoldExceptionHeaders:BlobSetLegalHoldExceptionHeaders,BlobSetLegalHoldHeaders:BlobSetLegalHoldHeaders,BlobSetMetadataExceptionHeaders:BlobSetMetadataExceptionHeaders,BlobSetMetadataHeaders:BlobSetMetadataHeaders,BlobSetTagsExceptionHeaders:BlobSetTagsExceptionHeaders,BlobSetTagsHeaders:BlobSetTagsHeaders,BlobSetTierExceptionHeaders:BlobSetTierExceptionHeaders,BlobSetTierHeaders:BlobSetTierHeaders,BlobStartCopyFromURLExceptionHeaders:BlobStartCopyFromURLExceptionHeaders,BlobStartCopyFromURLHeaders:BlobStartCopyFromURLHeaders,BlobTag:BlobTag,BlobTags:BlobTags,BlobUndeleteExceptionHeaders:BlobUndeleteExceptionHeaders,BlobUndeleteHeaders:BlobUndeleteHeaders,Block:Block,BlockBlobCommitBlockListExceptionHeaders:BlockBlobCommitBlockListExceptionHeaders,BlockBlobCommitBlockListHeaders:BlockBlobCommitBlockListHeaders,BlockBlobGetBlockListExceptionHeaders:BlockBlobGetBlockListExceptionHeaders,BlockBlobGetBlockListHeaders:BlockBlobGetBlockListHeaders,BlockBlobPutBlobFromUrlExceptionHeaders:BlockBlobPutBlobFromUrlExceptionHeaders,BlockBlobPutBlobFromUrlHeaders:BlockBlobPutBlobFromUrlHeaders,BlockBlobStageBlockExceptionHeaders:BlockBlobStageBlockExceptionHeaders,BlockBlobStageBlockFromURLExceptionHeaders:BlockBlobStageBlockFromURLExceptionHeaders,BlockBlobStageBlockFromURLHeaders:BlockBlobStageBlockFromURLHeaders,BlockBlobStageBlockHeaders:BlockBlobStageBlockHeaders,BlockBlobUploadExceptionHeaders:BlockBlobUploadExceptionHeaders,BlockBlobUploadHeaders:BlockBlobUploadHeaders,BlockList:BlockList,BlockLookupList:BlockLookupList,ClearRange:ClearRange,ContainerAcquireLeaseExceptionHeaders:ContainerAcquireLeaseExceptionHeaders,ContainerAcquireLeaseHeaders:ContainerAcquireLeaseHeaders,ContainerBreakLeaseExceptionHeaders:ContainerBreakLeaseExceptionHeaders,ContainerBreakLeaseHeaders:ContainerBreakLeaseHeaders,ContainerChangeLeaseExceptionHeaders:ContainerChangeLeaseExceptionHeaders,ContainerChangeLeaseHeaders:ContainerChangeLeaseHeaders,ContainerCreateExceptionHeaders:ContainerCreateExceptionHeaders,ContainerCreateHeaders:ContainerCreateHeaders,ContainerDeleteExceptionHeaders:ContainerDeleteExceptionHeaders,ContainerDeleteHeaders:ContainerDeleteHeaders,ContainerFilterBlobsExceptionHeaders:ContainerFilterBlobsExceptionHeaders,ContainerFilterBlobsHeaders:ContainerFilterBlobsHeaders,ContainerGetAccessPolicyExceptionHeaders:ContainerGetAccessPolicyExceptionHeaders,ContainerGetAccessPolicyHeaders:ContainerGetAccessPolicyHeaders,ContainerGetAccountInfoExceptionHeaders:ContainerGetAccountInfoExceptionHeaders,ContainerGetAccountInfoHeaders:ContainerGetAccountInfoHeaders,ContainerGetPropertiesExceptionHeaders:ContainerGetPropertiesExceptionHeaders,ContainerGetPropertiesHeaders:ContainerGetPropertiesHeaders,ContainerItem:ContainerItem,ContainerListBlobFlatSegmentExceptionHeaders:ContainerListBlobFlatSegmentExceptionHeaders,ContainerListBlobFlatSegmentHeaders:ContainerListBlobFlatSegmentHeaders,ContainerListBlobHierarchySegmentExceptionHeaders:ContainerListBlobHierarchySegmentExceptionHeaders,ContainerListBlobHierarchySegmentHeaders:ContainerListBlobHierarchySegmentHeaders,ContainerProperties:ContainerProperties,ContainerReleaseLeaseExceptionHeaders:ContainerReleaseLeaseExceptionHeaders,ContainerReleaseLeaseHeaders:ContainerReleaseLeaseHeaders,ContainerRenameExceptionHeaders:ContainerRenameExceptionHeaders,ContainerRenameHeaders:ContainerRenameHeaders,ContainerRenewLeaseExceptionHeaders:ContainerRenewLeaseExceptionHeaders,ContainerRenewLeaseHeaders:ContainerRenewLeaseHeaders,ContainerRestoreExceptionHeaders:ContainerRestoreExceptionHeaders,ContainerRestoreHeaders:ContainerRestoreHeaders,ContainerSetAccessPolicyExceptionHeaders:ContainerSetAccessPolicyExceptionHeaders,ContainerSetAccessPolicyHeaders:ContainerSetAccessPolicyHeaders,ContainerSetMetadataExceptionHeaders:ContainerSetMetadataExceptionHeaders,ContainerSetMetadataHeaders:ContainerSetMetadataHeaders,ContainerSubmitBatchExceptionHeaders:ContainerSubmitBatchExceptionHeaders,ContainerSubmitBatchHeaders:ContainerSubmitBatchHeaders,CorsRule:CorsRule,DelimitedTextConfiguration:DelimitedTextConfiguration,FilterBlobItem:FilterBlobItem,FilterBlobSegment:FilterBlobSegment,GeoReplication:GeoReplication,JsonTextConfiguration:JsonTextConfiguration,KeyInfo:KeyInfo,ListBlobsFlatSegmentResponse:ListBlobsFlatSegmentResponse,ListBlobsHierarchySegmentResponse:ListBlobsHierarchySegmentResponse,ListContainersSegmentResponse:ListContainersSegmentResponse,Logging:Logging,Metrics:Metrics,PageBlobClearPagesExceptionHeaders:PageBlobClearPagesExceptionHeaders,PageBlobClearPagesHeaders:PageBlobClearPagesHeaders,PageBlobCopyIncrementalExceptionHeaders:PageBlobCopyIncrementalExceptionHeaders,PageBlobCopyIncrementalHeaders:PageBlobCopyIncrementalHeaders,PageBlobCreateExceptionHeaders:PageBlobCreateExceptionHeaders,PageBlobCreateHeaders:PageBlobCreateHeaders,PageBlobGetPageRangesDiffExceptionHeaders:PageBlobGetPageRangesDiffExceptionHeaders,PageBlobGetPageRangesDiffHeaders:PageBlobGetPageRangesDiffHeaders,PageBlobGetPageRangesExceptionHeaders:PageBlobGetPageRangesExceptionHeaders,PageBlobGetPageRangesHeaders:PageBlobGetPageRangesHeaders,PageBlobResizeExceptionHeaders:PageBlobResizeExceptionHeaders,PageBlobResizeHeaders:PageBlobResizeHeaders,PageBlobUpdateSequenceNumberExceptionHeaders:PageBlobUpdateSequenceNumberExceptionHeaders,PageBlobUpdateSequenceNumberHeaders:PageBlobUpdateSequenceNumberHeaders,PageBlobUploadPagesExceptionHeaders:PageBlobUploadPagesExceptionHeaders,PageBlobUploadPagesFromURLExceptionHeaders:PageBlobUploadPagesFromURLExceptionHeaders,PageBlobUploadPagesFromURLHeaders:PageBlobUploadPagesFromURLHeaders,PageBlobUploadPagesHeaders:PageBlobUploadPagesHeaders,PageList:PageList,PageRange:PageRange,QueryFormat:QueryFormat,QueryRequest:QueryRequest,QuerySerialization:QuerySerialization,RetentionPolicy:RetentionPolicy,ServiceFilterBlobsExceptionHeaders:ServiceFilterBlobsExceptionHeaders,ServiceFilterBlobsHeaders:ServiceFilterBlobsHeaders,ServiceGetAccountInfoExceptionHeaders:ServiceGetAccountInfoExceptionHeaders,ServiceGetAccountInfoHeaders:ServiceGetAccountInfoHeaders,ServiceGetPropertiesExceptionHeaders:ServiceGetPropertiesExceptionHeaders,ServiceGetPropertiesHeaders:ServiceGetPropertiesHeaders,ServiceGetStatisticsExceptionHeaders:ServiceGetStatisticsExceptionHeaders,ServiceGetStatisticsHeaders:ServiceGetStatisticsHeaders,ServiceGetUserDelegationKeyExceptionHeaders:ServiceGetUserDelegationKeyExceptionHeaders,ServiceGetUserDelegationKeyHeaders:ServiceGetUserDelegationKeyHeaders,ServiceListContainersSegmentExceptionHeaders:ServiceListContainersSegmentExceptionHeaders,ServiceListContainersSegmentHeaders:ServiceListContainersSegmentHeaders,ServiceSetPropertiesExceptionHeaders:ServiceSetPropertiesExceptionHeaders,ServiceSetPropertiesHeaders:ServiceSetPropertiesHeaders,ServiceSubmitBatchExceptionHeaders:ServiceSubmitBatchExceptionHeaders,ServiceSubmitBatchHeaders:ServiceSubmitBatchHeaders,SignedIdentifier:SignedIdentifier,StaticWebsite:StaticWebsite,StorageError:StorageError,UserDelegationKey:UserDelegationKey});const contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},blobServiceProperties={parameterPath:"blobServiceProperties",mapper:BlobServiceProperties},accept={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},url={parameterPath:"url",mapper:{serializedName:"url",required:!0,xmlName:"url",type:{name:"String"}},skipEncoding:!0},restype={parameterPath:"restype",mapper:{defaultValue:"service",isConstant:!0,serializedName:"restype",type:{name:"String"}}},comp={parameterPath:"comp",mapper:{defaultValue:"properties",isConstant:!0,serializedName:"comp",type:{name:"String"}}},timeoutInSeconds={parameterPath:["options","timeoutInSeconds"],mapper:{constraints:{InclusiveMinimum:0},serializedName:"timeout",xmlName:"timeout",type:{name:"Number"}}},version={parameterPath:"version",mapper:{defaultValue:"2025-01-05",isConstant:!0,serializedName:"x-ms-version",type:{name:"String"}}},requestId={parameterPath:["options","requestId"],mapper:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}}},accept1={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},comp1={parameterPath:"comp",mapper:{defaultValue:"stats",isConstant:!0,serializedName:"comp",type:{name:"String"}}},comp2={parameterPath:"comp",mapper:{defaultValue:"list",isConstant:!0,serializedName:"comp",type:{name:"String"}}},prefix={parameterPath:["options","prefix"],mapper:{serializedName:"prefix",xmlName:"prefix",type:{name:"String"}}},marker={parameterPath:["options","marker"],mapper:{serializedName:"marker",xmlName:"marker",type:{name:"String"}}},maxPageSize={parameterPath:["options","maxPageSize"],mapper:{constraints:{InclusiveMinimum:1},serializedName:"maxresults",xmlName:"maxresults",type:{name:"Number"}}},include={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListContainersIncludeType",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["metadata","deleted","system"]}}}},collectionFormat:"CSV"},keyInfo={parameterPath:"keyInfo",mapper:KeyInfo},comp3={parameterPath:"comp",mapper:{defaultValue:"userdelegationkey",isConstant:!0,serializedName:"comp",type:{name:"String"}}},restype1={parameterPath:"restype",mapper:{defaultValue:"account",isConstant:!0,serializedName:"restype",type:{name:"String"}}},body={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},comp4={parameterPath:"comp",mapper:{defaultValue:"batch",isConstant:!0,serializedName:"comp",type:{name:"String"}}},contentLength={parameterPath:"contentLength",mapper:{serializedName:"Content-Length",required:!0,xmlName:"Content-Length",type:{name:"Number"}}},multipartContentType={parameterPath:"multipartContentType",mapper:{serializedName:"Content-Type",required:!0,xmlName:"Content-Type",type:{name:"String"}}},comp5={parameterPath:"comp",mapper:{defaultValue:"blobs",isConstant:!0,serializedName:"comp",type:{name:"String"}}},where={parameterPath:["options","where"],mapper:{serializedName:"where",xmlName:"where",type:{name:"String"}}},restype2={parameterPath:"restype",mapper:{defaultValue:"container",isConstant:!0,serializedName:"restype",type:{name:"String"}}},metadata={parameterPath:["options","metadata"],mapper:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",type:{name:"Dictionary",value:{type:{name:"String"}}}}},access={parameterPath:["options","access"],mapper:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}}},defaultEncryptionScope={parameterPath:["options","containerEncryptionScope","defaultEncryptionScope"],mapper:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}}},preventEncryptionScopeOverride={parameterPath:["options","containerEncryptionScope","preventEncryptionScopeOverride"],mapper:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}}},leaseId={parameterPath:["options","leaseAccessConditions","leaseId"],mapper:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}}},ifModifiedSince={parameterPath:["options","modifiedAccessConditions","ifModifiedSince"],mapper:{serializedName:"If-Modified-Since",xmlName:"If-Modified-Since",type:{name:"DateTimeRfc1123"}}},ifUnmodifiedSince={parameterPath:["options","modifiedAccessConditions","ifUnmodifiedSince"],mapper:{serializedName:"If-Unmodified-Since",xmlName:"If-Unmodified-Since",type:{name:"DateTimeRfc1123"}}},comp6={parameterPath:"comp",mapper:{defaultValue:"metadata",isConstant:!0,serializedName:"comp",type:{name:"String"}}},comp7={parameterPath:"comp",mapper:{defaultValue:"acl",isConstant:!0,serializedName:"comp",type:{name:"String"}}},containerAcl={parameterPath:["options","containerAcl"],mapper:{serializedName:"containerAcl",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier",type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}}}},comp8={parameterPath:"comp",mapper:{defaultValue:"undelete",isConstant:!0,serializedName:"comp",type:{name:"String"}}},deletedContainerName={parameterPath:["options","deletedContainerName"],mapper:{serializedName:"x-ms-deleted-container-name",xmlName:"x-ms-deleted-container-name",type:{name:"String"}}},deletedContainerVersion={parameterPath:["options","deletedContainerVersion"],mapper:{serializedName:"x-ms-deleted-container-version",xmlName:"x-ms-deleted-container-version",type:{name:"String"}}},comp9={parameterPath:"comp",mapper:{defaultValue:"rename",isConstant:!0,serializedName:"comp",type:{name:"String"}}},sourceContainerName={parameterPath:"sourceContainerName",mapper:{serializedName:"x-ms-source-container-name",required:!0,xmlName:"x-ms-source-container-name",type:{name:"String"}}},sourceLeaseId={parameterPath:["options","sourceLeaseId"],mapper:{serializedName:"x-ms-source-lease-id",xmlName:"x-ms-source-lease-id",type:{name:"String"}}},comp10={parameterPath:"comp",mapper:{defaultValue:"lease",isConstant:!0,serializedName:"comp",type:{name:"String"}}},action={parameterPath:"action",mapper:{defaultValue:"acquire",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},duration={parameterPath:["options","duration"],mapper:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Number"}}},proposedLeaseId={parameterPath:["options","proposedLeaseId"],mapper:{serializedName:"x-ms-proposed-lease-id",xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},action1={parameterPath:"action",mapper:{defaultValue:"release",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},leaseId1={parameterPath:"leaseId",mapper:{serializedName:"x-ms-lease-id",required:!0,xmlName:"x-ms-lease-id",type:{name:"String"}}},action2={parameterPath:"action",mapper:{defaultValue:"renew",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},action3={parameterPath:"action",mapper:{defaultValue:"break",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},breakPeriod={parameterPath:["options","breakPeriod"],mapper:{serializedName:"x-ms-lease-break-period",xmlName:"x-ms-lease-break-period",type:{name:"Number"}}},action4={parameterPath:"action",mapper:{defaultValue:"change",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},proposedLeaseId1={parameterPath:"proposedLeaseId",mapper:{serializedName:"x-ms-proposed-lease-id",required:!0,xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},include1={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListBlobsIncludeItem",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["copy","deleted","metadata","snapshots","uncommittedblobs","versions","tags","immutabilitypolicy","legalhold","deletedwithversions"]}}}},collectionFormat:"CSV"},delimiter={parameterPath:"delimiter",mapper:{serializedName:"delimiter",required:!0,xmlName:"delimiter",type:{name:"String"}}},snapshot={parameterPath:["options","snapshot"],mapper:{serializedName:"snapshot",xmlName:"snapshot",type:{name:"String"}}},versionId={parameterPath:["options","versionId"],mapper:{serializedName:"versionid",xmlName:"versionid",type:{name:"String"}}},range={parameterPath:["options","range"],mapper:{serializedName:"x-ms-range",xmlName:"x-ms-range",type:{name:"String"}}},rangeGetContentMD5={parameterPath:["options","rangeGetContentMD5"],mapper:{serializedName:"x-ms-range-get-content-md5",xmlName:"x-ms-range-get-content-md5",type:{name:"Boolean"}}},rangeGetContentCRC64={parameterPath:["options","rangeGetContentCRC64"],mapper:{serializedName:"x-ms-range-get-content-crc64",xmlName:"x-ms-range-get-content-crc64",type:{name:"Boolean"}}},encryptionKey={parameterPath:["options","cpkInfo","encryptionKey"],mapper:{serializedName:"x-ms-encryption-key",xmlName:"x-ms-encryption-key",type:{name:"String"}}},encryptionKeySha256={parameterPath:["options","cpkInfo","encryptionKeySha256"],mapper:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}}},encryptionAlgorithm={parameterPath:["options","cpkInfo","encryptionAlgorithm"],mapper:{serializedName:"x-ms-encryption-algorithm",xmlName:"x-ms-encryption-algorithm",type:{name:"String"}}},ifMatch={parameterPath:["options","modifiedAccessConditions","ifMatch"],mapper:{serializedName:"If-Match",xmlName:"If-Match",type:{name:"String"}}},ifNoneMatch={parameterPath:["options","modifiedAccessConditions","ifNoneMatch"],mapper:{serializedName:"If-None-Match",xmlName:"If-None-Match",type:{name:"String"}}},ifTags={parameterPath:["options","modifiedAccessConditions","ifTags"],mapper:{serializedName:"x-ms-if-tags",xmlName:"x-ms-if-tags",type:{name:"String"}}},deleteSnapshots={parameterPath:["options","deleteSnapshots"],mapper:{serializedName:"x-ms-delete-snapshots",xmlName:"x-ms-delete-snapshots",type:{name:"Enum",allowedValues:["include","only"]}}},blobDeleteType={parameterPath:["options","blobDeleteType"],mapper:{serializedName:"deletetype",xmlName:"deletetype",type:{name:"String"}}},comp11={parameterPath:"comp",mapper:{defaultValue:"expiry",isConstant:!0,serializedName:"comp",type:{name:"String"}}},expiryOptions={parameterPath:"expiryOptions",mapper:{serializedName:"x-ms-expiry-option",required:!0,xmlName:"x-ms-expiry-option",type:{name:"String"}}},expiresOn={parameterPath:["options","expiresOn"],mapper:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"String"}}},blobCacheControl={parameterPath:["options","blobHttpHeaders","blobCacheControl"],mapper:{serializedName:"x-ms-blob-cache-control",xmlName:"x-ms-blob-cache-control",type:{name:"String"}}},blobContentType={parameterPath:["options","blobHttpHeaders","blobContentType"],mapper:{serializedName:"x-ms-blob-content-type",xmlName:"x-ms-blob-content-type",type:{name:"String"}}},blobContentMD5={parameterPath:["options","blobHttpHeaders","blobContentMD5"],mapper:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}}},blobContentEncoding={parameterPath:["options","blobHttpHeaders","blobContentEncoding"],mapper:{serializedName:"x-ms-blob-content-encoding",xmlName:"x-ms-blob-content-encoding",type:{name:"String"}}},blobContentLanguage={parameterPath:["options","blobHttpHeaders","blobContentLanguage"],mapper:{serializedName:"x-ms-blob-content-language",xmlName:"x-ms-blob-content-language",type:{name:"String"}}},blobContentDisposition={parameterPath:["options","blobHttpHeaders","blobContentDisposition"],mapper:{serializedName:"x-ms-blob-content-disposition",xmlName:"x-ms-blob-content-disposition",type:{name:"String"}}},comp12={parameterPath:"comp",mapper:{defaultValue:"immutabilityPolicies",isConstant:!0,serializedName:"comp",type:{name:"String"}}},immutabilityPolicyExpiry={parameterPath:["options","immutabilityPolicyExpiry"],mapper:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}}},immutabilityPolicyMode={parameterPath:["options","immutabilityPolicyMode"],mapper:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}},comp13={parameterPath:"comp",mapper:{defaultValue:"legalhold",isConstant:!0,serializedName:"comp",type:{name:"String"}}},legalHold={parameterPath:"legalHold",mapper:{serializedName:"x-ms-legal-hold",required:!0,xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},encryptionScope={parameterPath:["options","encryptionScope"],mapper:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}}},comp14={parameterPath:"comp",mapper:{defaultValue:"snapshot",isConstant:!0,serializedName:"comp",type:{name:"String"}}},tier={parameterPath:["options","tier"],mapper:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}},rehydratePriority={parameterPath:["options","rehydratePriority"],mapper:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}}},sourceIfModifiedSince={parameterPath:["options","sourceModifiedAccessConditions","sourceIfModifiedSince"],mapper:{serializedName:"x-ms-source-if-modified-since",xmlName:"x-ms-source-if-modified-since",type:{name:"DateTimeRfc1123"}}},sourceIfUnmodifiedSince={parameterPath:["options","sourceModifiedAccessConditions","sourceIfUnmodifiedSince"],mapper:{serializedName:"x-ms-source-if-unmodified-since",xmlName:"x-ms-source-if-unmodified-since",type:{name:"DateTimeRfc1123"}}},sourceIfMatch={parameterPath:["options","sourceModifiedAccessConditions","sourceIfMatch"],mapper:{serializedName:"x-ms-source-if-match",xmlName:"x-ms-source-if-match",type:{name:"String"}}},sourceIfNoneMatch={parameterPath:["options","sourceModifiedAccessConditions","sourceIfNoneMatch"],mapper:{serializedName:"x-ms-source-if-none-match",xmlName:"x-ms-source-if-none-match",type:{name:"String"}}},sourceIfTags={parameterPath:["options","sourceModifiedAccessConditions","sourceIfTags"],mapper:{serializedName:"x-ms-source-if-tags",xmlName:"x-ms-source-if-tags",type:{name:"String"}}},copySource={parameterPath:"copySource",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},blobTagsString={parameterPath:["options","blobTagsString"],mapper:{serializedName:"x-ms-tags",xmlName:"x-ms-tags",type:{name:"String"}}},sealBlob={parameterPath:["options","sealBlob"],mapper:{serializedName:"x-ms-seal-blob",xmlName:"x-ms-seal-blob",type:{name:"Boolean"}}},legalHold1={parameterPath:["options","legalHold"],mapper:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},xMsRequiresSync={parameterPath:"xMsRequiresSync",mapper:{defaultValue:"true",isConstant:!0,serializedName:"x-ms-requires-sync",type:{name:"String"}}},sourceContentMD5={parameterPath:["options","sourceContentMD5"],mapper:{serializedName:"x-ms-source-content-md5",xmlName:"x-ms-source-content-md5",type:{name:"ByteArray"}}},copySourceAuthorization={parameterPath:["options","copySourceAuthorization"],mapper:{serializedName:"x-ms-copy-source-authorization",xmlName:"x-ms-copy-source-authorization",type:{name:"String"}}},copySourceTags={parameterPath:["options","copySourceTags"],mapper:{serializedName:"x-ms-copy-source-tag-option",xmlName:"x-ms-copy-source-tag-option",type:{name:"Enum",allowedValues:["REPLACE","COPY"]}}},comp15={parameterPath:"comp",mapper:{defaultValue:"copy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},copyActionAbortConstant={parameterPath:"copyActionAbortConstant",mapper:{defaultValue:"abort",isConstant:!0,serializedName:"x-ms-copy-action",type:{name:"String"}}},copyId={parameterPath:"copyId",mapper:{serializedName:"copyid",required:!0,xmlName:"copyid",type:{name:"String"}}},comp16={parameterPath:"comp",mapper:{defaultValue:"tier",isConstant:!0,serializedName:"comp",type:{name:"String"}}},tier1={parameterPath:"tier",mapper:{serializedName:"x-ms-access-tier",required:!0,xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}},queryRequest={parameterPath:["options","queryRequest"],mapper:QueryRequest},comp17={parameterPath:"comp",mapper:{defaultValue:"query",isConstant:!0,serializedName:"comp",type:{name:"String"}}},comp18={parameterPath:"comp",mapper:{defaultValue:"tags",isConstant:!0,serializedName:"comp",type:{name:"String"}}},tags={parameterPath:["options","tags"],mapper:BlobTags},transactionalContentMD5={parameterPath:["options","transactionalContentMD5"],mapper:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}}},transactionalContentCrc64={parameterPath:["options","transactionalContentCrc64"],mapper:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}},blobType={parameterPath:"blobType",mapper:{defaultValue:"PageBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},blobContentLength={parameterPath:"blobContentLength",mapper:{serializedName:"x-ms-blob-content-length",required:!0,xmlName:"x-ms-blob-content-length",type:{name:"Number"}}},blobSequenceNumber={parameterPath:["options","blobSequenceNumber"],mapper:{defaultValue:0,serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}}},contentType1={parameterPath:["options","contentType"],mapper:{defaultValue:"application/octet-stream",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},body1={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},accept2={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},comp19={parameterPath:"comp",mapper:{defaultValue:"page",isConstant:!0,serializedName:"comp",type:{name:"String"}}},pageWrite={parameterPath:"pageWrite",mapper:{defaultValue:"update",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},ifSequenceNumberLessThanOrEqualTo={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThanOrEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-le",xmlName:"x-ms-if-sequence-number-le",type:{name:"Number"}}},ifSequenceNumberLessThan={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThan"],mapper:{serializedName:"x-ms-if-sequence-number-lt",xmlName:"x-ms-if-sequence-number-lt",type:{name:"Number"}}},ifSequenceNumberEqualTo={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-eq",xmlName:"x-ms-if-sequence-number-eq",type:{name:"Number"}}},pageWrite1={parameterPath:"pageWrite",mapper:{defaultValue:"clear",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},sourceUrl={parameterPath:"sourceUrl",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},sourceRange={parameterPath:"sourceRange",mapper:{serializedName:"x-ms-source-range",required:!0,xmlName:"x-ms-source-range",type:{name:"String"}}},sourceContentCrc64={parameterPath:["options","sourceContentCrc64"],mapper:{serializedName:"x-ms-source-content-crc64",xmlName:"x-ms-source-content-crc64",type:{name:"ByteArray"}}},range1={parameterPath:"range",mapper:{serializedName:"x-ms-range",required:!0,xmlName:"x-ms-range",type:{name:"String"}}},comp20={parameterPath:"comp",mapper:{defaultValue:"pagelist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},prevsnapshot={parameterPath:["options","prevsnapshot"],mapper:{serializedName:"prevsnapshot",xmlName:"prevsnapshot",type:{name:"String"}}},prevSnapshotUrl={parameterPath:["options","prevSnapshotUrl"],mapper:{serializedName:"x-ms-previous-snapshot-url",xmlName:"x-ms-previous-snapshot-url",type:{name:"String"}}},sequenceNumberAction={parameterPath:"sequenceNumberAction",mapper:{serializedName:"x-ms-sequence-number-action",required:!0,xmlName:"x-ms-sequence-number-action",type:{name:"Enum",allowedValues:["max","update","increment"]}}},comp21={parameterPath:"comp",mapper:{defaultValue:"incrementalcopy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},blobType1={parameterPath:"blobType",mapper:{defaultValue:"AppendBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},comp22={parameterPath:"comp",mapper:{defaultValue:"appendblock",isConstant:!0,serializedName:"comp",type:{name:"String"}}},maxSize={parameterPath:["options","appendPositionAccessConditions","maxSize"],mapper:{serializedName:"x-ms-blob-condition-maxsize",xmlName:"x-ms-blob-condition-maxsize",type:{name:"Number"}}},appendPosition={parameterPath:["options","appendPositionAccessConditions","appendPosition"],mapper:{serializedName:"x-ms-blob-condition-appendpos",xmlName:"x-ms-blob-condition-appendpos",type:{name:"Number"}}},sourceRange1={parameterPath:["options","sourceRange"],mapper:{serializedName:"x-ms-source-range",xmlName:"x-ms-source-range",type:{name:"String"}}},comp23={parameterPath:"comp",mapper:{defaultValue:"seal",isConstant:!0,serializedName:"comp",type:{name:"String"}}},blobType2={parameterPath:"blobType",mapper:{defaultValue:"BlockBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},copySourceBlobProperties={parameterPath:["options","copySourceBlobProperties"],mapper:{serializedName:"x-ms-copy-source-blob-properties",xmlName:"x-ms-copy-source-blob-properties",type:{name:"Boolean"}}},comp24={parameterPath:"comp",mapper:{defaultValue:"block",isConstant:!0,serializedName:"comp",type:{name:"String"}}},blockId={parameterPath:"blockId",mapper:{serializedName:"blockid",required:!0,xmlName:"blockid",type:{name:"String"}}},blocks={parameterPath:"blocks",mapper:BlockLookupList},comp25={parameterPath:"comp",mapper:{defaultValue:"blocklist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},listType={parameterPath:"listType",mapper:{defaultValue:"committed",serializedName:"blocklisttype",required:!0,xmlName:"blocklisttype",type:{name:"Enum",allowedValues:["committed","uncommitted","all"]}}};class ServiceImpl{constructor(e){this.client=e}setProperties(e,t){return this.client.sendOperationRequest({blobServiceProperties:e,options:t},setPropertiesOperationSpec)}getProperties(e){return this.client.sendOperationRequest({options:e},getPropertiesOperationSpec$2)}getStatistics(e){return this.client.sendOperationRequest({options:e},getStatisticsOperationSpec)}listContainersSegment(e){return this.client.sendOperationRequest({options:e},listContainersSegmentOperationSpec)}getUserDelegationKey(e,t){return this.client.sendOperationRequest({keyInfo:e,options:t},getUserDelegationKeyOperationSpec)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},getAccountInfoOperationSpec$2)}submitBatch(e,t,a,r){return this.client.sendOperationRequest({contentLength:e,multipartContentType:t,body:a,options:r},submitBatchOperationSpec$1)}filterBlobs(e){return this.client.sendOperationRequest({options:e},filterBlobsOperationSpec$1)}}const xmlSerializer$5=coreClient__namespace.createSerializer(Mappers,!0),setPropertiesOperationSpec={path:"/",httpMethod:"PUT",responses:{202:{headersMapper:ServiceSetPropertiesHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceSetPropertiesExceptionHeaders}},requestBody:blobServiceProperties,queryParameters:[restype,comp,timeoutInSeconds],urlParameters:[url],headerParameters:[contentType,accept,version,requestId],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$5},getPropertiesOperationSpec$2={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:BlobServiceProperties,headersMapper:ServiceGetPropertiesHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceGetPropertiesExceptionHeaders}},queryParameters:[restype,comp,timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$5},getStatisticsOperationSpec={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:BlobServiceStatistics,headersMapper:ServiceGetStatisticsHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceGetStatisticsExceptionHeaders}},queryParameters:[restype,timeoutInSeconds,comp1],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$5},listContainersSegmentOperationSpec={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:ListContainersSegmentResponse,headersMapper:ServiceListContainersSegmentHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceListContainersSegmentExceptionHeaders}},queryParameters:[timeoutInSeconds,comp2,prefix,marker,maxPageSize,include],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$5},getUserDelegationKeyOperationSpec={path:"/",httpMethod:"POST",responses:{200:{bodyMapper:UserDelegationKey,headersMapper:ServiceGetUserDelegationKeyHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceGetUserDelegationKeyExceptionHeaders}},requestBody:keyInfo,queryParameters:[restype,timeoutInSeconds,comp3],urlParameters:[url],headerParameters:[contentType,accept,version,requestId],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$5},getAccountInfoOperationSpec$2={path:"/",httpMethod:"GET",responses:{200:{headersMapper:ServiceGetAccountInfoHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceGetAccountInfoExceptionHeaders}},queryParameters:[comp,timeoutInSeconds,restype1],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$5},submitBatchOperationSpec$1={path:"/",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ServiceSubmitBatchHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceSubmitBatchExceptionHeaders}},requestBody:body,queryParameters:[timeoutInSeconds,comp4],urlParameters:[url],headerParameters:[accept,version,requestId,contentLength,multipartContentType],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$5},filterBlobsOperationSpec$1={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:FilterBlobSegment,headersMapper:ServiceFilterBlobsHeaders},default:{bodyMapper:StorageError,headersMapper:ServiceFilterBlobsExceptionHeaders}},queryParameters:[timeoutInSeconds,marker,maxPageSize,comp5,where],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$5};class ContainerImpl{constructor(e){this.client=e}create(e){return this.client.sendOperationRequest({options:e},createOperationSpec$2)}getProperties(e){return this.client.sendOperationRequest({options:e},getPropertiesOperationSpec$1)}delete(e){return this.client.sendOperationRequest({options:e},deleteOperationSpec$1)}setMetadata(e){return this.client.sendOperationRequest({options:e},setMetadataOperationSpec$1)}getAccessPolicy(e){return this.client.sendOperationRequest({options:e},getAccessPolicyOperationSpec)}setAccessPolicy(e){return this.client.sendOperationRequest({options:e},setAccessPolicyOperationSpec)}restore(e){return this.client.sendOperationRequest({options:e},restoreOperationSpec)}rename(e,t){return this.client.sendOperationRequest({sourceContainerName:e,options:t},renameOperationSpec)}submitBatch(e,t,a,r){return this.client.sendOperationRequest({contentLength:e,multipartContentType:t,body:a,options:r},submitBatchOperationSpec)}filterBlobs(e){return this.client.sendOperationRequest({options:e},filterBlobsOperationSpec)}acquireLease(e){return this.client.sendOperationRequest({options:e},acquireLeaseOperationSpec$1)}releaseLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},releaseLeaseOperationSpec$1)}renewLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},renewLeaseOperationSpec$1)}breakLease(e){return this.client.sendOperationRequest({options:e},breakLeaseOperationSpec$1)}changeLease(e,t,a){return this.client.sendOperationRequest({leaseId:e,proposedLeaseId:t,options:a},changeLeaseOperationSpec$1)}listBlobFlatSegment(e){return this.client.sendOperationRequest({options:e},listBlobFlatSegmentOperationSpec)}listBlobHierarchySegment(e,t){return this.client.sendOperationRequest({delimiter:e,options:t},listBlobHierarchySegmentOperationSpec)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},getAccountInfoOperationSpec$1)}}const xmlSerializer$4=coreClient__namespace.createSerializer(Mappers,!0),createOperationSpec$2={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:ContainerCreateHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerCreateExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,access,defaultEncryptionScope,preventEncryptionScopeOverride],isXML:!0,serializer:xmlSerializer$4},getPropertiesOperationSpec$1={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:ContainerGetPropertiesHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerGetPropertiesExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId],isXML:!0,serializer:xmlSerializer$4},deleteOperationSpec$1={path:"/{containerName}",httpMethod:"DELETE",responses:{202:{headersMapper:ContainerDeleteHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerDeleteExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince],isXML:!0,serializer:xmlSerializer$4},setMetadataOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerSetMetadataHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerSetMetadataExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp6],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,leaseId,ifModifiedSince],isXML:!0,serializer:xmlSerializer$4},getAccessPolicyOperationSpec={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}},serializedName:"SignedIdentifiers",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier"},headersMapper:ContainerGetAccessPolicyHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerGetAccessPolicyExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp7],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId],isXML:!0,serializer:xmlSerializer$4},setAccessPolicyOperationSpec={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerSetAccessPolicyHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerSetAccessPolicyExceptionHeaders}},requestBody:containerAcl,queryParameters:[timeoutInSeconds,restype2,comp7],urlParameters:[url],headerParameters:[contentType,accept,version,requestId,access,leaseId,ifModifiedSince,ifUnmodifiedSince],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$4},restoreOperationSpec={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:ContainerRestoreHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerRestoreExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp8],urlParameters:[url],headerParameters:[version,requestId,accept1,deletedContainerName,deletedContainerVersion],isXML:!0,serializer:xmlSerializer$4},renameOperationSpec={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerRenameHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerRenameExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp9],urlParameters:[url],headerParameters:[version,requestId,accept1,sourceContainerName,sourceLeaseId],isXML:!0,serializer:xmlSerializer$4},submitBatchOperationSpec={path:"/{containerName}",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ContainerSubmitBatchHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerSubmitBatchExceptionHeaders}},requestBody:body,queryParameters:[timeoutInSeconds,comp4,restype2],urlParameters:[url],headerParameters:[accept,version,requestId,contentLength,multipartContentType],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$4},filterBlobsOperationSpec={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:FilterBlobSegment,headersMapper:ContainerFilterBlobsHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerFilterBlobsExceptionHeaders}},queryParameters:[timeoutInSeconds,marker,maxPageSize,comp5,where,restype2],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$4},acquireLeaseOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:ContainerAcquireLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerAcquireLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action,duration,proposedLeaseId],isXML:!0,serializer:xmlSerializer$4},releaseLeaseOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerReleaseLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerReleaseLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action1,leaseId1],isXML:!0,serializer:xmlSerializer$4},renewLeaseOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerRenewLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerRenewLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,leaseId1,action2],isXML:!0,serializer:xmlSerializer$4},breakLeaseOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{202:{headersMapper:ContainerBreakLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerBreakLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action3,breakPeriod],isXML:!0,serializer:xmlSerializer$4},changeLeaseOperationSpec$1={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ContainerChangeLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerChangeLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,restype2,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,leaseId1,action4,proposedLeaseId1],isXML:!0,serializer:xmlSerializer$4},listBlobFlatSegmentOperationSpec={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:ListBlobsFlatSegmentResponse,headersMapper:ContainerListBlobFlatSegmentHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerListBlobFlatSegmentExceptionHeaders}},queryParameters:[timeoutInSeconds,comp2,prefix,marker,maxPageSize,restype2,include1],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$4},listBlobHierarchySegmentOperationSpec={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:ListBlobsHierarchySegmentResponse,headersMapper:ContainerListBlobHierarchySegmentHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerListBlobHierarchySegmentExceptionHeaders}},queryParameters:[timeoutInSeconds,comp2,prefix,marker,maxPageSize,restype2,include1,delimiter],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$4},getAccountInfoOperationSpec$1={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:ContainerGetAccountInfoHeaders},default:{bodyMapper:StorageError,headersMapper:ContainerGetAccountInfoExceptionHeaders}},queryParameters:[comp,timeoutInSeconds,restype1],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$4};class BlobImpl{constructor(e){this.client=e}download(e){return this.client.sendOperationRequest({options:e},downloadOperationSpec)}getProperties(e){return this.client.sendOperationRequest({options:e},getPropertiesOperationSpec)}delete(e){return this.client.sendOperationRequest({options:e},deleteOperationSpec)}undelete(e){return this.client.sendOperationRequest({options:e},undeleteOperationSpec)}setExpiry(e,t){return this.client.sendOperationRequest({expiryOptions:e,options:t},setExpiryOperationSpec)}setHttpHeaders(e){return this.client.sendOperationRequest({options:e},setHttpHeadersOperationSpec)}setImmutabilityPolicy(e){return this.client.sendOperationRequest({options:e},setImmutabilityPolicyOperationSpec)}deleteImmutabilityPolicy(e){return this.client.sendOperationRequest({options:e},deleteImmutabilityPolicyOperationSpec)}setLegalHold(e,t){return this.client.sendOperationRequest({legalHold:e,options:t},setLegalHoldOperationSpec)}setMetadata(e){return this.client.sendOperationRequest({options:e},setMetadataOperationSpec)}acquireLease(e){return this.client.sendOperationRequest({options:e},acquireLeaseOperationSpec)}releaseLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},releaseLeaseOperationSpec)}renewLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},renewLeaseOperationSpec)}changeLease(e,t,a){return this.client.sendOperationRequest({leaseId:e,proposedLeaseId:t,options:a},changeLeaseOperationSpec)}breakLease(e){return this.client.sendOperationRequest({options:e},breakLeaseOperationSpec)}createSnapshot(e){return this.client.sendOperationRequest({options:e},createSnapshotOperationSpec)}startCopyFromURL(e,t){return this.client.sendOperationRequest({copySource:e,options:t},startCopyFromURLOperationSpec)}copyFromURL(e,t){return this.client.sendOperationRequest({copySource:e,options:t},copyFromURLOperationSpec)}abortCopyFromURL(e,t){return this.client.sendOperationRequest({copyId:e,options:t},abortCopyFromURLOperationSpec)}setTier(e,t){return this.client.sendOperationRequest({tier:e,options:t},setTierOperationSpec)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},getAccountInfoOperationSpec)}query(e){return this.client.sendOperationRequest({options:e},queryOperationSpec)}getTags(e){return this.client.sendOperationRequest({options:e},getTagsOperationSpec)}setTags(e){return this.client.sendOperationRequest({options:e},setTagsOperationSpec)}}const xmlSerializer$3=coreClient__namespace.createSerializer(Mappers,!0),downloadOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:BlobDownloadHeaders},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:BlobDownloadHeaders},default:{bodyMapper:StorageError,headersMapper:BlobDownloadExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,range,rangeGetContentMD5,rangeGetContentCRC64,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},getPropertiesOperationSpec={path:"/{containerName}/{blob}",httpMethod:"HEAD",responses:{200:{headersMapper:BlobGetPropertiesHeaders},default:{bodyMapper:StorageError,headersMapper:BlobGetPropertiesExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},deleteOperationSpec={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{202:{headersMapper:BlobDeleteHeaders},default:{bodyMapper:StorageError,headersMapper:BlobDeleteExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,blobDeleteType],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,deleteSnapshots],isXML:!0,serializer:xmlSerializer$3},undeleteOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobUndeleteHeaders},default:{bodyMapper:StorageError,headersMapper:BlobUndeleteExceptionHeaders}},queryParameters:[timeoutInSeconds,comp8],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$3},setExpiryOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetExpiryHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetExpiryExceptionHeaders}},queryParameters:[timeoutInSeconds,comp11],urlParameters:[url],headerParameters:[version,requestId,accept1,expiryOptions,expiresOn],isXML:!0,serializer:xmlSerializer$3},setHttpHeadersOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetHttpHeadersHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetHttpHeadersExceptionHeaders}},queryParameters:[comp,timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition],isXML:!0,serializer:xmlSerializer$3},setImmutabilityPolicyOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetImmutabilityPolicyHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetImmutabilityPolicyExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,comp12],urlParameters:[url],headerParameters:[version,requestId,accept1,ifUnmodifiedSince,immutabilityPolicyExpiry,immutabilityPolicyMode],isXML:!0,serializer:xmlSerializer$3},deleteImmutabilityPolicyOperationSpec={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{200:{headersMapper:BlobDeleteImmutabilityPolicyHeaders},default:{bodyMapper:StorageError,headersMapper:BlobDeleteImmutabilityPolicyExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,comp12],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$3},setLegalHoldOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetLegalHoldHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetLegalHoldExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,comp13],urlParameters:[url],headerParameters:[version,requestId,accept1,legalHold],isXML:!0,serializer:xmlSerializer$3},setMetadataOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetMetadataHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetMetadataExceptionHeaders}},queryParameters:[timeoutInSeconds,comp6],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope],isXML:!0,serializer:xmlSerializer$3},acquireLeaseOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlobAcquireLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:BlobAcquireLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action,duration,proposedLeaseId,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},releaseLeaseOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobReleaseLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:BlobReleaseLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action1,leaseId1,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},renewLeaseOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobRenewLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:BlobRenewLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,leaseId1,action2,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},changeLeaseOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobChangeLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:BlobChangeLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,leaseId1,action4,proposedLeaseId1,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},breakLeaseOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:BlobBreakLeaseHeaders},default:{bodyMapper:StorageError,headersMapper:BlobBreakLeaseExceptionHeaders}},queryParameters:[timeoutInSeconds,comp10],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,action3,breakPeriod,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$3},createSnapshotOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlobCreateSnapshotHeaders},default:{bodyMapper:StorageError,headersMapper:BlobCreateSnapshotExceptionHeaders}},queryParameters:[timeoutInSeconds,comp14],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope],isXML:!0,serializer:xmlSerializer$3},startCopyFromURLOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:BlobStartCopyFromURLHeaders},default:{bodyMapper:StorageError,headersMapper:BlobStartCopyFromURLExceptionHeaders}},queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,immutabilityPolicyExpiry,immutabilityPolicyMode,tier,rehydratePriority,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,sourceIfTags,copySource,blobTagsString,sealBlob,legalHold1],isXML:!0,serializer:xmlSerializer$3},copyFromURLOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:BlobCopyFromURLHeaders},default:{bodyMapper:StorageError,headersMapper:BlobCopyFromURLExceptionHeaders}},queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,immutabilityPolicyExpiry,immutabilityPolicyMode,encryptionScope,tier,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,copySource,blobTagsString,legalHold1,xMsRequiresSync,sourceContentMD5,copySourceAuthorization,copySourceTags],isXML:!0,serializer:xmlSerializer$3},abortCopyFromURLOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:BlobAbortCopyFromURLHeaders},default:{bodyMapper:StorageError,headersMapper:BlobAbortCopyFromURLExceptionHeaders}},queryParameters:[timeoutInSeconds,comp15,copyId],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,copyActionAbortConstant],isXML:!0,serializer:xmlSerializer$3},setTierOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:BlobSetTierHeaders},202:{headersMapper:BlobSetTierHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetTierExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,comp16],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifTags,rehydratePriority,tier1],isXML:!0,serializer:xmlSerializer$3},getAccountInfoOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{headersMapper:BlobGetAccountInfoHeaders},default:{bodyMapper:StorageError,headersMapper:BlobGetAccountInfoExceptionHeaders}},queryParameters:[comp,timeoutInSeconds,restype1],urlParameters:[url],headerParameters:[version,requestId,accept1],isXML:!0,serializer:xmlSerializer$3},queryOperationSpec={path:"/{containerName}/{blob}",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:BlobQueryHeaders},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:BlobQueryHeaders},default:{bodyMapper:StorageError,headersMapper:BlobQueryExceptionHeaders}},requestBody:queryRequest,queryParameters:[timeoutInSeconds,snapshot,comp17],urlParameters:[url],headerParameters:[contentType,accept,version,requestId,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$3},getTagsOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:BlobTags,headersMapper:BlobGetTagsHeaders},default:{bodyMapper:StorageError,headersMapper:BlobGetTagsExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,versionId,comp18],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifTags],isXML:!0,serializer:xmlSerializer$3},setTagsOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:BlobSetTagsHeaders},default:{bodyMapper:StorageError,headersMapper:BlobSetTagsExceptionHeaders}},requestBody:tags,queryParameters:[timeoutInSeconds,versionId,comp18],urlParameters:[url],headerParameters:[contentType,accept,version,requestId,leaseId,ifTags,transactionalContentMD5,transactionalContentCrc64],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer$3};class PageBlobImpl{constructor(e){this.client=e}create(e,t,a){return this.client.sendOperationRequest({contentLength:e,blobContentLength:t,options:a},createOperationSpec$1)}uploadPages(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},uploadPagesOperationSpec)}clearPages(e,t){return this.client.sendOperationRequest({contentLength:e,options:t},clearPagesOperationSpec)}uploadPagesFromURL(e,t,a,r,i){return this.client.sendOperationRequest({sourceUrl:e,sourceRange:t,contentLength:a,range:r,options:i},uploadPagesFromURLOperationSpec)}getPageRanges(e){return this.client.sendOperationRequest({options:e},getPageRangesOperationSpec)}getPageRangesDiff(e){return this.client.sendOperationRequest({options:e},getPageRangesDiffOperationSpec)}resize(e,t){return this.client.sendOperationRequest({blobContentLength:e,options:t},resizeOperationSpec)}updateSequenceNumber(e,t){return this.client.sendOperationRequest({sequenceNumberAction:e,options:t},updateSequenceNumberOperationSpec)}copyIncremental(e,t){return this.client.sendOperationRequest({copySource:e,options:t},copyIncrementalOperationSpec)}}const xmlSerializer$2=coreClient__namespace.createSerializer(Mappers,!0),createOperationSpec$1={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:PageBlobCreateHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobCreateExceptionHeaders}},queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition,immutabilityPolicyExpiry,immutabilityPolicyMode,encryptionScope,tier,blobTagsString,legalHold1,blobType,blobContentLength,blobSequenceNumber],isXML:!0,serializer:xmlSerializer$2},uploadPagesOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:PageBlobUploadPagesHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobUploadPagesExceptionHeaders}},requestBody:body1,queryParameters:[timeoutInSeconds,comp19],urlParameters:[url],headerParameters:[version,requestId,contentLength,leaseId,ifModifiedSince,ifUnmodifiedSince,range,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,transactionalContentMD5,transactionalContentCrc64,contentType1,accept2,pageWrite,ifSequenceNumberLessThanOrEqualTo,ifSequenceNumberLessThan,ifSequenceNumberEqualTo],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:xmlSerializer$2},clearPagesOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:PageBlobClearPagesHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobClearPagesExceptionHeaders}},queryParameters:[timeoutInSeconds,comp19],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,leaseId,ifModifiedSince,ifUnmodifiedSince,range,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,ifSequenceNumberLessThanOrEqualTo,ifSequenceNumberLessThan,ifSequenceNumberEqualTo,pageWrite1],isXML:!0,serializer:xmlSerializer$2},uploadPagesFromURLOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:PageBlobUploadPagesFromURLHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobUploadPagesFromURLExceptionHeaders}},queryParameters:[timeoutInSeconds,comp19],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,sourceContentMD5,copySourceAuthorization,pageWrite,ifSequenceNumberLessThanOrEqualTo,ifSequenceNumberLessThan,ifSequenceNumberEqualTo,sourceUrl,sourceRange,sourceContentCrc64,range1],isXML:!0,serializer:xmlSerializer$2},getPageRangesOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:PageList,headersMapper:PageBlobGetPageRangesHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobGetPageRangesExceptionHeaders}},queryParameters:[timeoutInSeconds,marker,maxPageSize,snapshot,comp20],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,range,ifMatch,ifNoneMatch,ifTags],isXML:!0,serializer:xmlSerializer$2},getPageRangesDiffOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:PageList,headersMapper:PageBlobGetPageRangesDiffHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobGetPageRangesDiffExceptionHeaders}},queryParameters:[timeoutInSeconds,marker,maxPageSize,snapshot,comp20,prevsnapshot],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,range,ifMatch,ifNoneMatch,ifTags,prevSnapshotUrl],isXML:!0,serializer:xmlSerializer$2},resizeOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:PageBlobResizeHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobResizeExceptionHeaders}},queryParameters:[comp,timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,blobContentLength],isXML:!0,serializer:xmlSerializer$2},updateSequenceNumberOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:PageBlobUpdateSequenceNumberHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobUpdateSequenceNumberExceptionHeaders}},queryParameters:[comp,timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,blobSequenceNumber,sequenceNumberAction],isXML:!0,serializer:xmlSerializer$2},copyIncrementalOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:PageBlobCopyIncrementalHeaders},default:{bodyMapper:StorageError,headersMapper:PageBlobCopyIncrementalExceptionHeaders}},queryParameters:[timeoutInSeconds,comp21],urlParameters:[url],headerParameters:[version,requestId,accept1,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,ifTags,copySource],isXML:!0,serializer:xmlSerializer$2};class AppendBlobImpl{constructor(e){this.client=e}create(e,t){return this.client.sendOperationRequest({contentLength:e,options:t},createOperationSpec)}appendBlock(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},appendBlockOperationSpec)}appendBlockFromUrl(e,t,a){return this.client.sendOperationRequest({sourceUrl:e,contentLength:t,options:a},appendBlockFromUrlOperationSpec)}seal(e){return this.client.sendOperationRequest({options:e},sealOperationSpec)}}const xmlSerializer$1=coreClient__namespace.createSerializer(Mappers,!0),createOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:AppendBlobCreateHeaders},default:{bodyMapper:StorageError,headersMapper:AppendBlobCreateExceptionHeaders}},queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition,immutabilityPolicyExpiry,immutabilityPolicyMode,encryptionScope,blobTagsString,legalHold1,blobType1],isXML:!0,serializer:xmlSerializer$1},appendBlockOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:AppendBlobAppendBlockHeaders},default:{bodyMapper:StorageError,headersMapper:AppendBlobAppendBlockExceptionHeaders}},requestBody:body1,queryParameters:[timeoutInSeconds,comp22],urlParameters:[url],headerParameters:[version,requestId,contentLength,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,transactionalContentMD5,transactionalContentCrc64,contentType1,accept2,maxSize,appendPosition],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:xmlSerializer$1},appendBlockFromUrlOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:AppendBlobAppendBlockFromUrlHeaders},default:{bodyMapper:StorageError,headersMapper:AppendBlobAppendBlockFromUrlExceptionHeaders}},queryParameters:[timeoutInSeconds,comp22],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,encryptionScope,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,sourceContentMD5,copySourceAuthorization,transactionalContentMD5,sourceUrl,sourceContentCrc64,maxSize,appendPosition,sourceRange1],isXML:!0,serializer:xmlSerializer$1},sealOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:AppendBlobSealHeaders},default:{bodyMapper:StorageError,headersMapper:AppendBlobSealExceptionHeaders}},queryParameters:[timeoutInSeconds,comp23],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifModifiedSince,ifUnmodifiedSince,ifMatch,ifNoneMatch,appendPosition],isXML:!0,serializer:xmlSerializer$1};class BlockBlobImpl{constructor(e){this.client=e}upload(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},uploadOperationSpec)}putBlobFromUrl(e,t,a){return this.client.sendOperationRequest({contentLength:e,copySource:t,options:a},putBlobFromUrlOperationSpec)}stageBlock(e,t,a,r){return this.client.sendOperationRequest({blockId:e,contentLength:t,body:a,options:r},stageBlockOperationSpec)}stageBlockFromURL(e,t,a,r){return this.client.sendOperationRequest({blockId:e,contentLength:t,sourceUrl:a,options:r},stageBlockFromURLOperationSpec)}commitBlockList(e,t){return this.client.sendOperationRequest({blocks:e,options:t},commitBlockListOperationSpec)}getBlockList(e,t){return this.client.sendOperationRequest({listType:e,options:t},getBlockListOperationSpec)}}const xmlSerializer=coreClient__namespace.createSerializer(Mappers,!0),uploadOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlockBlobUploadHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobUploadExceptionHeaders}},requestBody:body1,queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,contentLength,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition,immutabilityPolicyExpiry,immutabilityPolicyMode,encryptionScope,tier,blobTagsString,legalHold1,transactionalContentMD5,transactionalContentCrc64,contentType1,accept2,blobType2],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:xmlSerializer},putBlobFromUrlOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlockBlobPutBlobFromUrlHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobPutBlobFromUrlExceptionHeaders}},queryParameters:[timeoutInSeconds],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition,encryptionScope,tier,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,sourceIfTags,copySource,blobTagsString,sourceContentMD5,copySourceAuthorization,copySourceTags,transactionalContentMD5,blobType2,copySourceBlobProperties],isXML:!0,serializer:xmlSerializer},stageBlockOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlockBlobStageBlockHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobStageBlockExceptionHeaders}},requestBody:body1,queryParameters:[timeoutInSeconds,comp24,blockId],urlParameters:[url],headerParameters:[version,requestId,contentLength,leaseId,encryptionKey,encryptionKeySha256,encryptionAlgorithm,encryptionScope,transactionalContentMD5,transactionalContentCrc64,contentType1,accept2],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:xmlSerializer},stageBlockFromURLOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlockBlobStageBlockFromURLHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobStageBlockFromURLExceptionHeaders}},queryParameters:[timeoutInSeconds,comp24,blockId],urlParameters:[url],headerParameters:[version,requestId,accept1,contentLength,leaseId,encryptionKey,encryptionKeySha256,encryptionAlgorithm,encryptionScope,sourceIfModifiedSince,sourceIfUnmodifiedSince,sourceIfMatch,sourceIfNoneMatch,sourceContentMD5,copySourceAuthorization,sourceUrl,sourceContentCrc64,sourceRange1],isXML:!0,serializer:xmlSerializer},commitBlockListOperationSpec={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:BlockBlobCommitBlockListHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobCommitBlockListExceptionHeaders}},requestBody:blocks,queryParameters:[timeoutInSeconds,comp25],urlParameters:[url],headerParameters:[contentType,accept,version,requestId,metadata,leaseId,ifModifiedSince,ifUnmodifiedSince,encryptionKey,encryptionKeySha256,encryptionAlgorithm,ifMatch,ifNoneMatch,ifTags,blobCacheControl,blobContentType,blobContentMD5,blobContentEncoding,blobContentLanguage,blobContentDisposition,immutabilityPolicyExpiry,immutabilityPolicyMode,encryptionScope,tier,blobTagsString,legalHold1,transactionalContentMD5,transactionalContentCrc64],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:xmlSerializer},getBlockListOperationSpec={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:BlockList,headersMapper:BlockBlobGetBlockListHeaders},default:{bodyMapper:StorageError,headersMapper:BlockBlobGetBlockListExceptionHeaders}},queryParameters:[timeoutInSeconds,snapshot,comp25,listType],urlParameters:[url],headerParameters:[version,requestId,accept1,leaseId,ifTags],isXML:!0,serializer:xmlSerializer};let StorageClient$1=class extends coreHttpCompat__namespace.ExtendedServiceClient{constructor(e,t){var a,r;if(void 0===e)throw new Error("'url' cannot be null");t||(t={});const i="azsdk-js-azure-storage-blob/12.26.0",n=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`;super(Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8"}),t),{userAgentOptions:{userAgentPrefix:n},endpoint:null!==(r=null!==(a=t.endpoint)&&void 0!==a?a:t.baseUri)&&void 0!==r?r:"{url}"})),this.url=e,this.version=t.version||"2025-01-05",this.service=new ServiceImpl(this),this.container=new ContainerImpl(this),this.blob=new BlobImpl(this),this.pageBlob=new PageBlobImpl(this),this.appendBlob=new AppendBlobImpl(this),this.blockBlob=new BlockBlobImpl(this)}};class StorageContextClient extends StorageClient$1{async sendOperationRequest(e,t){const a=Object.assign({},t);return"/{containerName}"!==a.path&&"/{containerName}/{blob}"!==a.path||(a.path=""),super.sendOperationRequest(e,a)}}class StorageClient{constructor(e,t){this.url=escapeURLPath(e),this.accountName=getAccountNameFromUrl(e),this.pipeline=t,this.storageClientContext=new StorageContextClient(this.url,getCoreClientOptions(t)),this.isHttps=iEqual(getURLScheme(this.url)||"","https"),this.credential=getCredentialFromPipeline(t);this.storageClientContext.requestContentType=void 0}}const tracingClient=coreTracing.createTracingClient({packageName:"@azure/storage-blob",packageVersion:"12.26.0",namespace:"Microsoft.Storage"});class BlobSASPermissions{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new BlobSASPermissions;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"t":t.tag=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission: ${a}`)}return t}static from(e){const t=new BlobSASPermissions;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class ContainerSASPermissions{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1,this.filterByTags=!1}static parse(e){const t=new ContainerSASPermissions;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"l":t.list=!0;break;case"t":t.tag=!0;break;case"x":t.deleteVersion=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;case"f":t.filterByTags=!0;break;default:throw new RangeError(`Invalid permission ${a}`)}return t}static from(e){const t=new ContainerSASPermissions;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.list&&(t.list=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),e.filterByTags&&(t.filterByTags=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.list&&e.push("l"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),this.filterByTags&&e.push("f"),e.join("")}}class UserDelegationKeyCredential{constructor(e,t){this.accountName=e,this.userDelegationKey=t,this.key=Buffer.from(t.value,"base64")}computeHMACSHA256(e){return crypto.createHmac("sha256",this.key).update(e,"utf8").digest("base64")}}function ipRangeToString(e){return e.end?`${e.start}-${e.end}`:e.start}exports.SASProtocol=void 0,function(e){e.Https="https",e.HttpsAndHttp="https,http"}(exports.SASProtocol||(exports.SASProtocol={}));class SASQueryParameters{get ipRange(){if(this.ipRangeInner)return{end:this.ipRangeInner.end,start:this.ipRangeInner.start}}constructor(e,t,a,r,i,n,s,o,l,m,c,d,p,u,g,y,b,h,x,S){this.version=e,this.signature=t,void 0!==a&&"string"!=typeof a?(this.permissions=a.permissions,this.services=a.services,this.resourceTypes=a.resourceTypes,this.protocol=a.protocol,this.startsOn=a.startsOn,this.expiresOn=a.expiresOn,this.ipRangeInner=a.ipRange,this.identifier=a.identifier,this.encryptionScope=a.encryptionScope,this.resource=a.resource,this.cacheControl=a.cacheControl,this.contentDisposition=a.contentDisposition,this.contentEncoding=a.contentEncoding,this.contentLanguage=a.contentLanguage,this.contentType=a.contentType,a.userDelegationKey&&(this.signedOid=a.userDelegationKey.signedObjectId,this.signedTenantId=a.userDelegationKey.signedTenantId,this.signedStartsOn=a.userDelegationKey.signedStartsOn,this.signedExpiresOn=a.userDelegationKey.signedExpiresOn,this.signedService=a.userDelegationKey.signedService,this.signedVersion=a.userDelegationKey.signedVersion,this.preauthorizedAgentObjectId=a.preauthorizedAgentObjectId,this.correlationId=a.correlationId)):(this.services=r,this.resourceTypes=i,this.expiresOn=o,this.permissions=a,this.protocol=n,this.startsOn=s,this.ipRangeInner=l,this.encryptionScope=S,this.identifier=m,this.resource=c,this.cacheControl=d,this.contentDisposition=p,this.contentEncoding=u,this.contentLanguage=g,this.contentType=y,b&&(this.signedOid=b.signedObjectId,this.signedTenantId=b.signedTenantId,this.signedStartsOn=b.signedStartsOn,this.signedExpiresOn=b.signedExpiresOn,this.signedService=b.signedService,this.signedVersion=b.signedVersion,this.preauthorizedAgentObjectId=h,this.correlationId=x))}toString(){const e=["sv","ss","srt","spr","st","se","sip","si","ses","skoid","sktid","skt","ske","sks","skv","sr","sp","sig","rscc","rscd","rsce","rscl","rsct","saoid","scid"],t=[];for(const a of e)switch(a){case"sv":this.tryAppendQueryParameter(t,a,this.version);break;case"ss":this.tryAppendQueryParameter(t,a,this.services);break;case"srt":this.tryAppendQueryParameter(t,a,this.resourceTypes);break;case"spr":this.tryAppendQueryParameter(t,a,this.protocol);break;case"st":this.tryAppendQueryParameter(t,a,this.startsOn?truncatedISO8061Date(this.startsOn,!1):void 0);break;case"se":this.tryAppendQueryParameter(t,a,this.expiresOn?truncatedISO8061Date(this.expiresOn,!1):void 0);break;case"sip":this.tryAppendQueryParameter(t,a,this.ipRange?ipRangeToString(this.ipRange):void 0);break;case"si":this.tryAppendQueryParameter(t,a,this.identifier);break;case"ses":this.tryAppendQueryParameter(t,a,this.encryptionScope);break;case"skoid":this.tryAppendQueryParameter(t,a,this.signedOid);break;case"sktid":this.tryAppendQueryParameter(t,a,this.signedTenantId);break;case"skt":this.tryAppendQueryParameter(t,a,this.signedStartsOn?truncatedISO8061Date(this.signedStartsOn,!1):void 0);break;case"ske":this.tryAppendQueryParameter(t,a,this.signedExpiresOn?truncatedISO8061Date(this.signedExpiresOn,!1):void 0);break;case"sks":this.tryAppendQueryParameter(t,a,this.signedService);break;case"skv":this.tryAppendQueryParameter(t,a,this.signedVersion);break;case"sr":this.tryAppendQueryParameter(t,a,this.resource);break;case"sp":this.tryAppendQueryParameter(t,a,this.permissions);break;case"sig":this.tryAppendQueryParameter(t,a,this.signature);break;case"rscc":this.tryAppendQueryParameter(t,a,this.cacheControl);break;case"rscd":this.tryAppendQueryParameter(t,a,this.contentDisposition);break;case"rsce":this.tryAppendQueryParameter(t,a,this.contentEncoding);break;case"rscl":this.tryAppendQueryParameter(t,a,this.contentLanguage);break;case"rsct":this.tryAppendQueryParameter(t,a,this.contentType);break;case"saoid":this.tryAppendQueryParameter(t,a,this.preauthorizedAgentObjectId);break;case"scid":this.tryAppendQueryParameter(t,a,this.correlationId)}return t.join("&")}tryAppendQueryParameter(e,t,a){a&&(t=encodeURIComponent(t),a=encodeURIComponent(a),t.length>0&&a.length>0&&e.push(`${t}=${a}`))}}function generateBlobSASQueryParameters(e,t,a){return generateBlobSASQueryParametersInternal(e,t,a).sasQueryParameters}function generateBlobSASQueryParametersInternal(e,t,a){const r=e.version?e.version:SERVICE_VERSION,i=t instanceof StorageSharedKeyCredential?t:void 0;let n;if(void 0===i&&void 0!==a&&(n=new UserDelegationKeyCredential(a,t)),void 0===i&&void 0===n)throw TypeError("Invalid sharedKeyCredential, userDelegationKey or accountName.");if(r>="2020-12-06")return void 0!==i?generateBlobSASQueryParameters20201206(e,i):generateBlobSASQueryParametersUDK20201206(e,n);if(r>="2018-11-09")return void 0!==i?generateBlobSASQueryParameters20181109(e,i):r>="2020-02-10"?generateBlobSASQueryParametersUDK20200210(e,n):generateBlobSASQueryParametersUDK20181109(e,n);if(r>="2015-04-05"){if(void 0!==i)return generateBlobSASQueryParameters20150405(e,i);throw new RangeError("'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.")}throw new RangeError("'version' must be >= '2015-04-05'.")}function generateBlobSASQueryParameters20150405(e,t){if(!((e=SASSignatureValuesSanityCheckAndAutofill(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c";e.blobName&&(r="b"),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const i=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),n=t.computeHMACSHA256(i);return{sasQueryParameters:new SASQueryParameters(e.version,n,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType),stringToSign:i}}function generateBlobSASQueryParameters20181109(e,t){if(!((e=SASSignatureValuesSanityCheckAndAutofill(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new SASQueryParameters(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType),stringToSign:n}}function generateBlobSASQueryParameters20201206(e,t){if(!((e=SASSignatureValuesSanityCheckAndAutofill(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.encryptionScope,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new SASQueryParameters(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,void 0,void 0,void 0,e.encryptionScope),stringToSign:n}}function generateBlobSASQueryParametersUDK20181109(e,t){if(!(e=SASSignatureValuesSanityCheckAndAutofill(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?truncatedISO8061Date(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?truncatedISO8061Date(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new SASQueryParameters(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey),stringToSign:n}}function generateBlobSASQueryParametersUDK20200210(e,t){if(!(e=SASSignatureValuesSanityCheckAndAutofill(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?truncatedISO8061Date(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?truncatedISO8061Date(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new SASQueryParameters(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId),stringToSign:n}}function generateBlobSASQueryParametersUDK20201206(e,t){if(!(e=SASSignatureValuesSanityCheckAndAutofill(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?BlobSASPermissions.parse(e.permissions.toString()).toString():ContainerSASPermissions.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",e.expiresOn?truncatedISO8061Date(e.expiresOn,!1):"",getCanonicalName(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?truncatedISO8061Date(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?truncatedISO8061Date(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.encryptionScope,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new SASQueryParameters(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId,e.encryptionScope),stringToSign:n}}function getCanonicalName(e,t,a){const r=[`/blob/${e}/${t}`];return a&&r.push(`/${a}`),r.join("")}function SASSignatureValuesSanityCheckAndAutofill(e){const t=e.version?e.version:SERVICE_VERSION;if(e.snapshotTime&&t<"2018-11-09")throw RangeError("'version' must be >= '2018-11-09' when providing 'snapshotTime'.");if(void 0===e.blobName&&e.snapshotTime)throw RangeError("Must provide 'blobName' when providing 'snapshotTime'.");if(e.versionId&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'versionId'.");if(void 0===e.blobName&&e.versionId)throw RangeError("Must provide 'blobName' when providing 'versionId'.");if(e.permissions&&e.permissions.setImmutabilityPolicy&&t<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'y' permission.");if(e.permissions&&e.permissions.tag&&t<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when providing 't' permission.");if(t<"2020-02-10"&&e.permissions&&(e.permissions.move||e.permissions.execute))throw RangeError("'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.");if(t<"2021-04-10"&&e.permissions&&e.permissions.filterByTags)throw RangeError("'version' must be >= '2021-04-10' when providing the 'f' permission.");if(t<"2020-02-10"&&(e.preauthorizedAgentObjectId||e.correlationId))throw RangeError("'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.");if(e.encryptionScope&&t<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");return e.version=t,e}class BlobLeaseClient{get leaseId(){return this._leaseId}get url(){return this._url}constructor(e,t){const a=e.storageClientContext;this._url=e.url,void 0===e.name?(this._isContainer=!0,this._containerOrBlobOperation=a.container):(this._isContainer=!1,this._containerOrBlobOperation=a.blob),t||(t=coreUtil.randomUUID()),this._leaseId=t}async acquireLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&""!==(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&""!==(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return tracingClient.withSpan("BlobLeaseClient-acquireLease",t,(async a=>{var r;return assertResponse(await this._containerOrBlobOperation.acquireLease({abortSignal:t.abortSignal,duration:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),proposedLeaseId:this._leaseId,tracingOptions:a.tracingOptions}))}))}async changeLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&""!==(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&""!==(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return tracingClient.withSpan("BlobLeaseClient-changeLease",t,(async a=>{var r;const i=assertResponse(await this._containerOrBlobOperation.changeLease(this._leaseId,e,{abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}));return this._leaseId=e,i}))}async releaseLease(e={}){var t,a,r,i,n;if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&""!==(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&""!==(null===(i=e.conditions)||void 0===i?void 0:i.ifNoneMatch)||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return tracingClient.withSpan("BlobLeaseClient-releaseLease",e,(async t=>{var a;return assertResponse(await this._containerOrBlobOperation.releaseLease(this._leaseId,{abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async renewLease(e={}){var t,a,r,i,n;if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&""!==(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&""!==(null===(i=e.conditions)||void 0===i?void 0:i.ifNoneMatch)||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return tracingClient.withSpan("BlobLeaseClient-renewLease",e,(async t=>{var a;return this._containerOrBlobOperation.renewLease(this._leaseId,{abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions})}))}async breakLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&""!==(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&""!==(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return tracingClient.withSpan("BlobLeaseClient-breakLease",t,(async a=>{var r;const i={abortSignal:t.abortSignal,breakPeriod:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions};return assertResponse(await this._containerOrBlobOperation.breakLease(i))}))}}class RetriableReadableStream extends stream.Readable{constructor(e,t,a,r,i={}){super({highWaterMark:i.highWaterMark}),this.retries=0,this.sourceDataHandler=e=>{if(this.options.doInjectErrorOnce)return this.options.doInjectErrorOnce=void 0,this.source.pause(),this.sourceErrorOrEndHandler(),void this.source.destroy();this.offset+=e.length,this.onProgress&&this.onProgress({loadedBytes:this.offset-this.start}),this.push(e)||this.source.pause()},this.sourceAbortedHandler=()=>{const e=new abortController.AbortError("The operation was aborted.");this.destroy(e)},this.sourceErrorOrEndHandler=e=>{e&&"AbortError"===e.name?this.destroy(e):(this.removeSourceEventHandlers(),this.offset-1===this.end?this.push(null):this.offset<=this.end?this.retries<this.maxRetryRequests?(this.retries+=1,this.getter(this.offset).then((e=>{this.source=e,this.setSourceEventHandlers()})).catch((e=>{this.destroy(e)}))):this.destroy(new Error(`Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this.offset-1}, data needed offset: ${this.end}, retries: ${this.retries}, max retries: ${this.maxRetryRequests}`)):this.destroy(new Error(`Data corruption failure: Received more data than original request, data needed offset is ${this.end}, received offset: ${this.offset-1}`)))},this.getter=t,this.source=e,this.start=a,this.offset=a,this.end=a+r-1,this.maxRetryRequests=i.maxRetryRequests&&i.maxRetryRequests>=0?i.maxRetryRequests:0,this.onProgress=i.onProgress,this.options=i,this.setSourceEventHandlers()}_read(){this.source.resume()}setSourceEventHandlers(){this.source.on("data",this.sourceDataHandler),this.source.on("end",this.sourceErrorOrEndHandler),this.source.on("error",this.sourceErrorOrEndHandler),this.source.on("aborted",this.sourceAbortedHandler)}removeSourceEventHandlers(){this.source.removeListener("data",this.sourceDataHandler),this.source.removeListener("end",this.sourceErrorOrEndHandler),this.source.removeListener("error",this.sourceErrorOrEndHandler),this.source.removeListener("aborted",this.sourceAbortedHandler)}_destroy(e,t){this.removeSourceEventHandlers(),this.source.destroy(),t(null===e?void 0:e)}}class BlobDownloadResponse{get acceptRanges(){return this.originalResponse.acceptRanges}get cacheControl(){return this.originalResponse.cacheControl}get contentDisposition(){return this.originalResponse.contentDisposition}get contentEncoding(){return this.originalResponse.contentEncoding}get contentLanguage(){return this.originalResponse.contentLanguage}get blobSequenceNumber(){return this.originalResponse.blobSequenceNumber}get blobType(){return this.originalResponse.blobType}get contentLength(){return this.originalResponse.contentLength}get contentMD5(){return this.originalResponse.contentMD5}get contentRange(){return this.originalResponse.contentRange}get contentType(){return this.originalResponse.contentType}get copyCompletedOn(){return this.originalResponse.copyCompletedOn}get copyId(){return this.originalResponse.copyId}get copyProgress(){return this.originalResponse.copyProgress}get copySource(){return this.originalResponse.copySource}get copyStatus(){return this.originalResponse.copyStatus}get copyStatusDescription(){return this.originalResponse.copyStatusDescription}get leaseDuration(){return this.originalResponse.leaseDuration}get leaseState(){return this.originalResponse.leaseState}get leaseStatus(){return this.originalResponse.leaseStatus}get date(){return this.originalResponse.date}get blobCommittedBlockCount(){return this.originalResponse.blobCommittedBlockCount}get etag(){return this.originalResponse.etag}get tagCount(){return this.originalResponse.tagCount}get errorCode(){return this.originalResponse.errorCode}get isServerEncrypted(){return this.originalResponse.isServerEncrypted}get blobContentMD5(){return this.originalResponse.blobContentMD5}get lastModified(){return this.originalResponse.lastModified}get lastAccessed(){return this.originalResponse.lastAccessed}get createdOn(){return this.originalResponse.createdOn}get metadata(){return this.originalResponse.metadata}get requestId(){return this.originalResponse.requestId}get clientRequestId(){return this.originalResponse.clientRequestId}get version(){return this.originalResponse.version}get versionId(){return this.originalResponse.versionId}get isCurrentVersion(){return this.originalResponse.isCurrentVersion}get encryptionKeySha256(){return this.originalResponse.encryptionKeySha256}get contentCrc64(){return this.originalResponse.contentCrc64}get objectReplicationDestinationPolicyId(){return this.originalResponse.objectReplicationDestinationPolicyId}get objectReplicationSourceProperties(){return this.originalResponse.objectReplicationSourceProperties}get isSealed(){return this.originalResponse.isSealed}get immutabilityPolicyExpiresOn(){return this.originalResponse.immutabilityPolicyExpiresOn}get immutabilityPolicyMode(){return this.originalResponse.immutabilityPolicyMode}get legalHold(){return this.originalResponse.legalHold}get contentAsBlob(){return this.originalResponse.blobBody}get readableStreamBody(){return coreUtil.isNode?this.blobDownloadStream:void 0}get _response(){return this.originalResponse._response}constructor(e,t,a,r,i={}){this.originalResponse=e,this.blobDownloadStream=new RetriableReadableStream(this.originalResponse.readableStreamBody,t,a,r,i)}}const AVRO_SYNC_MARKER_SIZE=16,AVRO_INIT_BYTES=new Uint8Array([79,98,106,1]),AVRO_CODEC_KEY="avro.codec",AVRO_SCHEMA_KEY="avro.schema";class AvroParser{static async readFixedBytes(e,t,a={}){const r=await e.read(t,{abortSignal:a.abortSignal});if(r.length!==t)throw new Error("Hit stream end.");return r}static async readByte(e,t={}){return(await AvroParser.readFixedBytes(e,1,t))[0]}static async readZigZagLong(e,t={}){let a,r,i,n=0,s=0;do{a=await AvroParser.readByte(e,t),r=128&a,n|=(127&a)<<s,s+=7}while(r&&s<28);if(r){i=268435456;do{a=await AvroParser.readByte(e,t),n+=(127&a)*i,i*=128}while(128&a);const r=(n%2?-(n+1):n)/2;if(r<Number.MIN_SAFE_INTEGER||r>Number.MAX_SAFE_INTEGER)throw new Error("Integer overflow.");return r}return n>>1^-(1&n)}static async readLong(e,t={}){return AvroParser.readZigZagLong(e,t)}static async readInt(e,t={}){return AvroParser.readZigZagLong(e,t)}static async readNull(){return null}static async readBoolean(e,t={}){const a=await AvroParser.readByte(e,t);if(1===a)return!0;if(0===a)return!1;throw new Error("Byte was not a boolean.")}static async readFloat(e,t={}){const a=await AvroParser.readFixedBytes(e,4,t);return new DataView(a.buffer,a.byteOffset,a.byteLength).getFloat32(0,!0)}static async readDouble(e,t={}){const a=await AvroParser.readFixedBytes(e,8,t);return new DataView(a.buffer,a.byteOffset,a.byteLength).getFloat64(0,!0)}static async readBytes(e,t={}){const a=await AvroParser.readLong(e,t);if(a<0)throw new Error("Bytes size was negative.");return e.read(a,{abortSignal:t.abortSignal})}static async readString(e,t={}){const a=await AvroParser.readBytes(e,t);return(new TextDecoder).decode(a)}static async readMapPair(e,t,a={}){return{key:await AvroParser.readString(e,a),value:await t(e,a)}}static async readMap(e,t,a={}){const r=await AvroParser.readArray(e,((e,a={})=>AvroParser.readMapPair(e,t,a)),a),i={};for(const e of r)i[e.key]=e.value;return i}static async readArray(e,t,a={}){const r=[];for(let i=await AvroParser.readLong(e,a);0!==i;i=await AvroParser.readLong(e,a))for(i<0&&(await AvroParser.readLong(e,a),i=-i);i--;){const i=await t(e,a);r.push(i)}return r}}var AvroComplex,AvroPrimitive;!function(e){e.RECORD="record",e.ENUM="enum",e.ARRAY="array",e.MAP="map",e.UNION="union",e.FIXED="fixed"}(AvroComplex||(AvroComplex={})),function(e){e.NULL="null",e.BOOLEAN="boolean",e.INT="int",e.LONG="long",e.FLOAT="float",e.DOUBLE="double",e.BYTES="bytes",e.STRING="string"}(AvroPrimitive||(AvroPrimitive={}));class AvroType{static fromSchema(e){return"string"==typeof e?AvroType.fromStringSchema(e):Array.isArray(e)?AvroType.fromArraySchema(e):AvroType.fromObjectSchema(e)}static fromStringSchema(e){switch(e){case AvroPrimitive.NULL:case AvroPrimitive.BOOLEAN:case AvroPrimitive.INT:case AvroPrimitive.LONG:case AvroPrimitive.FLOAT:case AvroPrimitive.DOUBLE:case AvroPrimitive.BYTES:case AvroPrimitive.STRING:return new AvroPrimitiveType(e);default:throw new Error(`Unexpected Avro type ${e}`)}}static fromArraySchema(e){return new AvroUnionType(e.map(AvroType.fromSchema))}static fromObjectSchema(e){const t=e.type;try{return AvroType.fromStringSchema(t)}catch(e){}switch(t){case AvroComplex.RECORD:if(e.aliases)throw new Error(`aliases currently is not supported, schema: ${e}`);if(!e.name)throw new Error(`Required attribute 'name' doesn't exist on schema: ${e}`);const a={};if(!e.fields)throw new Error(`Required attribute 'fields' doesn't exist on schema: ${e}`);for(const t of e.fields)a[t.name]=AvroType.fromSchema(t.type);return new AvroRecordType(a,e.name);case AvroComplex.ENUM:if(e.aliases)throw new Error(`aliases currently is not supported, schema: ${e}`);if(!e.symbols)throw new Error(`Required attribute 'symbols' doesn't exist on schema: ${e}`);return new AvroEnumType(e.symbols);case AvroComplex.MAP:if(!e.values)throw new Error(`Required attribute 'values' doesn't exist on schema: ${e}`);return new AvroMapType(AvroType.fromSchema(e.values));case AvroComplex.ARRAY:case AvroComplex.FIXED:default:throw new Error(`Unexpected Avro type ${t} in ${e}`)}}}class AvroPrimitiveType extends AvroType{constructor(e){super(),this._primitive=e}read(e,t={}){switch(this._primitive){case AvroPrimitive.NULL:return AvroParser.readNull();case AvroPrimitive.BOOLEAN:return AvroParser.readBoolean(e,t);case AvroPrimitive.INT:return AvroParser.readInt(e,t);case AvroPrimitive.LONG:return AvroParser.readLong(e,t);case AvroPrimitive.FLOAT:return AvroParser.readFloat(e,t);case AvroPrimitive.DOUBLE:return AvroParser.readDouble(e,t);case AvroPrimitive.BYTES:return AvroParser.readBytes(e,t);case AvroPrimitive.STRING:return AvroParser.readString(e,t);default:throw new Error("Unknown Avro Primitive")}}}class AvroEnumType extends AvroType{constructor(e){super(),this._symbols=e}async read(e,t={}){const a=await AvroParser.readInt(e,t);return this._symbols[a]}}class AvroUnionType extends AvroType{constructor(e){super(),this._types=e}async read(e,t={}){const a=await AvroParser.readInt(e,t);return this._types[a].read(e,t)}}class AvroMapType extends AvroType{constructor(e){super(),this._itemType=e}read(e,t={}){return AvroParser.readMap(e,((e,t)=>this._itemType.read(e,t)),t)}}class AvroRecordType extends AvroType{constructor(e,t){super(),this._fields=e,this._name=t}async read(e,t={}){const a={};a.$schema=this._name;for(const r in this._fields)Object.prototype.hasOwnProperty.call(this._fields,r)&&(a[r]=await this._fields[r].read(e,t));return a}}function arraysEqual(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let a=0;a<e.length;++a)if(e[a]!==t[a])return!1;return!0}class AvroReader{get blockOffset(){return this._blockOffset}get objectIndex(){return this._objectIndex}constructor(e,t,a,r){this._dataStream=e,this._headerStream=t||e,this._initialized=!1,this._blockOffset=a||0,this._objectIndex=r||0,this._initialBlockOffset=a||0}async initialize(e={}){if(!arraysEqual(await AvroParser.readFixedBytes(this._headerStream,AVRO_INIT_BYTES.length,{abortSignal:e.abortSignal}),AVRO_INIT_BYTES))throw new Error("Stream is not an Avro file.");this._metadata=await AvroParser.readMap(this._headerStream,AvroParser.readString,{abortSignal:e.abortSignal});const t=this._metadata["avro.codec"];if(null!=t&&"null"!==t)throw new Error("Codecs are not supported");this._syncMarker=await AvroParser.readFixedBytes(this._headerStream,16,{abortSignal:e.abortSignal});const a=JSON.parse(this._metadata["avro.schema"]);if(this._itemType=AvroType.fromSchema(a),0===this._blockOffset&&(this._blockOffset=this._initialBlockOffset+this._dataStream.position),this._itemsRemainingInBlock=await AvroParser.readLong(this._dataStream,{abortSignal:e.abortSignal}),await AvroParser.readLong(this._dataStream,{abortSignal:e.abortSignal}),this._initialized=!0,this._objectIndex&&this._objectIndex>0)for(let t=0;t<this._objectIndex;t++)await this._itemType.read(this._dataStream,{abortSignal:e.abortSignal}),this._itemsRemainingInBlock--}hasNext(){return!this._initialized||this._itemsRemainingInBlock>0}parseObjects(){return tslib.__asyncGenerator(this,arguments,(function*(e={}){for(this._initialized||(yield tslib.__await(this.initialize(e)));this.hasNext();){const t=yield tslib.__await(this._itemType.read(this._dataStream,{abortSignal:e.abortSignal}));if(this._itemsRemainingInBlock--,this._objectIndex++,0===this._itemsRemainingInBlock){const t=yield tslib.__await(AvroParser.readFixedBytes(this._dataStream,16,{abortSignal:e.abortSignal}));if(this._blockOffset=this._initialBlockOffset+this._dataStream.position,this._objectIndex=0,!arraysEqual(this._syncMarker,t))throw new Error("Stream is not a valid Avro file.");try{this._itemsRemainingInBlock=yield tslib.__await(AvroParser.readLong(this._dataStream,{abortSignal:e.abortSignal}))}catch(e){this._itemsRemainingInBlock=0}this._itemsRemainingInBlock>0&&(yield tslib.__await(AvroParser.readLong(this._dataStream,{abortSignal:e.abortSignal})))}yield yield tslib.__await(t)}}))}}class AvroReadable{}const ABORT_ERROR=new abortController.AbortError("Reading from the avro stream was aborted.");class AvroReadableFromStream extends AvroReadable{toUint8Array(e){return"string"==typeof e?Buffer.from(e):e}constructor(e){super(),this._readable=e,this._position=0}get position(){return this._position}async read(e,t={}){var a;if(null===(a=t.abortSignal)||void 0===a?void 0:a.aborted)throw ABORT_ERROR;if(e<0)throw new Error(`size parameter should be positive: ${e}`);if(0===e)return new Uint8Array;if(!this._readable.readable)throw new Error("Stream no longer readable.");const r=this._readable.read(e);return r?(this._position+=r.length,this.toUint8Array(r)):new Promise(((a,r)=>{const i=()=>{this._readable.removeListener("readable",n),this._readable.removeListener("error",s),this._readable.removeListener("end",s),this._readable.removeListener("close",s),t.abortSignal&&t.abortSignal.removeEventListener("abort",o)},n=()=>{const t=this._readable.read(e);t&&(this._position+=t.length,i(),a(this.toUint8Array(t)))},s=()=>{i(),r()},o=()=>{i(),r(ABORT_ERROR)};this._readable.on("readable",n),this._readable.once("error",s),this._readable.once("end",s),this._readable.once("close",s),t.abortSignal&&t.abortSignal.addEventListener("abort",o)}))}}class BlobQuickQueryStream extends stream.Readable{constructor(e,t={}){super(),this.avroPaused=!0,this.source=e,this.onProgress=t.onProgress,this.onError=t.onError,this.avroReader=new AvroReader(new AvroReadableFromStream(this.source)),this.avroIter=this.avroReader.parseObjects({abortSignal:t.abortSignal})}_read(){this.avroPaused&&this.readInternal().catch((e=>{this.emit("error",e)}))}async readInternal(){let e;this.avroPaused=!1;do{if(e=await this.avroIter.next(),e.done)break;const t=e.value,a=t.$schema;if("string"!=typeof a)throw Error("Missing schema in avro record.");switch(a){case"com.microsoft.azure.storage.queryBlobContents.resultData":{const e=t.data;if(e instanceof Uint8Array==!1)throw Error("Invalid data in avro result record.");this.push(Buffer.from(e))||(this.avroPaused=!0)}break;case"com.microsoft.azure.storage.queryBlobContents.progress":{const e=t.bytesScanned;if("number"!=typeof e)throw Error("Invalid bytesScanned in avro progress record.");this.onProgress&&this.onProgress({loadedBytes:e})}break;case"com.microsoft.azure.storage.queryBlobContents.end":if(this.onProgress){const e=t.totalBytes;if("number"!=typeof e)throw Error("Invalid totalBytes in avro end record.");this.onProgress({loadedBytes:e})}this.push(null);break;case"com.microsoft.azure.storage.queryBlobContents.error":if(this.onError){const e=t.fatal;if("boolean"!=typeof e)throw Error("Invalid fatal in avro error record.");const a=t.name;if("string"!=typeof a)throw Error("Invalid name in avro error record.");const r=t.description;if("string"!=typeof r)throw Error("Invalid description in avro error record.");const i=t.position;if("number"!=typeof i)throw Error("Invalid position in avro error record.");this.onError({position:i,name:a,isFatal:e,description:r})}break;default:throw Error(`Unknown schema ${a} in avro progress record.`)}}while(!e.done&&!this.avroPaused)}}class BlobQueryResponse{get acceptRanges(){return this.originalResponse.acceptRanges}get cacheControl(){return this.originalResponse.cacheControl}get contentDisposition(){return this.originalResponse.contentDisposition}get contentEncoding(){return this.originalResponse.contentEncoding}get contentLanguage(){return this.originalResponse.contentLanguage}get blobSequenceNumber(){return this.originalResponse.blobSequenceNumber}get blobType(){return this.originalResponse.blobType}get contentLength(){return this.originalResponse.contentLength}get contentMD5(){return this.originalResponse.contentMD5}get contentRange(){return this.originalResponse.contentRange}get contentType(){return this.originalResponse.contentType}get copyCompletedOn(){}get copyId(){return this.originalResponse.copyId}get copyProgress(){return this.originalResponse.copyProgress}get copySource(){return this.originalResponse.copySource}get copyStatus(){return this.originalResponse.copyStatus}get copyStatusDescription(){return this.originalResponse.copyStatusDescription}get leaseDuration(){return this.originalResponse.leaseDuration}get leaseState(){return this.originalResponse.leaseState}get leaseStatus(){return this.originalResponse.leaseStatus}get date(){return this.originalResponse.date}get blobCommittedBlockCount(){return this.originalResponse.blobCommittedBlockCount}get etag(){return this.originalResponse.etag}get errorCode(){return this.originalResponse.errorCode}get isServerEncrypted(){return this.originalResponse.isServerEncrypted}get blobContentMD5(){return this.originalResponse.blobContentMD5}get lastModified(){return this.originalResponse.lastModified}get metadata(){return this.originalResponse.metadata}get requestId(){return this.originalResponse.requestId}get clientRequestId(){return this.originalResponse.clientRequestId}get version(){return this.originalResponse.version}get encryptionKeySha256(){return this.originalResponse.encryptionKeySha256}get contentCrc64(){return this.originalResponse.contentCrc64}get blobBody(){}get readableStreamBody(){return coreUtil.isNode?this.blobDownloadStream:void 0}get _response(){return this.originalResponse._response}constructor(e,t={}){this.originalResponse=e,this.blobDownloadStream=new BlobQuickQueryStream(this.originalResponse.readableStreamBody,t)}}function toAccessTier(e){if(void 0!==e)return e}function ensureCpkIfSpecified(e,t){if(e&&!t)throw new RangeError("Customer-provided encryption key must be used over HTTPS.");e&&!e.encryptionAlgorithm&&(e.encryptionAlgorithm="AES256")}function getBlobServiceAccountAudience(e){return`https://${e}.blob.core.windows.net/.default`}function rangeResponseFromModel(e){const t=(e._response.parsedBody.pageRange||[]).map((e=>({offset:e.start,count:e.end-e.start}))),a=(e._response.parsedBody.clearRange||[]).map((e=>({offset:e.start,count:e.end-e.start})));return Object.assign(Object.assign({},e),{pageRange:t,clearRange:a,_response:Object.assign(Object.assign({},e._response),{parsedBody:{pageRange:t,clearRange:a}})})}exports.BlockBlobTier=void 0,function(e){e.Hot="Hot",e.Cool="Cool",e.Cold="Cold",e.Archive="Archive"}(exports.BlockBlobTier||(exports.BlockBlobTier={})),exports.PremiumPageBlobTier=void 0,function(e){e.P4="P4",e.P6="P6",e.P10="P10",e.P15="P15",e.P20="P20",e.P30="P30",e.P40="P40",e.P50="P50",e.P60="P60",e.P70="P70",e.P80="P80"}(exports.PremiumPageBlobTier||(exports.PremiumPageBlobTier={})),exports.StorageBlobAudience=void 0,function(e){e.StorageOAuthScopes="https://storage.azure.com/.default",e.DiskComputeOAuthScopes="https://disk.compute.azure.com/.default"}(exports.StorageBlobAudience||(exports.StorageBlobAudience={}));class BlobBeginCopyFromUrlPoller extends coreLro.Poller{constructor(e){const{blobClient:t,copySource:a,intervalInMs:r=15e3,onProgress:i,resumeFrom:n,startCopyFromURLOptions:s}=e;let o;n&&(o=JSON.parse(n).state);super(makeBlobBeginCopyFromURLPollOperation(Object.assign(Object.assign({},o),{blobClient:t,copySource:a,startCopyFromURLOptions:s}))),"function"==typeof i&&this.onProgress(i),this.intervalInMs=r}delay(){return coreUtil.delay(this.intervalInMs)}}const cancel=async function(e={}){const t=this.state,{copyId:a}=t;return t.isCompleted?makeBlobBeginCopyFromURLPollOperation(t):a?(await t.blobClient.abortCopyFromURL(a,{abortSignal:e.abortSignal}),t.isCancelled=!0,makeBlobBeginCopyFromURLPollOperation(t)):(t.isCancelled=!0,makeBlobBeginCopyFromURLPollOperation(t))},update=async function(e={}){const t=this.state,{blobClient:a,copySource:r,startCopyFromURLOptions:i}=t;if(t.isStarted){if(!t.isCompleted)try{const a=await t.blobClient.getProperties({abortSignal:e.abortSignal}),{copyStatus:r,copyProgress:i}=a,n=t.copyProgress;i&&(t.copyProgress=i),"pending"===r&&i!==n&&"function"==typeof e.fireProgress?e.fireProgress(t):"success"===r?(t.result=a,t.isCompleted=!0):"failed"===r&&(t.error=new Error(`Blob copy failed with reason: "${a.copyStatusDescription||"unknown"}"`),t.isCompleted=!0)}catch(e){t.error=e,t.isCompleted=!0}}else{t.isStarted=!0;const e=await a.startCopyFromURL(r,i);t.copyId=e.copyId,"success"===e.copyStatus&&(t.result=e,t.isCompleted=!0)}return makeBlobBeginCopyFromURLPollOperation(t)},toString=function(){return JSON.stringify({state:this.state},((e,t)=>{if("blobClient"!==e)return t}))};function makeBlobBeginCopyFromURLPollOperation(e){return{state:Object.assign({},e),cancel:cancel,toString:toString,update:update}}function rangeToString(e){if(e.offset<0)throw new RangeError("Range.offset cannot be smaller than 0.");if(e.count&&e.count<=0)throw new RangeError("Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.");return e.count?`bytes=${e.offset}-${e.offset+e.count-1}`:`bytes=${e.offset}-`}var BatchStates;!function(e){e[e.Good=0]="Good",e[e.Error=1]="Error"}(BatchStates||(BatchStates={}));class Batch{constructor(e=5){if(this.actives=0,this.completed=0,this.offset=0,this.operations=[],this.state=BatchStates.Good,e<1)throw new RangeError("concurrency must be larger than 0");this.concurrency=e,this.emitter=new events.EventEmitter}addOperation(e){this.operations.push((async()=>{try{this.actives++,await e(),this.actives--,this.completed++,this.parallelExecute()}catch(e){this.emitter.emit("error",e)}}))}async do(){return 0===this.operations.length?Promise.resolve():(this.parallelExecute(),new Promise(((e,t)=>{this.emitter.on("finish",e),this.emitter.on("error",(e=>{this.state=BatchStates.Error,t(e)}))})))}nextOperation(){return this.offset<this.operations.length?this.operations[this.offset++]:null}parallelExecute(){if(this.state!==BatchStates.Error)if(this.completed>=this.operations.length)this.emitter.emit("finish");else for(;this.actives<this.concurrency;){const e=this.nextOperation();if(!e)return;e()}}}class BuffersStream extends stream.Readable{constructor(e,t,a){super(a),this.buffers=e,this.byteLength=t,this.byteOffsetInCurrentBuffer=0,this.bufferIndex=0,this.pushedBytesLength=0;let r=0;for(const e of this.buffers)r+=e.byteLength;if(r<this.byteLength)throw new Error("Data size shouldn't be larger than the total length of buffers.")}_read(e){this.pushedBytesLength>=this.byteLength&&this.push(null),e||(e=this.readableHighWaterMark);const t=[];let a=0;for(;a<e&&this.pushedBytesLength<this.byteLength;){const r=this.byteLength-this.pushedBytesLength,i=this.buffers[this.bufferIndex].byteLength-this.byteOffsetInCurrentBuffer,n=Math.min(i,r);if(n>e-a){const r=this.byteOffsetInCurrentBuffer+e-a;t.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer,r)),this.pushedBytesLength+=e-a,this.byteOffsetInCurrentBuffer=r,a=e;break}{const e=this.byteOffsetInCurrentBuffer+n;t.push(this.buffers[this.bufferIndex].slice(this.byteOffsetInCurrentBuffer,e)),n===i?(this.byteOffsetInCurrentBuffer=0,this.bufferIndex++):this.byteOffsetInCurrentBuffer=e,this.pushedBytesLength+=n,a+=n}}t.length>1?this.push(Buffer.concat(t)):1===t.length&&this.push(t[0])}}const maxBufferLength=buffer.constants.MAX_LENGTH;class PooledBuffer{get size(){return this._size}constructor(e,t,a){this.buffers=[],this.capacity=e,this._size=0;const r=Math.ceil(e/maxBufferLength);for(let t=0;t<r;t++){let a=t===r-1?e%maxBufferLength:maxBufferLength;0===a&&(a=maxBufferLength),this.buffers.push(Buffer.allocUnsafe(a))}t&&this.fill(t,a)}fill(e,t){this._size=Math.min(this.capacity,t);let a=0,r=0,i=0,n=0,s=0;for(;s<this._size;){const t=e[a],o=this.buffers[r],l=t.copy(o,i,n);s+=l,n+=l,i+=l,n===t.length&&(a++,n=0),i===o.length&&(r++,i=0)}e.splice(0,a),e.length>0&&(e[0]=e[0].slice(n))}getReadableStream(){return new BuffersStream(this.buffers,this.size)}}class BufferScheduler{constructor(e,t,a,r,i,n){if(this.emitter=new events.EventEmitter,this.offset=0,this.isStreamEnd=!1,this.isError=!1,this.executingOutgoingHandlers=0,this.numBuffers=0,this.unresolvedDataArray=[],this.unresolvedLength=0,this.incoming=[],this.outgoing=[],t<=0)throw new RangeError(`bufferSize must be larger than 0, current is ${t}`);if(a<=0)throw new RangeError(`maxBuffers must be larger than 0, current is ${a}`);if(i<=0)throw new RangeError(`concurrency must be larger than 0, current is ${i}`);this.bufferSize=t,this.maxBuffers=a,this.readable=e,this.outgoingHandler=r,this.concurrency=i,this.encoding=n}async do(){return new Promise(((e,t)=>{this.readable.on("data",(e=>{e="string"==typeof e?Buffer.from(e,this.encoding):e,this.appendUnresolvedData(e),this.resolveData()||this.readable.pause()})),this.readable.on("error",(e=>{this.emitter.emit("error",e)})),this.readable.on("end",(()=>{this.isStreamEnd=!0,this.emitter.emit("checkEnd")})),this.emitter.on("error",(e=>{this.isError=!0,this.readable.pause(),t(e)})),this.emitter.on("checkEnd",(()=>{if(this.outgoing.length>0)this.triggerOutgoingHandlers();else if(this.isStreamEnd&&0===this.executingOutgoingHandlers)if(this.unresolvedLength>0&&this.unresolvedLength<this.bufferSize){const a=this.shiftBufferFromUnresolvedDataArray();this.outgoingHandler((()=>a.getReadableStream()),a.size,this.offset).then(e).catch(t)}else{if(this.unresolvedLength>=this.bufferSize)return;e()}}))}))}appendUnresolvedData(e){this.unresolvedDataArray.push(e),this.unresolvedLength+=e.length}shiftBufferFromUnresolvedDataArray(e){return e?e.fill(this.unresolvedDataArray,this.unresolvedLength):e=new PooledBuffer(this.bufferSize,this.unresolvedDataArray,this.unresolvedLength),this.unresolvedLength-=e.size,e}resolveData(){for(;this.unresolvedLength>=this.bufferSize;){let e;if(this.incoming.length>0)e=this.incoming.shift(),this.shiftBufferFromUnresolvedDataArray(e);else{if(!(this.numBuffers<this.maxBuffers))return!1;e=this.shiftBufferFromUnresolvedDataArray(),this.numBuffers++}this.outgoing.push(e),this.triggerOutgoingHandlers()}return!0}async triggerOutgoingHandlers(){let e;do{if(this.executingOutgoingHandlers>=this.concurrency)return;e=this.outgoing.shift(),e&&this.triggerOutgoingHandler(e)}while(e)}async triggerOutgoingHandler(e){const t=e.size;this.executingOutgoingHandlers++,this.offset+=t;try{await this.outgoingHandler((()=>e.getReadableStream()),t,this.offset-t)}catch(e){return void this.emitter.emit("error",e)}this.executingOutgoingHandlers--,this.reuseBuffer(e),this.emitter.emit("checkEnd")}reuseBuffer(e){this.incoming.push(e),this.isError||!this.resolveData()||this.isStreamEnd||this.readable.resume()}}async function streamToBuffer(e,t,a,r,i){let n=0;const s=r-a;return new Promise(((r,o)=>{const l=setTimeout((()=>o(new Error("The operation cannot be completed in timeout."))),1e5);e.on("readable",(()=>{if(n>=s)return clearTimeout(l),void r();let o=e.read();if(!o)return;"string"==typeof o&&(o=Buffer.from(o,i));const m=n+o.length>s?s-n:o.length;t.fill(o.slice(0,m),a+n,a+n+m),n+=m})),e.on("end",(()=>{clearTimeout(l),n<s&&o(new Error(`Stream drains before getting enough data needed. Data read: ${n}, data need: ${s}`)),r()})),e.on("error",(e=>{clearTimeout(l),o(e)}))}))}async function streamToBuffer2(e,t,a){let r=0;const i=t.length;return new Promise(((n,s)=>{e.on("readable",(()=>{let n=e.read();n&&("string"==typeof n&&(n=Buffer.from(n,a)),r+n.length>i?s(new Error(`Stream exceeds buffer size. Buffer size: ${i}`)):(t.fill(n,r,r+n.length),r+=n.length))})),e.on("end",(()=>{n(r)})),e.on("error",s)}))}async function readStreamToLocalFile(e,t){return new Promise(((a,r)=>{const i=fs__namespace.createWriteStream(t);e.on("error",(e=>{r(e)})),i.on("error",(e=>{r(e)})),i.on("close",a),e.pipe(i)}))}const fsStat=util__namespace.promisify(fs__namespace.stat),fsCreateReadStream=fs__namespace.createReadStream;class BlobClient extends StorageClient{get name(){return this._name}get containerName(){return this._containerName}constructor(e,t,a,r){let i,n;if(r=r||{},isPipelineLike(t))n=e,i=t;else if(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t))n=e,i=newPipeline(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,l=extractConnectionStringParts(e);if("AccountConnString"===l.kind){if(!coreUtil.isNode)throw new Error("Account connection string is only supported in Node.js environment");{const e=new StorageSharedKeyCredential(l.accountName,l.accountKey);n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=coreRestPipeline.getDefaultProxySettings(l.proxyUri)),i=newPipeline(e,r)}}else{if("SASConnString"!==l.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+l.accountSas,i=newPipeline(new AnonymousCredential,r)}}}else n=e,a&&"string"!=typeof a&&(r=a),i=newPipeline(new AnonymousCredential,r);super(n,i),({blobName:this._name,containerName:this._containerName}=this.getBlobAndContainerNamesFromUrl()),this.blobContext=this.storageClientContext.blob,this._snapshot=getURLParameter(this.url,URLConstants.Parameters.SNAPSHOT),this._versionId=getURLParameter(this.url,URLConstants.Parameters.VERSIONID)}withSnapshot(e){return new BlobClient(setURLParameter(this.url,URLConstants.Parameters.SNAPSHOT,0===e.length?void 0:e),this.pipeline)}withVersion(e){return new BlobClient(setURLParameter(this.url,URLConstants.Parameters.VERSIONID,0===e.length?void 0:e),this.pipeline)}getAppendBlobClient(){return new AppendBlobClient(this.url,this.pipeline)}getBlockBlobClient(){return new BlockBlobClient(this.url,this.pipeline)}getPageBlobClient(){return new PageBlobClient(this.url,this.pipeline)}async download(e=0,t,a={}){return a.conditions=a.conditions||{},a.conditions=a.conditions||{},ensureCpkIfSpecified(a.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlobClient-download",a,(async r=>{var i;const n=assertResponse(await this.blobContext.download({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onDownloadProgress:coreUtil.isNode?void 0:a.onProgress},range:0!==e||t?rangeToString({offset:e,count:t}):void 0,rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey,tracingOptions:r.tracingOptions})),s=Object.assign(Object.assign({},n),{_response:n._response,objectReplicationDestinationPolicyId:n.objectReplicationPolicyId,objectReplicationSourceProperties:parseObjectReplicationRecord(n.objectReplicationRules)});if(!coreUtil.isNode)return s;if((void 0===a.maxRetryRequests||a.maxRetryRequests<0)&&(a.maxRetryRequests=5),void 0===n.contentLength)throw new RangeError("File download response doesn't contain valid content length header");if(!n.etag)throw new RangeError("File download response doesn't contain valid etag header");return new BlobDownloadResponse(s,(async t=>{var r;const i={leaseAccessConditions:a.conditions,modifiedAccessConditions:{ifMatch:a.conditions.ifMatch||n.etag,ifModifiedSince:a.conditions.ifModifiedSince,ifNoneMatch:a.conditions.ifNoneMatch,ifUnmodifiedSince:a.conditions.ifUnmodifiedSince,ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions},range:rangeToString({count:e+n.contentLength-t,offset:t}),rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey};return(await this.blobContext.download(Object.assign({abortSignal:a.abortSignal},i))).readableStreamBody}),e,n.contentLength,{maxRetryRequests:a.maxRetryRequests,onProgress:a.onProgress})}))}async exists(e={}){return tracingClient.withSpan("BlobClient-exists",e,(async t=>{try{return ensureCpkIfSpecified(e.customerProvidedKey,this.isHttps),await this.getProperties({abortSignal:e.abortSignal,customerProvidedKey:e.customerProvidedKey,conditions:e.conditions,tracingOptions:t.tracingOptions}),!0}catch(e){if(404===e.statusCode)return!1;if(409===e.statusCode&&("BlobUsesCustomerSpecifiedEncryption"===e.details.errorCode||e.details.errorCode===BlobDoesNotUseCustomerSpecifiedEncryption))return!0;throw e}}))}async getProperties(e={}){return e.conditions=e.conditions||{},ensureCpkIfSpecified(e.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlobClient-getProperties",e,(async t=>{var a;const r=assertResponse(await this.blobContext.getProperties({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,tracingOptions:t.tracingOptions}));return Object.assign(Object.assign({},r),{_response:r._response,objectReplicationDestinationPolicyId:r.objectReplicationPolicyId,objectReplicationSourceProperties:parseObjectReplicationRecord(r.objectReplicationRules)})}))}async delete(e={}){return e.conditions=e.conditions||{},tracingClient.withSpan("BlobClient-delete",e,(async t=>{var a;return assertResponse(await this.blobContext.delete({abortSignal:e.abortSignal,deleteSnapshots:e.deleteSnapshots,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async deleteIfExists(e={}){return tracingClient.withSpan("BlobClient-deleteIfExists",e,(async e=>{var t,a;try{const t=assertResponse(await this.delete(e));return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("BlobNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async undelete(e={}){return tracingClient.withSpan("BlobClient-undelete",e,(async t=>assertResponse(await this.blobContext.undelete({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async setHTTPHeaders(e,t={}){return t.conditions=t.conditions||{},ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlobClient-setHTTPHeaders",t,(async a=>{var r;return assertResponse(await this.blobContext.setHttpHeaders({abortSignal:t.abortSignal,blobHttpHeaders:e,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}))}))}async setMetadata(e,t={}){return t.conditions=t.conditions||{},ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlobClient-setMetadata",t,(async a=>{var r;return assertResponse(await this.blobContext.setMetadata({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,tracingOptions:a.tracingOptions}))}))}async setTags(e,t={}){return tracingClient.withSpan("BlobClient-setTags",t,(async a=>{var r;return assertResponse(await this.blobContext.setTags({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions,tags:toBlobTags(e)}))}))}async getTags(e={}){return tracingClient.withSpan("BlobClient-getTags",e,(async t=>{var a;const r=assertResponse(await this.blobContext.getTags({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}));return Object.assign(Object.assign({},r),{_response:r._response,tags:toTags({blobTagSet:r.blobTagSet})||{}})}))}getBlobLeaseClient(e){return new BlobLeaseClient(this,e)}async createSnapshot(e={}){return e.conditions=e.conditions||{},ensureCpkIfSpecified(e.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlobClient-createSnapshot",e,(async t=>{var a;return assertResponse(await this.blobContext.createSnapshot({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,tracingOptions:t.tracingOptions}))}))}async beginCopyFromURL(e,t={}){const a=new BlobBeginCopyFromUrlPoller({blobClient:{abortCopyFromURL:(...e)=>this.abortCopyFromURL(...e),getProperties:(...e)=>this.getProperties(...e),startCopyFromURL:(...e)=>this.startCopyFromURL(...e)},copySource:e,intervalInMs:t.intervalInMs,onProgress:t.onProgress,resumeFrom:t.resumeFrom,startCopyFromURLOptions:t});return await a.poll(),a}async abortCopyFromURL(e,t={}){return tracingClient.withSpan("BlobClient-abortCopyFromURL",t,(async a=>assertResponse(await this.blobContext.abortCopyFromURL(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,tracingOptions:a.tracingOptions}))))}async syncCopyFromURL(e,t={}){return t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{},tracingClient.withSpan("BlobClient-syncCopyFromURL",t,(async a=>{var r,i,n,s,o,l,m;return assertResponse(await this.blobContext.copyFromURL(e,{abortSignal:t.abortSignal,metadata:t.metadata,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(i=t.sourceConditions)||void 0===i?void 0:i.ifMatch,sourceIfModifiedSince:null===(n=t.sourceConditions)||void 0===n?void 0:n.ifModifiedSince,sourceIfNoneMatch:null===(s=t.sourceConditions)||void 0===s?void 0:s.ifNoneMatch,sourceIfUnmodifiedSince:null===(o=t.sourceConditions)||void 0===o?void 0:o.ifUnmodifiedSince},sourceContentMD5:t.sourceContentMD5,copySourceAuthorization:httpAuthorizationToString(t.sourceAuthorization),tier:toAccessTier(t.tier),blobTagsString:toBlobTagsString(t.tags),immutabilityPolicyExpiry:null===(l=t.immutabilityPolicy)||void 0===l?void 0:l.expiriesOn,immutabilityPolicyMode:null===(m=t.immutabilityPolicy)||void 0===m?void 0:m.policyMode,legalHold:t.legalHold,encryptionScope:t.encryptionScope,copySourceTags:t.copySourceTags,tracingOptions:a.tracingOptions}))}))}async setAccessTier(e,t={}){return tracingClient.withSpan("BlobClient-setAccessTier",t,(async a=>{var r;return assertResponse(await this.blobContext.setTier(toAccessTier(e),{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),rehydratePriority:t.rehydratePriority,tracingOptions:a.tracingOptions}))}))}async downloadToBuffer(e,t,a,r={}){var i;let n,s=0,o=0,l=r;e instanceof Buffer?(n=e,s=t||0,o="number"==typeof a?a:0):(s="number"==typeof e?e:0,o="number"==typeof t?t:0,l=a||{});let m=null!==(i=l.blockSize)&&void 0!==i?i:0;if(m<0)throw new RangeError("blockSize option must be >= 0");if(0===m&&(m=4194304),s<0)throw new RangeError("offset option must be >= 0");if(o&&o<=0)throw new RangeError("count option must be greater than 0");return l.conditions||(l.conditions={}),tracingClient.withSpan("BlobClient-downloadToBuffer",l,(async e=>{if(!o){const t=await this.getProperties(Object.assign(Object.assign({},l),{tracingOptions:e.tracingOptions}));if(o=t.contentLength-s,o<0)throw new RangeError(`offset ${s} shouldn't be larger than blob size ${t.contentLength}`)}if(!n)try{n=Buffer.alloc(o)}catch(e){throw new Error(`Unable to allocate the buffer of size: ${o}(in bytes). Please try passing your own buffer to the "downloadToBuffer" method or try using other methods like "download" or "downloadToFile".\t ${e.message}`)}if(n.length<o)throw new RangeError(`The buffer's size should be equal to or larger than the request count of bytes: ${o}`);let t=0;const a=new Batch(l.concurrency);for(let r=s;r<s+o;r+=m)a.addOperation((async()=>{let a=s+o;r+m<a&&(a=r+m);const i=(await this.download(r,a-r,{abortSignal:l.abortSignal,conditions:l.conditions,maxRetryRequests:l.maxRetryRequestsPerBlock,customerProvidedKey:l.customerProvidedKey,tracingOptions:e.tracingOptions})).readableStreamBody;await streamToBuffer(i,n,r-s,a-s),t+=a-r,l.onProgress&&l.onProgress({loadedBytes:t})}));return await a.do(),n}))}async downloadToFile(e,t=0,a,r={}){return tracingClient.withSpan("BlobClient-downloadToFile",r,(async i=>{const n=await this.download(t,a,Object.assign(Object.assign({},r),{tracingOptions:i.tracingOptions}));return n.readableStreamBody&&await readStreamToLocalFile(n.readableStreamBody,e),n.blobDownloadStream=void 0,n}))}getBlobAndContainerNamesFromUrl(){let e,t;try{const a=new URL(this.url);if("blob"===a.host.split(".")[1]){const r=a.pathname.match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}else if(isIpEndpointStyle(a)){const r=a.pathname.match("/([^/]*)/([^/]*)(/(.*))?");e=r[2],t=r[4]}else{const r=a.pathname.match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}if(e=decodeURIComponent(e),t=decodeURIComponent(t),t=t.replace(/\\/g,"/"),!e)throw new Error("Provided containerName is invalid.");return{blobName:t,containerName:e}}catch(e){throw new Error("Unable to extract blobName and containerName with provided information.")}}async startCopyFromURL(e,t={}){return tracingClient.withSpan("BlobClient-startCopyFromURL",t,(async a=>{var r,i,n;return t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{},assertResponse(await this.blobContext.startCopyFromURL(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince,sourceIfTags:t.sourceConditions.tagConditions},immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,rehydratePriority:t.rehydratePriority,tier:toAccessTier(t.tier),blobTagsString:toBlobTagsString(t.tags),sealBlob:t.sealBlob,tracingOptions:a.tracingOptions}))}))}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof StorageSharedKeyCredential))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=generateBlobSASQueryParameters(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).toString();t(appendToURLQuery(this.url,a))}))}generateSasStringToSign(e){if(!(this.credential instanceof StorageSharedKeyCredential))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");return generateBlobSASQueryParametersInternal(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).stringToSign}generateUserDelegationSasUrl(e,t){return new Promise((a=>{const r=generateBlobSASQueryParameters(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),t,this.accountName).toString();a(appendToURLQuery(this.url,r))}))}generateUserDelegationSasStringToSign(e,t){return generateBlobSASQueryParametersInternal(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),t,this.accountName).stringToSign}async deleteImmutabilityPolicy(e={}){return tracingClient.withSpan("BlobClient-deleteImmutabilityPolicy",e,(async e=>assertResponse(await this.blobContext.deleteImmutabilityPolicy({tracingOptions:e.tracingOptions}))))}async setImmutabilityPolicy(e,t={}){return tracingClient.withSpan("BlobClient-setImmutabilityPolicy",t,(async t=>assertResponse(await this.blobContext.setImmutabilityPolicy({immutabilityPolicyExpiry:e.expiriesOn,immutabilityPolicyMode:e.policyMode,tracingOptions:t.tracingOptions}))))}async setLegalHold(e,t={}){return tracingClient.withSpan("BlobClient-setLegalHold",t,(async t=>assertResponse(await this.blobContext.setLegalHold(e,{tracingOptions:t.tracingOptions}))))}async getAccountInfo(e={}){return tracingClient.withSpan("BlobClient-getAccountInfo",e,(async t=>assertResponse(await this.blobContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}}class AppendBlobClient extends BlobClient{constructor(e,t,a,r){let i,n;if(r=r||{},isPipelineLike(t))n=e,i=t;else if(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t))n=e,i=newPipeline(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,l=extractConnectionStringParts(e);if("AccountConnString"===l.kind){if(!coreUtil.isNode)throw new Error("Account connection string is only supported in Node.js environment");{const e=new StorageSharedKeyCredential(l.accountName,l.accountKey);n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=coreRestPipeline.getDefaultProxySettings(l.proxyUri)),i=newPipeline(e,r)}}else{if("SASConnString"!==l.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+l.accountSas,i=newPipeline(new AnonymousCredential,r)}}}else n=e,i=newPipeline(new AnonymousCredential,r);super(n,i),this.appendBlobContext=this.storageClientContext.appendBlob}withSnapshot(e){return new AppendBlobClient(setURLParameter(this.url,URLConstants.Parameters.SNAPSHOT,0===e.length?void 0:e),this.pipeline)}async create(e={}){return e.conditions=e.conditions||{},ensureCpkIfSpecified(e.customerProvidedKey,this.isHttps),tracingClient.withSpan("AppendBlobClient-create",e,(async t=>{var a,r,i;return assertResponse(await this.appendBlobContext.create(0,{abortSignal:e.abortSignal,blobHttpHeaders:e.blobHTTPHeaders,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,immutabilityPolicyExpiry:null===(r=e.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(i=e.immutabilityPolicy)||void 0===i?void 0:i.policyMode,legalHold:e.legalHold,blobTagsString:toBlobTagsString(e.tags),tracingOptions:t.tracingOptions}))}))}async createIfNotExists(e={}){const t={ifNoneMatch:"*"};return tracingClient.withSpan("AppendBlobClient-createIfNotExists",e,(async e=>{var a,r;try{const a=assertResponse(await this.create(Object.assign(Object.assign({},e),{conditions:t})));return Object.assign(Object.assign({succeeded:!0},a),{_response:a._response})}catch(e){if("BlobAlreadyExists"===(null===(a=e.details)||void 0===a?void 0:a.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(r=e.response)||void 0===r?void 0:r.parsedHeaders),{_response:e.response});throw e}}))}async seal(e={}){return e.conditions=e.conditions||{},tracingClient.withSpan("AppendBlobClient-seal",e,(async t=>{var a;return assertResponse(await this.appendBlobContext.seal({abortSignal:e.abortSignal,appendPositionAccessConditions:e.conditions,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async appendBlock(e,t,a={}){return a.conditions=a.conditions||{},ensureCpkIfSpecified(a.customerProvidedKey,this.isHttps),tracingClient.withSpan("AppendBlobClient-appendBlock",a,(async r=>{var i;return assertResponse(await this.appendBlobContext.appendBlock(t,e,{abortSignal:a.abortSignal,appendPositionAccessConditions:a.conditions,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},transactionalContentMD5:a.transactionalContentMD5,transactionalContentCrc64:a.transactionalContentCrc64,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}))}))}async appendBlockFromURL(e,t,a,r={}){return r.conditions=r.conditions||{},r.sourceConditions=r.sourceConditions||{},ensureCpkIfSpecified(r.customerProvidedKey,this.isHttps),tracingClient.withSpan("AppendBlobClient-appendBlockFromURL",r,(async i=>{var n,s,o,l,m;return assertResponse(await this.appendBlobContext.appendBlockFromUrl(e,0,{abortSignal:r.abortSignal,sourceRange:rangeToString({offset:t,count:a}),sourceContentMD5:r.sourceContentMD5,sourceContentCrc64:r.sourceContentCrc64,leaseAccessConditions:r.conditions,appendPositionAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(s=r.sourceConditions)||void 0===s?void 0:s.ifMatch,sourceIfModifiedSince:null===(o=r.sourceConditions)||void 0===o?void 0:o.ifModifiedSince,sourceIfNoneMatch:null===(l=r.sourceConditions)||void 0===l?void 0:l.ifNoneMatch,sourceIfUnmodifiedSince:null===(m=r.sourceConditions)||void 0===m?void 0:m.ifUnmodifiedSince},copySourceAuthorization:httpAuthorizationToString(r.sourceAuthorization),cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))}))}}class BlockBlobClient extends BlobClient{constructor(e,t,a,r){let i,n;if(r=r||{},isPipelineLike(t))n=e,i=t;else if(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t))n=e,i=newPipeline(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,l=extractConnectionStringParts(e);if("AccountConnString"===l.kind){if(!coreUtil.isNode)throw new Error("Account connection string is only supported in Node.js environment");{const e=new StorageSharedKeyCredential(l.accountName,l.accountKey);n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=coreRestPipeline.getDefaultProxySettings(l.proxyUri)),i=newPipeline(e,r)}}else{if("SASConnString"!==l.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+l.accountSas,i=newPipeline(new AnonymousCredential,r)}}}else n=e,a&&"string"!=typeof a&&(r=a),i=newPipeline(new AnonymousCredential,r);super(n,i),this.blockBlobContext=this.storageClientContext.blockBlob,this._blobContext=this.storageClientContext.blob}withSnapshot(e){return new BlockBlobClient(setURLParameter(this.url,URLConstants.Parameters.SNAPSHOT,0===e.length?void 0:e),this.pipeline)}async query(e,t={}){if(ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),!coreUtil.isNode)throw new Error("This operation currently is only supported in Node.js.");return tracingClient.withSpan("BlockBlobClient-query",t,(async a=>{var r;const i=assertResponse(await this._blobContext.query({abortSignal:t.abortSignal,queryRequest:{queryType:"SQL",expression:e,inputSerialization:toQuerySerialization(t.inputTextConfiguration),outputSerialization:toQuerySerialization(t.outputTextConfiguration)},leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,tracingOptions:a.tracingOptions}));return new BlobQueryResponse(i,{abortSignal:t.abortSignal,onProgress:t.onProgress,onError:t.onError})}))}async upload(e,t,a={}){return a.conditions=a.conditions||{},ensureCpkIfSpecified(a.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlockBlobClient-upload",a,(async r=>{var i,n,s;return assertResponse(await this.blockBlobContext.upload(t,e,{abortSignal:a.abortSignal,blobHttpHeaders:a.blobHTTPHeaders,leaseAccessConditions:a.conditions,metadata:a.metadata,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,immutabilityPolicyExpiry:null===(n=a.immutabilityPolicy)||void 0===n?void 0:n.expiriesOn,immutabilityPolicyMode:null===(s=a.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:a.legalHold,tier:toAccessTier(a.tier),blobTagsString:toBlobTagsString(a.tags),tracingOptions:r.tracingOptions}))}))}async syncUploadFromURL(e,t={}){return t.conditions=t.conditions||{},ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlockBlobClient-syncUploadFromURL",t,(async a=>{var r,i,n,s,o,l;return assertResponse(await this.blockBlobContext.putBlobFromUrl(0,e,Object.assign(Object.assign({},t),{blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(i=t.sourceConditions)||void 0===i?void 0:i.ifMatch,sourceIfModifiedSince:null===(n=t.sourceConditions)||void 0===n?void 0:n.ifModifiedSince,sourceIfNoneMatch:null===(s=t.sourceConditions)||void 0===s?void 0:s.ifNoneMatch,sourceIfUnmodifiedSince:null===(o=t.sourceConditions)||void 0===o?void 0:o.ifUnmodifiedSince,sourceIfTags:null===(l=t.sourceConditions)||void 0===l?void 0:l.tagConditions},cpkInfo:t.customerProvidedKey,copySourceAuthorization:httpAuthorizationToString(t.sourceAuthorization),tier:toAccessTier(t.tier),blobTagsString:toBlobTagsString(t.tags),copySourceTags:t.copySourceTags,tracingOptions:a.tracingOptions})))}))}async stageBlock(e,t,a,r={}){return ensureCpkIfSpecified(r.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlockBlobClient-stageBlock",r,(async i=>assertResponse(await this.blockBlobContext.stageBlock(e,a,t,{abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,requestOptions:{onUploadProgress:r.onProgress},transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))))}async stageBlockFromURL(e,t,a=0,r,i={}){return ensureCpkIfSpecified(i.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlockBlobClient-stageBlockFromURL",i,(async n=>assertResponse(await this.blockBlobContext.stageBlockFromURL(e,0,t,{abortSignal:i.abortSignal,leaseAccessConditions:i.conditions,sourceContentMD5:i.sourceContentMD5,sourceContentCrc64:i.sourceContentCrc64,sourceRange:0!==a||r?rangeToString({offset:a,count:r}):void 0,cpkInfo:i.customerProvidedKey,encryptionScope:i.encryptionScope,copySourceAuthorization:httpAuthorizationToString(i.sourceAuthorization),tracingOptions:n.tracingOptions}))))}async commitBlockList(e,t={}){return t.conditions=t.conditions||{},ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),tracingClient.withSpan("BlockBlobClient-commitBlockList",t,(async a=>{var r,i,n;return assertResponse(await this.blockBlobContext.commitBlockList({latest:e},{abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,tier:toAccessTier(t.tier),blobTagsString:toBlobTagsString(t.tags),tracingOptions:a.tracingOptions}))}))}async getBlockList(e,t={}){return tracingClient.withSpan("BlockBlobClient-getBlockList",t,(async a=>{var r;const i=assertResponse(await this.blockBlobContext.getBlockList(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}));return i.committedBlocks||(i.committedBlocks=[]),i.uncommittedBlocks||(i.uncommittedBlocks=[]),i}))}async uploadData(e,t={}){return tracingClient.withSpan("BlockBlobClient-uploadData",t,(async t=>{if(coreUtil.isNode){let a;return a=e instanceof Buffer?e:e instanceof ArrayBuffer?Buffer.from(e):Buffer.from(e.buffer,e.byteOffset,e.byteLength),this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.byteLength,t)}{const a=new Blob([e]);return this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.size,t)}}))}async uploadBrowserData(e,t={}){return tracingClient.withSpan("BlockBlobClient-uploadBrowserData",t,(async t=>{const a=new Blob([e]);return this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.size,t)}))}async uploadSeekableInternal(e,t,a={}){var r,i;let n=null!==(r=a.blockSize)&&void 0!==r?r:0;if(n<0||n>4194304e3)throw new RangeError("blockSize option must be >= 0 and <= 4194304000");const s=null!==(i=a.maxSingleShotSize)&&void 0!==i?i:268435456;if(s<0||s>268435456)throw new RangeError("maxSingleShotSize option must be >= 0 and <= 268435456");if(0===n){if(t>2097152e8)throw new RangeError(`${t} is too larger to upload to a block blob.`);t>s&&(n=Math.ceil(t/5e4),n<4194304&&(n=4194304))}return a.blobHTTPHeaders||(a.blobHTTPHeaders={}),a.conditions||(a.conditions={}),tracingClient.withSpan("BlockBlobClient-uploadSeekableInternal",a,(async r=>{if(t<=s)return assertResponse(await this.upload(e(0,t),t,r));const i=Math.floor((t-1)/n)+1;if(i>5e4)throw new RangeError("The buffer's size is too big or the BlockSize is too small;the number of blocks must be <= 50000");const o=[],l=coreUtil.randomUUID();let m=0;const c=new Batch(a.concurrency);for(let s=0;s<i;s++)c.addOperation((async()=>{const c=generateBlockID(l,s),d=n*s,p=(s===i-1?t:d+n)-d;o.push(c),await this.stageBlock(c,e(d,p),p,{abortSignal:a.abortSignal,conditions:a.conditions,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}),m+=p,a.onProgress&&a.onProgress({loadedBytes:m})}));return await c.do(),this.commitBlockList(o,r)}))}async uploadFile(e,t={}){return tracingClient.withSpan("BlockBlobClient-uploadFile",t,(async a=>{const r=(await fsStat(e)).size;return this.uploadSeekableInternal(((t,a)=>()=>fsCreateReadStream(e,{autoClose:!0,end:a?t+a-1:1/0,start:t})),r,Object.assign(Object.assign({},t),{tracingOptions:a.tracingOptions}))}))}async uploadStream(e,t=8388608,a=5,r={}){return r.blobHTTPHeaders||(r.blobHTTPHeaders={}),r.conditions||(r.conditions={}),tracingClient.withSpan("BlockBlobClient-uploadStream",r,(async i=>{let n=0;const s=coreUtil.randomUUID();let o=0;const l=[],m=new BufferScheduler(e,t,a,(async(e,t)=>{const a=generateBlockID(s,n);l.push(a),n++,await this.stageBlock(a,e,t,{customerProvidedKey:r.customerProvidedKey,conditions:r.conditions,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}),o+=t,r.onProgress&&r.onProgress({loadedBytes:o})}),Math.ceil(a/4*3));return await m.do(),assertResponse(await this.commitBlockList(l,Object.assign(Object.assign({},r),{tracingOptions:i.tracingOptions})))}))}}class PageBlobClient extends BlobClient{constructor(e,t,a,r){let i,n;if(r=r||{},isPipelineLike(t))n=e,i=t;else if(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t))n=e,i=newPipeline(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,l=extractConnectionStringParts(e);if("AccountConnString"===l.kind){if(!coreUtil.isNode)throw new Error("Account connection string is only supported in Node.js environment");{const e=new StorageSharedKeyCredential(l.accountName,l.accountKey);n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=coreRestPipeline.getDefaultProxySettings(l.proxyUri)),i=newPipeline(e,r)}}else{if("SASConnString"!==l.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=appendToURLPath(appendToURLPath(l.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+l.accountSas,i=newPipeline(new AnonymousCredential,r)}}}else n=e,i=newPipeline(new AnonymousCredential,r);super(n,i),this.pageBlobContext=this.storageClientContext.pageBlob}withSnapshot(e){return new PageBlobClient(setURLParameter(this.url,URLConstants.Parameters.SNAPSHOT,0===e.length?void 0:e),this.pipeline)}async create(e,t={}){return t.conditions=t.conditions||{},ensureCpkIfSpecified(t.customerProvidedKey,this.isHttps),tracingClient.withSpan("PageBlobClient-create",t,(async a=>{var r,i,n;return assertResponse(await this.pageBlobContext.create(0,e,{abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,blobSequenceNumber:t.blobSequenceNumber,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,tier:toAccessTier(t.tier),blobTagsString:toBlobTagsString(t.tags),tracingOptions:a.tracingOptions}))}))}async createIfNotExists(e,t={}){return tracingClient.withSpan("PageBlobClient-createIfNotExists",t,(async a=>{var r,i;try{const r={ifNoneMatch:"*"},i=assertResponse(await this.create(e,Object.assign(Object.assign({},t),{conditions:r,tracingOptions:a.tracingOptions})));return Object.assign(Object.assign({succeeded:!0},i),{_response:i._response})}catch(e){if("BlobAlreadyExists"===(null===(r=e.details)||void 0===r?void 0:r.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(i=e.response)||void 0===i?void 0:i.parsedHeaders),{_response:e.response});throw e}}))}async uploadPages(e,t,a,r={}){return r.conditions=r.conditions||{},ensureCpkIfSpecified(r.customerProvidedKey,this.isHttps),tracingClient.withSpan("PageBlobClient-uploadPages",r,(async i=>{var n;return assertResponse(await this.pageBlobContext.uploadPages(a,e,{abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),requestOptions:{onUploadProgress:r.onProgress},range:rangeToString({offset:t,count:a}),sequenceNumberAccessConditions:r.conditions,transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))}))}async uploadPagesFromURL(e,t,a,r,i={}){return i.conditions=i.conditions||{},i.sourceConditions=i.sourceConditions||{},ensureCpkIfSpecified(i.customerProvidedKey,this.isHttps),tracingClient.withSpan("PageBlobClient-uploadPagesFromURL",i,(async n=>{var s,o,l,m,c;return assertResponse(await this.pageBlobContext.uploadPagesFromURL(e,rangeToString({offset:t,count:r}),0,rangeToString({offset:a,count:r}),{abortSignal:i.abortSignal,sourceContentMD5:i.sourceContentMD5,sourceContentCrc64:i.sourceContentCrc64,leaseAccessConditions:i.conditions,sequenceNumberAccessConditions:i.conditions,modifiedAccessConditions:Object.assign(Object.assign({},i.conditions),{ifTags:null===(s=i.conditions)||void 0===s?void 0:s.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(o=i.sourceConditions)||void 0===o?void 0:o.ifMatch,sourceIfModifiedSince:null===(l=i.sourceConditions)||void 0===l?void 0:l.ifModifiedSince,sourceIfNoneMatch:null===(m=i.sourceConditions)||void 0===m?void 0:m.ifNoneMatch,sourceIfUnmodifiedSince:null===(c=i.sourceConditions)||void 0===c?void 0:c.ifUnmodifiedSince},cpkInfo:i.customerProvidedKey,encryptionScope:i.encryptionScope,copySourceAuthorization:httpAuthorizationToString(i.sourceAuthorization),tracingOptions:n.tracingOptions}))}))}async clearPages(e=0,t,a={}){return a.conditions=a.conditions||{},tracingClient.withSpan("PageBlobClient-clearPages",a,(async r=>{var i;return assertResponse(await this.pageBlobContext.clearPages(0,{abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),range:rangeToString({offset:e,count:t}),sequenceNumberAccessConditions:a.conditions,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}))}))}async getPageRanges(e=0,t,a={}){return a.conditions=a.conditions||{},tracingClient.withSpan("PageBlobClient-getPageRanges",a,(async r=>{var i;return rangeResponseFromModel(assertResponse(await this.pageBlobContext.getPageRanges({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),range:rangeToString({offset:e,count:t}),tracingOptions:r.tracingOptions})))}))}async listPageRangesSegment(e=0,t,a,r={}){return tracingClient.withSpan("PageBlobClient-getPageRangesSegment",r,(async i=>{var n;return assertResponse(await this.pageBlobContext.getPageRanges({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),range:rangeToString({offset:e,count:t}),marker:a,maxPageSize:r.maxPageSize,tracingOptions:i.tracingOptions}))}))}listPageRangeItemSegments(){return tslib.__asyncGenerator(this,arguments,(function*(e=0,t,a,r={}){let i;if(a||void 0===a)do{i=yield tslib.__await(this.listPageRangesSegment(e,t,a,r)),a=i.continuationToken,yield yield tslib.__await(yield tslib.__await(i))}while(a)}))}listPageRangeItems(){return tslib.__asyncGenerator(this,arguments,(function*(e=0,t,a={}){var r,i,n,s;try{for(var o,l=!0,m=tslib.__asyncValues(this.listPageRangeItemSegments(e,t,undefined,a));!(r=(o=yield tslib.__await(m.next())).done);l=!0){s=o.value,l=!1;const e=s;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(ExtractPageRangeInfoItems(e))))}}catch(e){i={error:e}}finally{try{l||r||!(n=m.return)||(yield tslib.__await(n.call(m)))}finally{if(i)throw i.error}}}))}listPageRanges(e=0,t,a={}){a.conditions=a.conditions||{};const r=this.listPageRangeItems(e,t,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(r={})=>this.listPageRangeItemSegments(e,t,r.continuationToken,Object.assign({maxPageSize:r.maxPageSize},a))}}async getPageRangesDiff(e,t,a,r={}){return r.conditions=r.conditions||{},tracingClient.withSpan("PageBlobClient-getPageRangesDiff",r,(async i=>{var n;return rangeResponseFromModel(assertResponse(await this.pageBlobContext.getPageRangesDiff({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),prevsnapshot:a,range:rangeToString({offset:e,count:t}),tracingOptions:i.tracingOptions})))}))}async listPageRangesDiffSegment(e,t,a,r,i={}){return tracingClient.withSpan("PageBlobClient-getPageRangesDiffSegment",i,(async n=>{var s;return assertResponse(await this.pageBlobContext.getPageRangesDiff({abortSignal:null==i?void 0:i.abortSignal,leaseAccessConditions:null==i?void 0:i.conditions,modifiedAccessConditions:Object.assign(Object.assign({},null==i?void 0:i.conditions),{ifTags:null===(s=null==i?void 0:i.conditions)||void 0===s?void 0:s.tagConditions}),prevsnapshot:a,range:rangeToString({offset:e,count:t}),marker:r,maxPageSize:null==i?void 0:i.maxPageSize,tracingOptions:n.tracingOptions}))}))}listPageRangeDiffItemSegments(e,t,a,r,i){return tslib.__asyncGenerator(this,arguments,(function*(){let n;if(r||void 0===r)do{n=yield tslib.__await(this.listPageRangesDiffSegment(e,t,a,r,i)),r=n.continuationToken,yield yield tslib.__await(yield tslib.__await(n))}while(r)}))}listPageRangeDiffItems(e,t,a,r){return tslib.__asyncGenerator(this,arguments,(function*(){var i,n,s,o;try{for(var l,m=!0,c=tslib.__asyncValues(this.listPageRangeDiffItemSegments(e,t,a,undefined,r));!(i=(l=yield tslib.__await(c.next())).done);m=!0){o=l.value,m=!1;const e=o;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(ExtractPageRangeInfoItems(e))))}}catch(e){n={error:e}}finally{try{m||i||!(s=c.return)||(yield tslib.__await(s.call(c)))}finally{if(n)throw n.error}}}))}listPageRangesDiff(e,t,a,r={}){r.conditions=r.conditions||{};const i=this.listPageRangeDiffItems(e,t,a,Object.assign({},r));return{next:()=>i.next(),[Symbol.asyncIterator](){return this},byPage:(i={})=>this.listPageRangeDiffItemSegments(e,t,a,i.continuationToken,Object.assign({maxPageSize:i.maxPageSize},r))}}async getPageRangesDiffForManagedDisks(e,t,a,r={}){return r.conditions=r.conditions||{},tracingClient.withSpan("PageBlobClient-GetPageRangesDiffForManagedDisks",r,(async i=>{var n;return rangeResponseFromModel(assertResponse(await this.pageBlobContext.getPageRangesDiff({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),prevSnapshotUrl:a,range:rangeToString({offset:e,count:t}),tracingOptions:i.tracingOptions})))}))}async resize(e,t={}){return t.conditions=t.conditions||{},tracingClient.withSpan("PageBlobClient-resize",t,(async a=>{var r;return assertResponse(await this.pageBlobContext.resize(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),encryptionScope:t.encryptionScope,tracingOptions:a.tracingOptions}))}))}async updateSequenceNumber(e,t,a={}){return a.conditions=a.conditions||{},tracingClient.withSpan("PageBlobClient-updateSequenceNumber",a,(async r=>{var i;return assertResponse(await this.pageBlobContext.updateSequenceNumber(e,{abortSignal:a.abortSignal,blobSequenceNumber:t,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),tracingOptions:r.tracingOptions}))}))}async startCopyIncremental(e,t={}){return tracingClient.withSpan("PageBlobClient-startCopyIncremental",t,(async a=>{var r;return assertResponse(await this.pageBlobContext.copyIncremental(e,{abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}))}))}}async function getBodyAsText(e){let t=Buffer.alloc(4194304);const a=await streamToBuffer2(e.readableStreamBody,t);return t=t.slice(0,a),t.toString()}function utf8ByteLength(e){return Buffer.byteLength(e)}const HTTP_HEADER_DELIMITER=": ",SPACE_DELIMITER=" ",NOT_FOUND=-1;class BatchResponseParser{constructor(e,t){if(!e||!e.contentType)throw new RangeError("batchResponse is malformed or doesn't contain valid content-type.");if(!t||0===t.size)throw new RangeError("Invalid state: subRequests is not provided or size is 0.");this.batchResponse=e,this.subRequests=t,this.responseBatchBoundary=this.batchResponse.contentType.split("=")[1],this.perResponsePrefix=`--${this.responseBatchBoundary}\r\n`,this.batchResponseEnding=`--${this.responseBatchBoundary}--`}async parseBatchResponse(){if(this.batchResponse._response.status!==HTTPURLConnection.HTTP_ACCEPTED)throw new Error(`Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`);const e=(await getBodyAsText(this.batchResponse)).split(this.batchResponseEnding)[0].split(this.perResponsePrefix).slice(1),t=e.length;if(t!==this.subRequests.size&&1!==t)throw new Error("Invalid state: sub responses' count is not equal to sub requests' count.");const a=new Array(t);let r=0,i=0;for(let n=0;n<t;n++){const t=e[n],s={};s.headers=coreHttpCompat.toHttpHeadersLike(coreRestPipeline.createHttpHeaders());const o=t.split("\r\n");let l=!1,m=!1,c=!1,d=-1;for(const e of o)if(l)if(""!==e.trim())if(m)s.bodyAsText||(s.bodyAsText=""),s.bodyAsText+=e;else{if(-1===e.indexOf(": "))throw new Error(`Invalid state: find non-empty line '${e}' without HTTP header delimiter ': '.`);const t=e.split(": ");s.headers.set(t[0],t[1]),t[0]===HeaderConstants.X_MS_ERROR_CODE&&(s.errorCode=t[1],c=!0)}else m||(m=!0);else if(e.startsWith(HeaderConstants.CONTENT_ID)&&(d=parseInt(e.split(": ")[1])),e.startsWith("HTTP/1.1")){l=!0;const t=e.split(" ");s.status=parseInt(t[1]),s.statusMessage=t.slice(2).join(" ")}-1!==d&&Number.isInteger(d)&&d>=0&&d<this.subRequests.size&&void 0===a[d]?(s._request=this.subRequests.get(d),a[d]=s):logger.error(`subResponses[${n}] is dropped as the Content-ID is not found or invalid, Content-ID: ${d}`),c?i++:r++}return{subResponses:a,subResponsesSucceededCount:r,subResponsesFailedCount:i}}}var MutexLockStatus;!function(e){e[e.LOCKED=0]="LOCKED",e[e.UNLOCKED=1]="UNLOCKED"}(MutexLockStatus||(MutexLockStatus={}));class Mutex{static async lock(e){return new Promise((t=>{void 0===this.keys[e]||this.keys[e]===MutexLockStatus.UNLOCKED?(this.keys[e]=MutexLockStatus.LOCKED,t()):this.onUnlockEvent(e,(()=>{this.keys[e]=MutexLockStatus.LOCKED,t()}))}))}static async unlock(e){return new Promise((t=>{this.keys[e]===MutexLockStatus.LOCKED&&this.emitUnlockEvent(e),delete this.keys[e],t()}))}static onUnlockEvent(e,t){void 0===this.listeners[e]?this.listeners[e]=[t]:this.listeners[e].push(t)}static emitUnlockEvent(e){if(void 0!==this.listeners[e]&&this.listeners[e].length>0){const t=this.listeners[e].shift();setImmediate((()=>{t.call(this)}))}}}Mutex.keys={},Mutex.listeners={};class BlobBatch{constructor(){this.batch="batch",this.batchRequest=new InnerBatchRequest}getMultiPartContentType(){return this.batchRequest.getMultipartContentType()}getHttpRequestBody(){return this.batchRequest.getHttpRequestBody()}getSubRequests(){return this.batchRequest.getSubRequests()}async addSubRequestInternal(e,t){await Mutex.lock(this.batch);try{this.batchRequest.preAddSubRequest(e),await t(),this.batchRequest.postAddSubRequest(e)}finally{await Mutex.unlock(this.batch)}}setBatchType(e){if(this.batchType||(this.batchType=e),this.batchType!==e)throw new RangeError(`BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`)}async deleteBlob(e,t,a){let r,i;if("string"==typeof e&&(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t)))r=e,i=t;else{if(!(e instanceof BlobClient))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");r=e.url,i=e.credential,a=t}return a||(a={}),tracingClient.withSpan("BatchDeleteRequest-addSubRequest",a,(async e=>{this.setBatchType("delete"),await this.addSubRequestInternal({url:r,credential:i},(async()=>{await new BlobClient(r,this.batchRequest.createPipeline(i)).delete(e)}))}))}async setBlobAccessTier(e,t,a,r){let i,n,s;if("string"==typeof e&&(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t)))i=e,n=t,s=a;else{if(!(e instanceof BlobClient))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");i=e.url,n=e.credential,s=t,r=a}return r||(r={}),tracingClient.withSpan("BatchSetTierRequest-addSubRequest",r,(async e=>{this.setBatchType("setAccessTier"),await this.addSubRequestInternal({url:i,credential:n},(async()=>{await new BlobClient(i,this.batchRequest.createPipeline(n)).setAccessTier(s,e)}))}))}}class InnerBatchRequest{constructor(){this.operationCount=0,this.body="";const e=coreUtil.randomUUID();this.boundary=`batch_${e}`,this.subRequestPrefix=`--${this.boundary}\r\n${HeaderConstants.CONTENT_TYPE}: application/http\r\n${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`,this.multipartContentType=`multipart/mixed; boundary=${this.boundary}`,this.batchRequestEnding=`--${this.boundary}--`,this.subRequests=new Map}createPipeline(e){const t=coreRestPipeline.createEmptyPipeline();t.addPolicy(coreClient.serializationPolicy({stringifyXML:coreXml.stringifyXML,serializerOptions:{xml:{xmlCharKey:"#"}}}),{phase:"Serialize"}),t.addPolicy(batchHeaderFilterPolicy()),t.addPolicy(batchRequestAssemblePolicy(this),{afterPhase:"Sign"}),coreAuth.isTokenCredential(e)?t.addPolicy(coreRestPipeline.bearerTokenAuthenticationPolicy({credential:e,scopes:StorageOAuthScopes,challengeCallbacks:{authorizeRequestOnChallenge:coreClient.authorizeRequestOnTenantChallenge}}),{phase:"Sign"}):e instanceof StorageSharedKeyCredential&&t.addPolicy(storageSharedKeyCredentialPolicy({accountName:e.accountName,accountKey:e.accountKey}),{phase:"Sign"});const a=new Pipeline([]);return a._credential=e,a._corePipeline=t,a}appendSubRequestToBody(e){this.body+=[this.subRequestPrefix,`${HeaderConstants.CONTENT_ID}: ${this.operationCount}`,"",`${e.method.toString()} ${getURLPathAndQuery(e.url)} HTTP/1.1\r\n`].join("\r\n");for(const[t,a]of e.headers)this.body+=`${t}: ${a}\r\n`;this.body+="\r\n"}preAddSubRequest(e){if(this.operationCount>=256)throw new RangeError("Cannot exceed 256 sub requests in a single batch");const t=getURLPath(e.url);if(!t||""===t)throw new RangeError(`Invalid url for sub request: '${e.url}'`)}postAddSubRequest(e){this.subRequests.set(this.operationCount,e),this.operationCount++}getHttpRequestBody(){return`${this.body}${this.batchRequestEnding}\r\n`}getMultipartContentType(){return this.multipartContentType}getSubRequests(){return this.subRequests}}function batchRequestAssemblePolicy(e){return{name:"batchRequestAssemblePolicy",sendRequest:async t=>(e.appendSubRequestToBody(t),{request:t,status:200,headers:coreRestPipeline.createHttpHeaders()})}}function batchHeaderFilterPolicy(){return{name:"batchHeaderFilterPolicy",async sendRequest(e,t){let a="";for(const[t]of e.headers)iEqual(t,HeaderConstants.X_MS_VERSION)&&(a=t);return""!==a&&e.headers.delete(a),t(e)}}}class BlobBatchClient{constructor(e,t,a){let r;r=isPipelineLike(t)?t:newPipeline(t||new AnonymousCredential,a);const i=new StorageContextClient(e,getCoreClientOptions(r)),n=getURLPath(e);this.serviceOrContainerContext=n&&"/"!==n?i.container:i.service}createBatch(){return new BlobBatch}async deleteBlobs(e,t,a){const r=new BlobBatch;for(const i of e)"string"==typeof i?await r.deleteBlob(i,t,a):await r.deleteBlob(i,t);return this.submitBatch(r)}async setBlobsAccessTier(e,t,a,r){const i=new BlobBatch;for(const n of e)"string"==typeof n?await i.setBlobAccessTier(n,t,a,r):await i.setBlobAccessTier(n,t,a);return this.submitBatch(i)}async submitBatch(e,t={}){if(!e||0===e.getSubRequests().size)throw new RangeError("Batch request should contain one or more sub requests.");return tracingClient.withSpan("BlobBatchClient-submitBatch",t,(async t=>{const a=e.getHttpRequestBody(),r=assertResponse(await this.serviceOrContainerContext.submitBatch(utf8ByteLength(a),e.getMultiPartContentType(),a,Object.assign({},t))),i=new BatchResponseParser(r,e.getSubRequests()),n=await i.parseBatchResponse();return{_response:r._response,contentType:r.contentType,errorCode:r.errorCode,requestId:r.requestId,clientRequestId:r.clientRequestId,version:r.version,subResponses:n.subResponses,subResponsesSucceededCount:n.subResponsesSucceededCount,subResponsesFailedCount:n.subResponsesFailedCount}}))}}class ContainerClient extends StorageClient{get containerName(){return this._containerName}constructor(e,t,a){let r,i;if(a=a||{},isPipelineLike(t))i=e,r=t;else if(coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t))i=e,r=newPipeline(t,a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t)throw new Error("Expecting non-empty strings for containerName parameter");{const n=t,s=extractConnectionStringParts(e);if("AccountConnString"===s.kind){if(!coreUtil.isNode)throw new Error("Account connection string is only supported in Node.js environment");{const e=new StorageSharedKeyCredential(s.accountName,s.accountKey);i=appendToURLPath(s.url,encodeURIComponent(n)),a.proxyOptions||(a.proxyOptions=coreRestPipeline.getDefaultProxySettings(s.proxyUri)),r=newPipeline(e,a)}}else{if("SASConnString"!==s.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");i=appendToURLPath(s.url,encodeURIComponent(n))+"?"+s.accountSas,r=newPipeline(new AnonymousCredential,a)}}}else i=e,r=newPipeline(new AnonymousCredential,a);super(i,r),this._containerName=this.getContainerNameFromUrl(),this.containerContext=this.storageClientContext.container}async create(e={}){return tracingClient.withSpan("ContainerClient-create",e,(async e=>assertResponse(await this.containerContext.create(e))))}async createIfNotExists(e={}){return tracingClient.withSpan("ContainerClient-createIfNotExists",e,(async e=>{var t,a;try{const t=await this.create(e);return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("ContainerAlreadyExists"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async exists(e={}){return tracingClient.withSpan("ContainerClient-exists",e,(async t=>{try{return await this.getProperties({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}),!0}catch(e){if(404===e.statusCode)return!1;throw e}}))}getBlobClient(e){return new BlobClient(appendToURLPath(this.url,EscapePath(e)),this.pipeline)}getAppendBlobClient(e){return new AppendBlobClient(appendToURLPath(this.url,EscapePath(e)),this.pipeline)}getBlockBlobClient(e){return new BlockBlobClient(appendToURLPath(this.url,EscapePath(e)),this.pipeline)}getPageBlobClient(e){return new PageBlobClient(appendToURLPath(this.url,EscapePath(e)),this.pipeline)}async getProperties(e={}){return e.conditions||(e.conditions={}),tracingClient.withSpan("ContainerClient-getProperties",e,(async t=>assertResponse(await this.containerContext.getProperties(Object.assign(Object.assign({abortSignal:e.abortSignal},e.conditions),{tracingOptions:t.tracingOptions})))))}async delete(e={}){return e.conditions||(e.conditions={}),tracingClient.withSpan("ContainerClient-delete",e,(async t=>assertResponse(await this.containerContext.delete({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:e.conditions,tracingOptions:t.tracingOptions}))))}async deleteIfExists(e={}){return tracingClient.withSpan("ContainerClient-deleteIfExists",e,(async e=>{var t,a;try{const t=await this.delete(e);return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("ContainerNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async setMetadata(e,t={}){if(t.conditions||(t.conditions={}),t.conditions.ifUnmodifiedSince)throw new RangeError("the IfUnmodifiedSince must have their default values because they are ignored by the blob service");return tracingClient.withSpan("ContainerClient-setMetadata",t,(async a=>assertResponse(await this.containerContext.setMetadata({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:t.conditions,tracingOptions:a.tracingOptions}))))}async getAccessPolicy(e={}){return e.conditions||(e.conditions={}),tracingClient.withSpan("ContainerClient-getAccessPolicy",e,(async t=>{const a=assertResponse(await this.containerContext.getAccessPolicy({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,tracingOptions:t.tracingOptions})),r={_response:a._response,blobPublicAccess:a.blobPublicAccess,date:a.date,etag:a.etag,errorCode:a.errorCode,lastModified:a.lastModified,requestId:a.requestId,clientRequestId:a.clientRequestId,signedIdentifiers:[],version:a.version};for(const e of a){let t;e.accessPolicy&&(t={permissions:e.accessPolicy.permissions},e.accessPolicy.expiresOn&&(t.expiresOn=new Date(e.accessPolicy.expiresOn)),e.accessPolicy.startsOn&&(t.startsOn=new Date(e.accessPolicy.startsOn))),r.signedIdentifiers.push({accessPolicy:t,id:e.id})}return r}))}async setAccessPolicy(e,t,a={}){return a.conditions=a.conditions||{},tracingClient.withSpan("ContainerClient-setAccessPolicy",a,(async r=>{const i=[];for(const e of t||[])i.push({accessPolicy:{expiresOn:e.accessPolicy.expiresOn?truncatedISO8061Date(e.accessPolicy.expiresOn):"",permissions:e.accessPolicy.permissions,startsOn:e.accessPolicy.startsOn?truncatedISO8061Date(e.accessPolicy.startsOn):""},id:e.id});return assertResponse(await this.containerContext.setAccessPolicy({abortSignal:a.abortSignal,access:e,containerAcl:i,leaseAccessConditions:a.conditions,modifiedAccessConditions:a.conditions,tracingOptions:r.tracingOptions}))}))}getBlobLeaseClient(e){return new BlobLeaseClient(this,e)}async uploadBlockBlob(e,t,a,r={}){return tracingClient.withSpan("ContainerClient-uploadBlockBlob",r,(async r=>{const i=this.getBlockBlobClient(e),n=await i.upload(t,a,r);return{blockBlobClient:i,response:n}}))}async deleteBlob(e,t={}){return tracingClient.withSpan("ContainerClient-deleteBlob",t,(async a=>{let r=this.getBlobClient(e);return t.versionId&&(r=r.withVersion(t.versionId)),r.delete(a)}))}async listBlobFlatSegment(e,t={}){return tracingClient.withSpan("ContainerClient-listBlobFlatSegment",t,(async a=>{const r=assertResponse(await this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({marker:e},t),{tracingOptions:a.tracingOptions})));return Object.assign(Object.assign({},r),{_response:Object.assign(Object.assign({},r._response),{parsedBody:ConvertInternalResponseOfListBlobFlat(r._response.parsedBody)}),segment:Object.assign(Object.assign({},r.segment),{blobItems:r.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name),tags:toTags(e.blobTags),objectReplicationSourceProperties:parseObjectReplicationRecord(e.objectReplicationMetadata)})))})})}))}async listBlobHierarchySegment(e,t,a={}){return tracingClient.withSpan("ContainerClient-listBlobHierarchySegment",a,(async r=>{var i;const n=assertResponse(await this.containerContext.listBlobHierarchySegment(e,Object.assign(Object.assign({marker:t},a),{tracingOptions:r.tracingOptions})));return Object.assign(Object.assign({},n),{_response:Object.assign(Object.assign({},n._response),{parsedBody:ConvertInternalResponseOfListBlobHierarchy(n._response.parsedBody)}),segment:Object.assign(Object.assign({},n.segment),{blobItems:n.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name),tags:toTags(e.blobTags),objectReplicationSourceProperties:parseObjectReplicationRecord(e.objectReplicationMetadata)}))),blobPrefixes:null===(i=n.segment.blobPrefixes)||void 0===i?void 0:i.map((e=>Object.assign(Object.assign({},e),{name:BlobNameToString(e.name)})))})})}))}listSegments(e){return tslib.__asyncGenerator(this,arguments,(function*(e,t={}){let a;if(e||void 0===e)do{a=yield tslib.__await(this.listBlobFlatSegment(e,t)),e=a.continuationToken,yield yield tslib.__await(yield tslib.__await(a))}while(e)}))}listItems(){return tslib.__asyncGenerator(this,arguments,(function*(e={}){var t,a,r,i;try{for(var n,s=!0,o=tslib.__asyncValues(this.listSegments(undefined,e));!(t=(n=yield tslib.__await(o.next())).done);s=!0){i=n.value,s=!1;const e=i;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(e.segment.blobItems)))}}catch(e){a={error:e}}finally{try{s||t||!(r=o.return)||(yield tslib.__await(r.call(o)))}finally{if(a)throw a.error}}}))}listBlobsFlat(e={}){const t=[];e.includeCopy&&t.push("copy"),e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSnapshots&&t.push("snapshots"),e.includeVersions&&t.push("versions"),e.includeUncommitedBlobs&&t.push("uncommittedblobs"),e.includeTags&&t.push("tags"),e.includeDeletedWithVersions&&t.push("deletedwithversions"),e.includeImmutabilityPolicy&&t.push("immutabilitypolicy"),e.includeLegalHold&&t.push("legalhold"),""===e.prefix&&(e.prefix=void 0);const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}listHierarchySegments(e,t){return tslib.__asyncGenerator(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield tslib.__await(this.listBlobHierarchySegment(e,t,a)),t=r.continuationToken,yield yield tslib.__await(yield tslib.__await(r))}while(t)}))}listItemsByHierarchy(e){return tslib.__asyncGenerator(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,l=tslib.__asyncValues(this.listHierarchySegments(e,undefined,t));!(a=(s=yield tslib.__await(l.next())).done);o=!0){n=s.value,o=!1;const e=n.segment;if(e.blobPrefixes)for(const t of e.blobPrefixes)yield yield tslib.__await(Object.assign({kind:"prefix"},t));for(const t of e.blobItems)yield yield tslib.__await(Object.assign({kind:"blob"},t))}}catch(e){r={error:e}}finally{try{o||a||!(i=l.return)||(yield tslib.__await(i.call(l)))}finally{if(r)throw r.error}}}))}listBlobsByHierarchy(e,t={}){if(""===e)throw new RangeError("delimiter should contain one or more characters");const a=[];t.includeCopy&&a.push("copy"),t.includeDeleted&&a.push("deleted"),t.includeMetadata&&a.push("metadata"),t.includeSnapshots&&a.push("snapshots"),t.includeVersions&&a.push("versions"),t.includeUncommitedBlobs&&a.push("uncommittedblobs"),t.includeTags&&a.push("tags"),t.includeDeletedWithVersions&&a.push("deletedwithversions"),t.includeImmutabilityPolicy&&a.push("immutabilitypolicy"),t.includeLegalHold&&a.push("legalhold"),""===t.prefix&&(t.prefix=void 0);const r=Object.assign(Object.assign({},t),a.length>0?{include:a}:{}),i=this.listItemsByHierarchy(e,r);return{next:async()=>i.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.listHierarchySegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},r))}}async findBlobsByTagsSegment(e,t,a={}){return tracingClient.withSpan("ContainerClient-findBlobsByTagsSegment",a,(async r=>{const i=assertResponse(await this.containerContext.filterBlobs({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize,tracingOptions:r.tracingOptions}));return Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:toTags(e.tags),tagValue:a})}))})}))}findBlobsByTagsSegments(e,t){return tslib.__asyncGenerator(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield tslib.__await(this.findBlobsByTagsSegment(e,t,a)),r.blobs=r.blobs||[],t=r.continuationToken,yield yield tslib.__await(r)}while(t)}))}findBlobsByTagsItems(e){return tslib.__asyncGenerator(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,l=tslib.__asyncValues(this.findBlobsByTagsSegments(e,undefined,t));!(a=(s=yield tslib.__await(l.next())).done);o=!0){n=s.value,o=!1;const e=n;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(e.blobs)))}}catch(e){r={error:e}}finally{try{o||a||!(i=l.return)||(yield tslib.__await(i.call(l)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}async getAccountInfo(e={}){return tracingClient.withSpan("ContainerClient-getAccountInfo",e,(async t=>assertResponse(await this.containerContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}getContainerNameFromUrl(){let e;try{const t=new URL(this.url);if(e="blob"===t.hostname.split(".")[1]?t.pathname.split("/")[1]:isIpEndpointStyle(t)?t.pathname.split("/")[2]:t.pathname.split("/")[1],e=decodeURIComponent(e),!e)throw new Error("Provided containerName is invalid.");return e}catch(e){throw new Error("Unable to extract containerName with provided information.")}}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof StorageSharedKeyCredential))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=generateBlobSASQueryParameters(Object.assign({containerName:this._containerName},e),this.credential).toString();t(appendToURLQuery(this.url,a))}))}generateSasStringToSign(e){if(!(this.credential instanceof StorageSharedKeyCredential))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");return generateBlobSASQueryParametersInternal(Object.assign({containerName:this._containerName},e),this.credential).stringToSign}generateUserDelegationSasUrl(e,t){return new Promise((a=>{const r=generateBlobSASQueryParameters(Object.assign({containerName:this._containerName},e),t,this.accountName).toString();a(appendToURLQuery(this.url,r))}))}generateUserDelegationSasStringToSign(e,t){return generateBlobSASQueryParametersInternal(Object.assign({containerName:this._containerName},e),t,this.accountName).stringToSign}getBlobBatchClient(){return new BlobBatchClient(this.url,this.pipeline)}}class AccountSASPermissions{constructor(){this.read=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.add=!1,this.create=!1,this.update=!1,this.process=!1,this.tag=!1,this.filter=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new AccountSASPermissions;for(const a of e)switch(a){case"r":t.read=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"l":t.list=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"u":t.update=!0;break;case"p":t.process=!0;break;case"t":t.tag=!0;break;case"f":t.filter=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission character: ${a}`)}return t}static from(e){const t=new AccountSASPermissions;return e.read&&(t.read=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.filter&&(t.filter=!0),e.tag&&(t.tag=!0),e.list&&(t.list=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.update&&(t.update=!0),e.process&&(t.process=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.filter&&e.push("f"),this.tag&&e.push("t"),this.list&&e.push("l"),this.add&&e.push("a"),this.create&&e.push("c"),this.update&&e.push("u"),this.process&&e.push("p"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class AccountSASResourceTypes{constructor(){this.service=!1,this.container=!1,this.object=!1}static parse(e){const t=new AccountSASResourceTypes;for(const a of e)switch(a){case"s":t.service=!0;break;case"c":t.container=!0;break;case"o":t.object=!0;break;default:throw new RangeError(`Invalid resource type: ${a}`)}return t}toString(){const e=[];return this.service&&e.push("s"),this.container&&e.push("c"),this.object&&e.push("o"),e.join("")}}class AccountSASServices{constructor(){this.blob=!1,this.file=!1,this.queue=!1,this.table=!1}static parse(e){const t=new AccountSASServices;for(const a of e)switch(a){case"b":t.blob=!0;break;case"f":t.file=!0;break;case"q":t.queue=!0;break;case"t":t.table=!0;break;default:throw new RangeError(`Invalid service character: ${a}`)}return t}toString(){const e=[];return this.blob&&e.push("b"),this.table&&e.push("t"),this.queue&&e.push("q"),this.file&&e.push("f"),e.join("")}}function generateAccountSASQueryParameters(e,t){return generateAccountSASQueryParametersInternal(e,t).sasQueryParameters}function generateAccountSASQueryParametersInternal(e,t){const a=e.version?e.version:SERVICE_VERSION;if(e.permissions&&e.permissions.setImmutabilityPolicy&&a<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'y' permission.");if(e.permissions&&e.permissions.tag&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 't' permission.");if(e.permissions&&e.permissions.filter&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 'f' permission.");if(e.encryptionScope&&a<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");const r=AccountSASPermissions.parse(e.permissions.toString()),i=AccountSASServices.parse(e.services).toString(),n=AccountSASResourceTypes.parse(e.resourceTypes).toString();let s;s=a>="2020-12-06"?[t.accountName,r,i,n,e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",truncatedISO8061Date(e.expiresOn,!1),e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",a,e.encryptionScope?e.encryptionScope:"",""].join("\n"):[t.accountName,r,i,n,e.startsOn?truncatedISO8061Date(e.startsOn,!1):"",truncatedISO8061Date(e.expiresOn,!1),e.ipRange?ipRangeToString(e.ipRange):"",e.protocol?e.protocol:"",a,""].join("\n");const o=t.computeHMACSHA256(s);return{sasQueryParameters:new SASQueryParameters(a,o,r.toString(),i,n,e.protocol,e.startsOn,e.expiresOn,e.ipRange,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,e.encryptionScope),stringToSign:s}}class BlobServiceClient extends StorageClient{static fromConnectionString(e,t){t=t||{};const a=extractConnectionStringParts(e);if("AccountConnString"===a.kind){if(coreUtil.isNode){const e=new StorageSharedKeyCredential(a.accountName,a.accountKey);t.proxyOptions||(t.proxyOptions=coreRestPipeline.getDefaultProxySettings(a.proxyUri));const r=newPipeline(e,t);return new BlobServiceClient(a.url,r)}throw new Error("Account connection string is only supported in Node.js environment")}if("SASConnString"===a.kind){const e=newPipeline(new AnonymousCredential,t);return new BlobServiceClient(a.url+"?"+a.accountSas,e)}throw new Error("Connection string must be either an Account connection string or a SAS connection string")}constructor(e,t,a){let r;r=isPipelineLike(t)?t:coreUtil.isNode&&t instanceof StorageSharedKeyCredential||t instanceof AnonymousCredential||coreAuth.isTokenCredential(t)?newPipeline(t,a):newPipeline(new AnonymousCredential,a),super(e,r),this.serviceContext=this.storageClientContext.service}getContainerClient(e){return new ContainerClient(appendToURLPath(this.url,encodeURIComponent(e)),this.pipeline)}async createContainer(e,t={}){return tracingClient.withSpan("BlobServiceClient-createContainer",t,(async t=>{const a=this.getContainerClient(e),r=await a.create(t);return{containerClient:a,containerCreateResponse:r}}))}async deleteContainer(e,t={}){return tracingClient.withSpan("BlobServiceClient-deleteContainer",t,(async t=>this.getContainerClient(e).delete(t)))}async undeleteContainer(e,t,a={}){return tracingClient.withSpan("BlobServiceClient-undeleteContainer",a,(async r=>{const i=this.getContainerClient(a.destinationContainerName||e),n=i.storageClientContext.container;return{containerClient:i,containerUndeleteResponse:assertResponse(await n.restore({deletedContainerName:e,deletedContainerVersion:t,tracingOptions:r.tracingOptions}))}}))}async renameContainer(e,t,a={}){return tracingClient.withSpan("BlobServiceClient-renameContainer",a,(async r=>{var i;const n=this.getContainerClient(t),s=n.storageClientContext.container;return{containerClient:n,containerRenameResponse:assertResponse(await s.rename(e,Object.assign(Object.assign({},r),{sourceLeaseId:null===(i=a.sourceCondition)||void 0===i?void 0:i.leaseId})))}}))}async getProperties(e={}){return tracingClient.withSpan("BlobServiceClient-getProperties",e,(async t=>assertResponse(await this.serviceContext.getProperties({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async setProperties(e,t={}){return tracingClient.withSpan("BlobServiceClient-setProperties",t,(async a=>assertResponse(await this.serviceContext.setProperties(e,{abortSignal:t.abortSignal,tracingOptions:a.tracingOptions}))))}async getStatistics(e={}){return tracingClient.withSpan("BlobServiceClient-getStatistics",e,(async t=>assertResponse(await this.serviceContext.getStatistics({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async getAccountInfo(e={}){return tracingClient.withSpan("BlobServiceClient-getAccountInfo",e,(async t=>assertResponse(await this.serviceContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async listContainersSegment(e,t={}){return tracingClient.withSpan("BlobServiceClient-listContainersSegment",t,(async a=>assertResponse(await this.serviceContext.listContainersSegment(Object.assign(Object.assign({abortSignal:t.abortSignal,marker:e},t),{include:"string"==typeof t.include?[t.include]:t.include,tracingOptions:a.tracingOptions})))))}async findBlobsByTagsSegment(e,t,a={}){return tracingClient.withSpan("BlobServiceClient-findBlobsByTagsSegment",a,(async r=>{const i=assertResponse(await this.serviceContext.filterBlobs({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize,tracingOptions:r.tracingOptions}));return Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:toTags(e.tags),tagValue:a})}))})}))}findBlobsByTagsSegments(e,t){return tslib.__asyncGenerator(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield tslib.__await(this.findBlobsByTagsSegment(e,t,a)),r.blobs=r.blobs||[],t=r.continuationToken,yield yield tslib.__await(r)}while(t)}))}findBlobsByTagsItems(e){return tslib.__asyncGenerator(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,l=tslib.__asyncValues(this.findBlobsByTagsSegments(e,undefined,t));!(a=(s=yield tslib.__await(l.next())).done);o=!0){n=s.value,o=!1;const e=n;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(e.blobs)))}}catch(e){r={error:e}}finally{try{o||a||!(i=l.return)||(yield tslib.__await(i.call(l)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}listSegments(e){return tslib.__asyncGenerator(this,arguments,(function*(e,t={}){let a;if(e||void 0===e)do{a=yield tslib.__await(this.listContainersSegment(e,t)),a.containerItems=a.containerItems||[],e=a.continuationToken,yield yield tslib.__await(yield tslib.__await(a))}while(e)}))}listItems(){return tslib.__asyncGenerator(this,arguments,(function*(e={}){var t,a,r,i;try{for(var n,s=!0,o=tslib.__asyncValues(this.listSegments(undefined,e));!(t=(n=yield tslib.__await(o.next())).done);s=!0){i=n.value,s=!1;const e=i;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(e.containerItems)))}}catch(e){a={error:e}}finally{try{s||t||!(r=o.return)||(yield tslib.__await(r.call(o)))}finally{if(a)throw a.error}}}))}listContainers(e={}){""===e.prefix&&(e.prefix=void 0);const t=[];e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSystem&&t.push("system");const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}async getUserDelegationKey(e,t,a={}){return tracingClient.withSpan("BlobServiceClient-getUserDelegationKey",a,(async r=>{const i=assertResponse(await this.serviceContext.getUserDelegationKey({startsOn:truncatedISO8061Date(e,!1),expiresOn:truncatedISO8061Date(t,!1)},{abortSignal:a.abortSignal,tracingOptions:r.tracingOptions})),n={signedObjectId:i.signedObjectId,signedTenantId:i.signedTenantId,signedStartsOn:new Date(i.signedStartsOn),signedExpiresOn:new Date(i.signedExpiresOn),signedService:i.signedService,signedVersion:i.signedVersion,value:i.value};return Object.assign({_response:i._response,requestId:i.requestId,clientRequestId:i.clientRequestId,version:i.version,date:i.date,errorCode:i.errorCode},n)}))}getBlobBatchClient(){return new BlobBatchClient(this.url,this.pipeline)}generateAccountSasUrl(e,t=AccountSASPermissions.parse("r"),a="sco",r={}){if(!(this.credential instanceof StorageSharedKeyCredential))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(void 0===e){const t=new Date;e=new Date(t.getTime()+36e5)}const i=generateAccountSASQueryParameters(Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:AccountSASServices.parse("b").toString()},r),this.credential).toString();return appendToURLQuery(this.url,i)}generateSasStringToSign(e,t=AccountSASPermissions.parse("r"),a="sco",r={}){if(!(this.credential instanceof StorageSharedKeyCredential))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(void 0===e){const t=new Date;e=new Date(t.getTime()+36e5)}return generateAccountSASQueryParametersInternal(Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:AccountSASServices.parse("b").toString()},r),this.credential).stringToSign}}exports.KnownEncryptionAlgorithmType=void 0,(exports.KnownEncryptionAlgorithmType||(exports.KnownEncryptionAlgorithmType={})).AES256="AES256",Object.defineProperty(exports,"RestError",{enumerable:!0,get:function(){return coreRestPipeline.RestError}}),exports.AccountSASPermissions=AccountSASPermissions,exports.AccountSASResourceTypes=AccountSASResourceTypes,exports.AccountSASServices=AccountSASServices,exports.AnonymousCredential=AnonymousCredential,exports.AnonymousCredentialPolicy=AnonymousCredentialPolicy,exports.AppendBlobClient=AppendBlobClient,exports.BaseRequestPolicy=BaseRequestPolicy,exports.BlobBatch=BlobBatch,exports.BlobBatchClient=BlobBatchClient,exports.BlobClient=BlobClient,exports.BlobLeaseClient=BlobLeaseClient,exports.BlobSASPermissions=BlobSASPermissions,exports.BlobServiceClient=BlobServiceClient,exports.BlockBlobClient=BlockBlobClient,exports.ContainerClient=ContainerClient,exports.ContainerSASPermissions=ContainerSASPermissions,exports.Credential=Credential,exports.CredentialPolicy=CredentialPolicy,exports.PageBlobClient=PageBlobClient,exports.Pipeline=Pipeline,exports.SASQueryParameters=SASQueryParameters,exports.StorageBrowserPolicy=StorageBrowserPolicy,exports.StorageBrowserPolicyFactory=StorageBrowserPolicyFactory,exports.StorageOAuthScopes=StorageOAuthScopes,exports.StorageRetryPolicy=StorageRetryPolicy,exports.StorageRetryPolicyFactory=StorageRetryPolicyFactory,exports.StorageSharedKeyCredential=StorageSharedKeyCredential,exports.StorageSharedKeyCredentialPolicy=StorageSharedKeyCredentialPolicy,exports.generateAccountSASQueryParameters=generateAccountSASQueryParameters,exports.generateBlobSASQueryParameters=generateBlobSASQueryParameters,exports.getBlobServiceAccountAudience=getBlobServiceAccountAudience,exports.isPipelineLike=isPipelineLike,exports.logger=logger,exports.newPipeline=newPipeline;
//# sourceMappingURL=/sm/ee076701b49a7d30b58171e73730a0576ec17662cb5a4cc08306488907fd9b09.map